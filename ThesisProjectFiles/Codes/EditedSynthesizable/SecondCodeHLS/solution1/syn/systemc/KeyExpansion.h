// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _KeyExpansion_HH_
#define _KeyExpansion_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeyExpansion_sbox.h"
#include "KeyExpansion_Rcon.h"

namespace ap_rtl {

struct KeyExpansion : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > RoundKey_address0;
    sc_out< sc_logic > RoundKey_ce0;
    sc_out< sc_logic > RoundKey_we0;
    sc_out< sc_lv<8> > RoundKey_d0;
    sc_in< sc_lv<8> > RoundKey_q0;
    sc_out< sc_lv<8> > RoundKey_address1;
    sc_out< sc_logic > RoundKey_ce1;
    sc_out< sc_logic > RoundKey_we1;
    sc_out< sc_lv<8> > RoundKey_d1;
    sc_in< sc_lv<8> > RoundKey_q1;
    sc_out< sc_lv<5> > Key_address0;
    sc_out< sc_logic > Key_ce0;
    sc_in< sc_lv<32> > Key_q0;
    sc_out< sc_lv<5> > Key_address1;
    sc_out< sc_logic > Key_ce1;
    sc_in< sc_lv<32> > Key_q1;


    // Module declarations
    KeyExpansion(sc_module_name name);
    SC_HAS_PROCESS(KeyExpansion);

    ~KeyExpansion();

    sc_trace_file* mVcdFile;

    KeyExpansion_sbox* sbox_U;
    KeyExpansion_Rcon* Rcon_U;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_address0;
    sc_signal< sc_logic > sbox_ce0;
    sc_signal< sc_lv<8> > sbox_q0;
    sc_signal< sc_lv<8> > sbox_address1;
    sc_signal< sc_logic > sbox_ce1;
    sc_signal< sc_lv<8> > sbox_q1;
    sc_signal< sc_lv<8> > sbox_address2;
    sc_signal< sc_logic > sbox_ce2;
    sc_signal< sc_lv<8> > sbox_q2;
    sc_signal< sc_lv<8> > sbox_address3;
    sc_signal< sc_logic > sbox_ce3;
    sc_signal< sc_lv<8> > sbox_q3;
    sc_signal< sc_lv<8> > Rcon_address0;
    sc_signal< sc_logic > Rcon_ce0;
    sc_signal< sc_lv<8> > Rcon_q0;
    sc_signal< sc_lv<3> > tmp_7_fu_405_p2;
    sc_signal< sc_lv<3> > tmp_7_reg_790;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > tmp_fu_415_p3;
    sc_signal< sc_lv<4> > tmp_reg_795;
    sc_signal< sc_lv<1> > exitcond2_fu_399_p2;
    sc_signal< sc_lv<32> > tmp_cast_fu_423_p1;
    sc_signal< sc_lv<32> > tmp_cast_reg_801;
    sc_signal< sc_lv<32> > tmp_1_cast_fu_434_p1;
    sc_signal< sc_lv<32> > tmp_1_cast_reg_811;
    sc_signal< sc_lv<32> > tmp_3_cast_fu_454_p1;
    sc_signal< sc_lv<32> > tmp_3_cast_reg_821;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > tmp_5_cast_fu_464_p1;
    sc_signal< sc_lv<32> > tmp_5_cast_reg_831;
    sc_signal< sc_lv<8> > tmp_8_fu_485_p3;
    sc_signal< sc_lv<8> > tmp_8_reg_844;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond1_fu_479_p2;
    sc_signal< sc_lv<32> > tmp_8_cast_fu_493_p1;
    sc_signal< sc_lv<32> > tmp_8_cast_reg_856;
    sc_signal< sc_lv<3> > j_2_fu_503_p2;
    sc_signal< sc_lv<3> > j_2_reg_864;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > exitcond_fu_497_p2;
    sc_signal< sc_lv<2> > tmp_21_fu_529_p1;
    sc_signal< sc_lv<2> > tmp_21_reg_874;
    sc_signal< sc_lv<1> > tmp_9_fu_537_p2;
    sc_signal< sc_lv<1> > tmp_9_reg_881;
    sc_signal< sc_lv<6> > i_2_fu_598_p2;
    sc_signal< sc_lv<6> > i_2_reg_924;
    sc_signal< sc_lv<8> > temp_3_3_fu_633_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > temp_3_4_fu_649_p3;
    sc_signal< sc_lv<8> > temp_3_7_fu_665_p3;
    sc_signal< sc_lv<8> > temp_3_9_fu_673_p3;
    sc_signal< sc_lv<8> > temp_3_1_34_fu_687_p3;
    sc_signal< sc_lv<8> > temp_3_1_34_reg_949;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > temp_2_1_35_fu_694_p3;
    sc_signal< sc_lv<8> > temp_2_1_35_reg_955;
    sc_signal< sc_lv<8> > temp_1_1_fu_701_p3;
    sc_signal< sc_lv<8> > temp_1_1_reg_961;
    sc_signal< sc_lv<8> > temp_0_2_fu_708_p3;
    sc_signal< sc_lv<8> > temp_0_2_reg_966;
    sc_signal< sc_lv<8> > tmp_10_fu_715_p2;
    sc_signal< sc_lv<8> > tmp_10_reg_971;
    sc_signal< sc_lv<8> > tmp_11_fu_721_p2;
    sc_signal< sc_lv<8> > tmp_11_reg_976;
    sc_signal< sc_lv<8> > tmp_13_fu_757_p2;
    sc_signal< sc_lv<8> > tmp_13_reg_991;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > tmp_15_fu_762_p2;
    sc_signal< sc_lv<8> > tmp_15_reg_996;
    sc_signal< sc_lv<3> > i_reg_273;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > temp_3_reg_284;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<8> > temp_2_reg_296;
    sc_signal< sc_lv<8> > temp_1_reg_308;
    sc_signal< sc_lv<8> > temp_reg_320;
    sc_signal< sc_lv<6> > i_1_reg_332;
    sc_signal< sc_lv<8> > temp_3_1_reg_344;
    sc_signal< sc_lv<8> > temp_2_1_reg_355;
    sc_signal< sc_lv<8> > temp_3_5_reg_366;
    sc_signal< sc_lv<8> > temp_3_8_reg_377;
    sc_signal< sc_lv<3> > j_reg_388;
    sc_signal< sc_lv<32> > sum8_cast_fu_524_p1;
    sc_signal< sc_lv<32> > num_assign_fu_543_p1;
    sc_signal< sc_lv<32> > num_assign_1_fu_548_p1;
    sc_signal< sc_lv<32> > num_assign_2_fu_553_p1;
    sc_signal< sc_lv<32> > num_assign_3_fu_558_p1;
    sc_signal< sc_lv<32> > tmp_s_fu_573_p1;
    sc_signal< sc_lv<32> > sum_cast_fu_583_p1;
    sc_signal< sc_lv<32> > sum1_cast_fu_593_p1;
    sc_signal< sc_lv<32> > sum2_cast_fu_732_p1;
    sc_signal< sc_lv<32> > sum3_cast_fu_742_p1;
    sc_signal< sc_lv<32> > tmp_22_cast_fu_752_p1;
    sc_signal< sc_lv<32> > tmp_24_cast_fu_772_p1;
    sc_signal< sc_lv<32> > tmp_26_cast_fu_782_p1;
    sc_signal< sc_lv<8> > tmp_4_fu_439_p1;
    sc_signal< sc_lv<8> > tmp_6_fu_444_p1;
    sc_signal< sc_lv<8> > tmp_18_fu_469_p1;
    sc_signal< sc_lv<8> > tmp_19_fu_474_p1;
    sc_signal< sc_lv<2> > tmp_2_fu_411_p1;
    sc_signal< sc_lv<4> > tmp_1_fu_428_p2;
    sc_signal< sc_lv<4> > tmp_3_fu_449_p2;
    sc_signal< sc_lv<4> > tmp_5_fu_459_p2;
    sc_signal< sc_lv<3> > tmp1_fu_509_p2;
    sc_signal< sc_lv<8> > tmp29_cast_fu_515_p1;
    sc_signal< sc_lv<8> > sum8_fu_519_p2;
    sc_signal< sc_lv<2> > tmp_20_fu_533_p1;
    sc_signal< sc_lv<4> > p_lshr_f_cast_fu_563_p4;
    sc_signal< sc_lv<8> > sum_fu_578_p2;
    sc_signal< sc_lv<8> > sum1_fu_588_p2;
    sc_signal< sc_lv<1> > sel_tmp4_fu_614_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_609_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_604_p2;
    sc_signal< sc_lv<1> > or_cond_fu_619_p2;
    sc_signal< sc_lv<8> > newSel_fu_625_p3;
    sc_signal< sc_lv<8> > newSel2_fu_641_p3;
    sc_signal< sc_lv<8> > temp_3_6_fu_657_p3;
    sc_signal< sc_lv<8> > temp_0_1_fu_681_p2;
    sc_signal< sc_lv<8> > sum2_fu_727_p2;
    sc_signal< sc_lv<8> > sum3_fu_737_p2;
    sc_signal< sc_lv<8> > tmp_12_fu_747_p2;
    sc_signal< sc_lv<8> > tmp_14_fu_767_p2;
    sc_signal< sc_lv<8> > tmp_16_fu_777_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<6> ap_const_lv6_4;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<6> ap_const_lv6_2C;
    static const sc_lv<8> ap_const_lv8_F0;
    static const sc_lv<8> ap_const_lv8_F1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<8> ap_const_lv8_F2;
    static const sc_lv<8> ap_const_lv8_F3;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Key_address0();
    void thread_Key_address1();
    void thread_Key_ce0();
    void thread_Key_ce1();
    void thread_Rcon_address0();
    void thread_Rcon_ce0();
    void thread_RoundKey_address0();
    void thread_RoundKey_address1();
    void thread_RoundKey_ce0();
    void thread_RoundKey_ce1();
    void thread_RoundKey_d0();
    void thread_RoundKey_d1();
    void thread_RoundKey_we0();
    void thread_RoundKey_we1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_479_p2();
    void thread_exitcond2_fu_399_p2();
    void thread_exitcond_fu_497_p2();
    void thread_i_2_fu_598_p2();
    void thread_j_2_fu_503_p2();
    void thread_newSel2_fu_641_p3();
    void thread_newSel_fu_625_p3();
    void thread_num_assign_1_fu_548_p1();
    void thread_num_assign_2_fu_553_p1();
    void thread_num_assign_3_fu_558_p1();
    void thread_num_assign_fu_543_p1();
    void thread_or_cond_fu_619_p2();
    void thread_p_lshr_f_cast_fu_563_p4();
    void thread_sbox_address0();
    void thread_sbox_address1();
    void thread_sbox_address2();
    void thread_sbox_address3();
    void thread_sbox_ce0();
    void thread_sbox_ce1();
    void thread_sbox_ce2();
    void thread_sbox_ce3();
    void thread_sel_tmp2_fu_609_p2();
    void thread_sel_tmp4_fu_614_p2();
    void thread_sel_tmp_fu_604_p2();
    void thread_sum1_cast_fu_593_p1();
    void thread_sum1_fu_588_p2();
    void thread_sum2_cast_fu_732_p1();
    void thread_sum2_fu_727_p2();
    void thread_sum3_cast_fu_742_p1();
    void thread_sum3_fu_737_p2();
    void thread_sum8_cast_fu_524_p1();
    void thread_sum8_fu_519_p2();
    void thread_sum_cast_fu_583_p1();
    void thread_sum_fu_578_p2();
    void thread_temp_0_1_fu_681_p2();
    void thread_temp_0_2_fu_708_p3();
    void thread_temp_1_1_fu_701_p3();
    void thread_temp_2_1_35_fu_694_p3();
    void thread_temp_3_1_34_fu_687_p3();
    void thread_temp_3_3_fu_633_p3();
    void thread_temp_3_4_fu_649_p3();
    void thread_temp_3_6_fu_657_p3();
    void thread_temp_3_7_fu_665_p3();
    void thread_temp_3_9_fu_673_p3();
    void thread_tmp1_fu_509_p2();
    void thread_tmp29_cast_fu_515_p1();
    void thread_tmp_10_fu_715_p2();
    void thread_tmp_11_fu_721_p2();
    void thread_tmp_12_fu_747_p2();
    void thread_tmp_13_fu_757_p2();
    void thread_tmp_14_fu_767_p2();
    void thread_tmp_15_fu_762_p2();
    void thread_tmp_16_fu_777_p2();
    void thread_tmp_18_fu_469_p1();
    void thread_tmp_19_fu_474_p1();
    void thread_tmp_1_cast_fu_434_p1();
    void thread_tmp_1_fu_428_p2();
    void thread_tmp_20_fu_533_p1();
    void thread_tmp_21_fu_529_p1();
    void thread_tmp_22_cast_fu_752_p1();
    void thread_tmp_24_cast_fu_772_p1();
    void thread_tmp_26_cast_fu_782_p1();
    void thread_tmp_2_fu_411_p1();
    void thread_tmp_3_cast_fu_454_p1();
    void thread_tmp_3_fu_449_p2();
    void thread_tmp_4_fu_439_p1();
    void thread_tmp_5_cast_fu_464_p1();
    void thread_tmp_5_fu_459_p2();
    void thread_tmp_6_fu_444_p1();
    void thread_tmp_7_fu_405_p2();
    void thread_tmp_8_cast_fu_493_p1();
    void thread_tmp_8_fu_485_p3();
    void thread_tmp_9_fu_537_p2();
    void thread_tmp_cast_fu_423_p1();
    void thread_tmp_fu_415_p3();
    void thread_tmp_s_fu_573_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
