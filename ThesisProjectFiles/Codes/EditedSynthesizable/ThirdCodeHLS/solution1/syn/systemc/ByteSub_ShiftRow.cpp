// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ByteSub_ShiftRow.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ByteSub_ShiftRow::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ByteSub_ShiftRow::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state1 = "1";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state2 = "10";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state3 = "100";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state4 = "1000";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state5 = "10000";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state6 = "100000";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state7 = "1000000";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state8 = "10000000";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state9 = "100000000";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state10 = "1000000000";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state11 = "10000000000";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state12 = "100000000000";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<16> ByteSub_ShiftRow::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_2 = "10";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_9 = "1001";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_8 = "1000";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_3 = "11";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_1 = "1";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_4 = "100";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_5 = "101";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_6 = "110";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_7 = "111";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_D = "1101";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_A = "1010";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_E = "1110";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_F = "1111";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_B = "1011";
const sc_lv<32> ByteSub_ShiftRow::ap_const_lv32_C = "1100";
const bool ByteSub_ShiftRow::ap_const_boolean_1 = true;

ByteSub_ShiftRow::ByteSub_ShiftRow(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Sbox_U = new KeySchedule_Sbox("Sbox_U");
    Sbox_U->clk(ap_clk);
    Sbox_U->reset(ap_rst);
    Sbox_U->address0(Sbox_address0);
    Sbox_U->ce0(Sbox_ce0);
    Sbox_U->q0(Sbox_q0);
    Sbox_U->address1(Sbox_address1);
    Sbox_U->ce1(Sbox_ce1);
    Sbox_U->q1(Sbox_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Sbox_addr_10_gep_fu_256_p3);
    sensitive << ( statemt_q0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_Sbox_addr_11_gep_fu_265_p3);
    sensitive << ( statemt_q1 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_Sbox_addr_12_gep_fu_284_p3);
    sensitive << ( statemt_q0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_Sbox_addr_13_gep_fu_293_p3);
    sensitive << ( statemt_q1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_Sbox_addr_14_gep_fu_320_p3);
    sensitive << ( statemt_q0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_Sbox_addr_15_gep_fu_329_p3);
    sensitive << ( statemt_q1 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_Sbox_addr_2_gep_fu_104_p3);
    sensitive << ( statemt_q0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_Sbox_addr_3_gep_fu_113_p3);
    sensitive << ( statemt_q1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_Sbox_addr_4_gep_fu_140_p3);
    sensitive << ( statemt_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_Sbox_addr_5_gep_fu_149_p3);
    sensitive << ( statemt_q1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_Sbox_addr_6_gep_fu_176_p3);
    sensitive << ( statemt_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_Sbox_addr_7_gep_fu_185_p3);
    sensitive << ( statemt_q1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_Sbox_addr_8_gep_fu_212_p3);
    sensitive << ( statemt_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_Sbox_addr_9_gep_fu_221_p3);
    sensitive << ( statemt_q1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_Sbox_address0);
    sensitive << ( statemt_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( Sbox_addr_2_gep_fu_104_p3 );
    sensitive << ( Sbox_addr_4_gep_fu_140_p3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( Sbox_addr_6_gep_fu_176_p3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( Sbox_addr_8_gep_fu_212_p3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( Sbox_addr_10_gep_fu_256_p3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( Sbox_addr_12_gep_fu_284_p3 );
    sensitive << ( Sbox_addr_14_gep_fu_320_p3 );

    SC_METHOD(thread_Sbox_address1);
    sensitive << ( statemt_q1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( Sbox_addr_3_gep_fu_113_p3 );
    sensitive << ( Sbox_addr_5_gep_fu_149_p3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( Sbox_addr_7_gep_fu_185_p3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( Sbox_addr_9_gep_fu_221_p3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( Sbox_addr_11_gep_fu_265_p3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( Sbox_addr_13_gep_fu_293_p3 );
    sensitive << ( Sbox_addr_15_gep_fu_329_p3 );

    SC_METHOD(thread_Sbox_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_Sbox_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_Sbox_load_10_cast_fu_404_p1);
    sensitive << ( Sbox_load_10_reg_593 );

    SC_METHOD(thread_Sbox_load_11_cast_fu_408_p1);
    sensitive << ( reg_342 );

    SC_METHOD(thread_Sbox_load_12_cast_fu_413_p1);
    sensitive << ( reg_347 );

    SC_METHOD(thread_Sbox_load_13_cast_fu_418_p1);
    sensitive << ( reg_338 );

    SC_METHOD(thread_Sbox_load_14_cast_fu_423_p1);
    sensitive << ( reg_352 );

    SC_METHOD(thread_Sbox_load_1_cast_fu_361_p1);
    sensitive << ( reg_347 );

    SC_METHOD(thread_Sbox_load_2_cast_fu_371_p1);
    sensitive << ( reg_352 );

    SC_METHOD(thread_Sbox_load_4_cast_fu_380_p1);
    sensitive << ( Sbox_load_4_reg_503 );

    SC_METHOD(thread_Sbox_load_6_cast_fu_388_p1);
    sensitive << ( Sbox_load_6_reg_533 );

    SC_METHOD(thread_Sbox_load_8_cast_fu_392_p1);
    sensitive << ( Sbox_load_8_reg_568 );

    SC_METHOD(thread_Sbox_load_9_cast_fu_396_p1);
    sensitive << ( Sbox_load_9_reg_588 );

    SC_METHOD(thread_Sbox_load_cast_fu_356_p1);
    sensitive << ( reg_342 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_statemt_addr_10_reg_448);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_statemt_addr_11_reg_453);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_statemt_addr_12_reg_468);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_statemt_addr_13_reg_473);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_statemt_addr_14_reg_488);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_statemt_addr_15_reg_493);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_statemt_addr_16_reg_518);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_statemt_addr_17_reg_523);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_statemt_addr_18_reg_548);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_statemt_addr_19_reg_553);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_statemt_addr_20_reg_583);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_statemt_addr_21_reg_608);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_statemt_addr_22_reg_613);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_statemt_addr_8_reg_428);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_statemt_addr_9_reg_433);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_statemt_addr_reg_558);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_statemt_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( statemt_addr_8_reg_428 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( statemt_addr_10_reg_448 );
    sensitive << ( statemt_addr_12_reg_468 );
    sensitive << ( statemt_addr_14_reg_488 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( statemt_addr_16_reg_518 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( statemt_addr_18_reg_548 );
    sensitive << ( statemt_addr_reg_558 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( statemt_addr_21_reg_608 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_statemt_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( statemt_addr_9_reg_433 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( statemt_addr_11_reg_453 );
    sensitive << ( statemt_addr_13_reg_473 );
    sensitive << ( statemt_addr_15_reg_493 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( statemt_addr_17_reg_523 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( statemt_addr_19_reg_553 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( statemt_addr_20_reg_583 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( statemt_addr_22_reg_613 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_statemt_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_statemt_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_statemt_d0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( Sbox_load_cast_fu_356_p1 );
    sensitive << ( Sbox_load_2_cast_fu_371_p1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( Sbox_load_4_cast_fu_380_p1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( Sbox_load_6_cast_fu_388_p1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( Sbox_load_8_cast_fu_392_p1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( Sbox_load_10_cast_fu_404_p1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( Sbox_load_11_cast_fu_408_p1 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( Sbox_load_13_cast_fu_418_p1 );

    SC_METHOD(thread_statemt_d1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( Sbox_load_1_cast_fu_361_p1 );
    sensitive << ( temp_cast_fu_366_p1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( temp_1_cast_fu_376_p1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( temp_2_cast_fu_384_p1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( Sbox_load_9_cast_fu_396_p1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( temp_3_cast_fu_400_p1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( Sbox_load_12_cast_fu_413_p1 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( Sbox_load_14_cast_fu_423_p1 );

    SC_METHOD(thread_statemt_we0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_statemt_we1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_temp_1_cast_fu_376_p1);
    sensitive << ( temp_1_reg_498 );

    SC_METHOD(thread_temp_2_cast_fu_384_p1);
    sensitive << ( temp_2_reg_528 );

    SC_METHOD(thread_temp_3_cast_fu_400_p1);
    sensitive << ( temp_3_reg_563 );

    SC_METHOD(thread_temp_cast_fu_366_p1);
    sensitive << ( reg_338 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    ap_CS_fsm = "0000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ByteSub_ShiftRow_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, statemt_address0, "(port)statemt_address0");
    sc_trace(mVcdFile, statemt_ce0, "(port)statemt_ce0");
    sc_trace(mVcdFile, statemt_we0, "(port)statemt_we0");
    sc_trace(mVcdFile, statemt_d0, "(port)statemt_d0");
    sc_trace(mVcdFile, statemt_q0, "(port)statemt_q0");
    sc_trace(mVcdFile, statemt_address1, "(port)statemt_address1");
    sc_trace(mVcdFile, statemt_ce1, "(port)statemt_ce1");
    sc_trace(mVcdFile, statemt_we1, "(port)statemt_we1");
    sc_trace(mVcdFile, statemt_d1, "(port)statemt_d1");
    sc_trace(mVcdFile, statemt_q1, "(port)statemt_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, Sbox_address0, "Sbox_address0");
    sc_trace(mVcdFile, Sbox_ce0, "Sbox_ce0");
    sc_trace(mVcdFile, Sbox_q0, "Sbox_q0");
    sc_trace(mVcdFile, Sbox_address1, "Sbox_address1");
    sc_trace(mVcdFile, Sbox_ce1, "Sbox_ce1");
    sc_trace(mVcdFile, Sbox_q1, "Sbox_q1");
    sc_trace(mVcdFile, reg_338, "reg_338");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, reg_342, "reg_342");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, reg_347, "reg_347");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, reg_352, "reg_352");
    sc_trace(mVcdFile, statemt_addr_8_reg_428, "statemt_addr_8_reg_428");
    sc_trace(mVcdFile, statemt_addr_9_reg_433, "statemt_addr_9_reg_433");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, statemt_addr_10_reg_448, "statemt_addr_10_reg_448");
    sc_trace(mVcdFile, statemt_addr_11_reg_453, "statemt_addr_11_reg_453");
    sc_trace(mVcdFile, Sbox_addr_2_gep_fu_104_p3, "Sbox_addr_2_gep_fu_104_p3");
    sc_trace(mVcdFile, Sbox_addr_3_gep_fu_113_p3, "Sbox_addr_3_gep_fu_113_p3");
    sc_trace(mVcdFile, statemt_addr_12_reg_468, "statemt_addr_12_reg_468");
    sc_trace(mVcdFile, statemt_addr_13_reg_473, "statemt_addr_13_reg_473");
    sc_trace(mVcdFile, Sbox_addr_4_gep_fu_140_p3, "Sbox_addr_4_gep_fu_140_p3");
    sc_trace(mVcdFile, Sbox_addr_5_gep_fu_149_p3, "Sbox_addr_5_gep_fu_149_p3");
    sc_trace(mVcdFile, statemt_addr_14_reg_488, "statemt_addr_14_reg_488");
    sc_trace(mVcdFile, statemt_addr_15_reg_493, "statemt_addr_15_reg_493");
    sc_trace(mVcdFile, temp_1_reg_498, "temp_1_reg_498");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, Sbox_load_4_reg_503, "Sbox_load_4_reg_503");
    sc_trace(mVcdFile, Sbox_addr_6_gep_fu_176_p3, "Sbox_addr_6_gep_fu_176_p3");
    sc_trace(mVcdFile, Sbox_addr_7_gep_fu_185_p3, "Sbox_addr_7_gep_fu_185_p3");
    sc_trace(mVcdFile, statemt_addr_16_reg_518, "statemt_addr_16_reg_518");
    sc_trace(mVcdFile, statemt_addr_17_reg_523, "statemt_addr_17_reg_523");
    sc_trace(mVcdFile, temp_2_reg_528, "temp_2_reg_528");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, Sbox_load_6_reg_533, "Sbox_load_6_reg_533");
    sc_trace(mVcdFile, Sbox_addr_8_gep_fu_212_p3, "Sbox_addr_8_gep_fu_212_p3");
    sc_trace(mVcdFile, Sbox_addr_9_gep_fu_221_p3, "Sbox_addr_9_gep_fu_221_p3");
    sc_trace(mVcdFile, statemt_addr_18_reg_548, "statemt_addr_18_reg_548");
    sc_trace(mVcdFile, statemt_addr_19_reg_553, "statemt_addr_19_reg_553");
    sc_trace(mVcdFile, statemt_addr_reg_558, "statemt_addr_reg_558");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, temp_3_reg_563, "temp_3_reg_563");
    sc_trace(mVcdFile, Sbox_load_8_reg_568, "Sbox_load_8_reg_568");
    sc_trace(mVcdFile, Sbox_addr_10_gep_fu_256_p3, "Sbox_addr_10_gep_fu_256_p3");
    sc_trace(mVcdFile, Sbox_addr_11_gep_fu_265_p3, "Sbox_addr_11_gep_fu_265_p3");
    sc_trace(mVcdFile, statemt_addr_20_reg_583, "statemt_addr_20_reg_583");
    sc_trace(mVcdFile, Sbox_load_9_reg_588, "Sbox_load_9_reg_588");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, Sbox_load_10_reg_593, "Sbox_load_10_reg_593");
    sc_trace(mVcdFile, Sbox_addr_12_gep_fu_284_p3, "Sbox_addr_12_gep_fu_284_p3");
    sc_trace(mVcdFile, Sbox_addr_13_gep_fu_293_p3, "Sbox_addr_13_gep_fu_293_p3");
    sc_trace(mVcdFile, statemt_addr_21_reg_608, "statemt_addr_21_reg_608");
    sc_trace(mVcdFile, statemt_addr_22_reg_613, "statemt_addr_22_reg_613");
    sc_trace(mVcdFile, Sbox_addr_14_gep_fu_320_p3, "Sbox_addr_14_gep_fu_320_p3");
    sc_trace(mVcdFile, Sbox_addr_15_gep_fu_329_p3, "Sbox_addr_15_gep_fu_329_p3");
    sc_trace(mVcdFile, Sbox_load_cast_fu_356_p1, "Sbox_load_cast_fu_356_p1");
    sc_trace(mVcdFile, Sbox_load_1_cast_fu_361_p1, "Sbox_load_1_cast_fu_361_p1");
    sc_trace(mVcdFile, Sbox_load_2_cast_fu_371_p1, "Sbox_load_2_cast_fu_371_p1");
    sc_trace(mVcdFile, temp_cast_fu_366_p1, "temp_cast_fu_366_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, Sbox_load_4_cast_fu_380_p1, "Sbox_load_4_cast_fu_380_p1");
    sc_trace(mVcdFile, temp_1_cast_fu_376_p1, "temp_1_cast_fu_376_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, Sbox_load_6_cast_fu_388_p1, "Sbox_load_6_cast_fu_388_p1");
    sc_trace(mVcdFile, temp_2_cast_fu_384_p1, "temp_2_cast_fu_384_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, Sbox_load_8_cast_fu_392_p1, "Sbox_load_8_cast_fu_392_p1");
    sc_trace(mVcdFile, Sbox_load_9_cast_fu_396_p1, "Sbox_load_9_cast_fu_396_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, Sbox_load_10_cast_fu_404_p1, "Sbox_load_10_cast_fu_404_p1");
    sc_trace(mVcdFile, temp_3_cast_fu_400_p1, "temp_3_cast_fu_400_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, Sbox_load_11_cast_fu_408_p1, "Sbox_load_11_cast_fu_408_p1");
    sc_trace(mVcdFile, Sbox_load_12_cast_fu_413_p1, "Sbox_load_12_cast_fu_413_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, Sbox_load_13_cast_fu_418_p1, "Sbox_load_13_cast_fu_418_p1");
    sc_trace(mVcdFile, Sbox_load_14_cast_fu_423_p1, "Sbox_load_14_cast_fu_423_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

ByteSub_ShiftRow::~ByteSub_ShiftRow() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete Sbox_U;
}

void ByteSub_ShiftRow::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        reg_342 = Sbox_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        reg_342 = Sbox_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        reg_347 = Sbox_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        reg_347 = Sbox_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        Sbox_load_10_reg_593 = Sbox_q1.read();
        Sbox_load_9_reg_588 = Sbox_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        Sbox_load_4_reg_503 = Sbox_q1.read();
        temp_1_reg_498 = Sbox_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        Sbox_load_6_reg_533 = Sbox_q1.read();
        temp_2_reg_528 = Sbox_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        Sbox_load_8_reg_568 = Sbox_q1.read();
        temp_3_reg_563 = Sbox_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        reg_338 = Sbox_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        reg_352 = Sbox_q1.read();
    }
}

void ByteSub_ShiftRow::thread_Sbox_addr_10_gep_fu_256_p3() {
    Sbox_addr_10_gep_fu_256_p3 =  (sc_lv<8>) (statemt_q0.read());
}

void ByteSub_ShiftRow::thread_Sbox_addr_11_gep_fu_265_p3() {
    Sbox_addr_11_gep_fu_265_p3 =  (sc_lv<8>) (statemt_q1.read());
}

void ByteSub_ShiftRow::thread_Sbox_addr_12_gep_fu_284_p3() {
    Sbox_addr_12_gep_fu_284_p3 =  (sc_lv<8>) (statemt_q0.read());
}

void ByteSub_ShiftRow::thread_Sbox_addr_13_gep_fu_293_p3() {
    Sbox_addr_13_gep_fu_293_p3 =  (sc_lv<8>) (statemt_q1.read());
}

void ByteSub_ShiftRow::thread_Sbox_addr_14_gep_fu_320_p3() {
    Sbox_addr_14_gep_fu_320_p3 =  (sc_lv<8>) (statemt_q0.read());
}

void ByteSub_ShiftRow::thread_Sbox_addr_15_gep_fu_329_p3() {
    Sbox_addr_15_gep_fu_329_p3 =  (sc_lv<8>) (statemt_q1.read());
}

void ByteSub_ShiftRow::thread_Sbox_addr_2_gep_fu_104_p3() {
    Sbox_addr_2_gep_fu_104_p3 =  (sc_lv<8>) (statemt_q0.read());
}

void ByteSub_ShiftRow::thread_Sbox_addr_3_gep_fu_113_p3() {
    Sbox_addr_3_gep_fu_113_p3 =  (sc_lv<8>) (statemt_q1.read());
}

void ByteSub_ShiftRow::thread_Sbox_addr_4_gep_fu_140_p3() {
    Sbox_addr_4_gep_fu_140_p3 =  (sc_lv<8>) (statemt_q0.read());
}

void ByteSub_ShiftRow::thread_Sbox_addr_5_gep_fu_149_p3() {
    Sbox_addr_5_gep_fu_149_p3 =  (sc_lv<8>) (statemt_q1.read());
}

void ByteSub_ShiftRow::thread_Sbox_addr_6_gep_fu_176_p3() {
    Sbox_addr_6_gep_fu_176_p3 =  (sc_lv<8>) (statemt_q0.read());
}

void ByteSub_ShiftRow::thread_Sbox_addr_7_gep_fu_185_p3() {
    Sbox_addr_7_gep_fu_185_p3 =  (sc_lv<8>) (statemt_q1.read());
}

void ByteSub_ShiftRow::thread_Sbox_addr_8_gep_fu_212_p3() {
    Sbox_addr_8_gep_fu_212_p3 =  (sc_lv<8>) (statemt_q0.read());
}

void ByteSub_ShiftRow::thread_Sbox_addr_9_gep_fu_221_p3() {
    Sbox_addr_9_gep_fu_221_p3 =  (sc_lv<8>) (statemt_q1.read());
}

void ByteSub_ShiftRow::thread_Sbox_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        Sbox_address0 = Sbox_addr_14_gep_fu_320_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        Sbox_address0 = Sbox_addr_12_gep_fu_284_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        Sbox_address0 = Sbox_addr_10_gep_fu_256_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        Sbox_address0 = Sbox_addr_8_gep_fu_212_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        Sbox_address0 = Sbox_addr_6_gep_fu_176_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Sbox_address0 = Sbox_addr_4_gep_fu_140_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        Sbox_address0 = Sbox_addr_2_gep_fu_104_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        Sbox_address0 =  (sc_lv<8>) (statemt_q0.read());
    } else {
        Sbox_address0 = "XXXXXXXX";
    }
}

void ByteSub_ShiftRow::thread_Sbox_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        Sbox_address1 = Sbox_addr_15_gep_fu_329_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        Sbox_address1 = Sbox_addr_13_gep_fu_293_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        Sbox_address1 = Sbox_addr_11_gep_fu_265_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        Sbox_address1 = Sbox_addr_9_gep_fu_221_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        Sbox_address1 = Sbox_addr_7_gep_fu_185_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Sbox_address1 = Sbox_addr_5_gep_fu_149_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        Sbox_address1 = Sbox_addr_3_gep_fu_113_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        Sbox_address1 =  (sc_lv<8>) (statemt_q1.read());
    } else {
        Sbox_address1 = "XXXXXXXX";
    }
}

void ByteSub_ShiftRow::thread_Sbox_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        Sbox_ce0 = ap_const_logic_1;
    } else {
        Sbox_ce0 = ap_const_logic_0;
    }
}

void ByteSub_ShiftRow::thread_Sbox_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        Sbox_ce1 = ap_const_logic_1;
    } else {
        Sbox_ce1 = ap_const_logic_0;
    }
}

void ByteSub_ShiftRow::thread_Sbox_load_10_cast_fu_404_p1() {
    Sbox_load_10_cast_fu_404_p1 = esl_zext<32,8>(Sbox_load_10_reg_593.read());
}

void ByteSub_ShiftRow::thread_Sbox_load_11_cast_fu_408_p1() {
    Sbox_load_11_cast_fu_408_p1 = esl_zext<32,8>(reg_342.read());
}

void ByteSub_ShiftRow::thread_Sbox_load_12_cast_fu_413_p1() {
    Sbox_load_12_cast_fu_413_p1 = esl_zext<32,8>(reg_347.read());
}

void ByteSub_ShiftRow::thread_Sbox_load_13_cast_fu_418_p1() {
    Sbox_load_13_cast_fu_418_p1 = esl_zext<32,8>(reg_338.read());
}

void ByteSub_ShiftRow::thread_Sbox_load_14_cast_fu_423_p1() {
    Sbox_load_14_cast_fu_423_p1 = esl_zext<32,8>(reg_352.read());
}

void ByteSub_ShiftRow::thread_Sbox_load_1_cast_fu_361_p1() {
    Sbox_load_1_cast_fu_361_p1 = esl_zext<32,8>(reg_347.read());
}

void ByteSub_ShiftRow::thread_Sbox_load_2_cast_fu_371_p1() {
    Sbox_load_2_cast_fu_371_p1 = esl_zext<32,8>(reg_352.read());
}

void ByteSub_ShiftRow::thread_Sbox_load_4_cast_fu_380_p1() {
    Sbox_load_4_cast_fu_380_p1 = esl_zext<32,8>(Sbox_load_4_reg_503.read());
}

void ByteSub_ShiftRow::thread_Sbox_load_6_cast_fu_388_p1() {
    Sbox_load_6_cast_fu_388_p1 = esl_zext<32,8>(Sbox_load_6_reg_533.read());
}

void ByteSub_ShiftRow::thread_Sbox_load_8_cast_fu_392_p1() {
    Sbox_load_8_cast_fu_392_p1 = esl_zext<32,8>(Sbox_load_8_reg_568.read());
}

void ByteSub_ShiftRow::thread_Sbox_load_9_cast_fu_396_p1() {
    Sbox_load_9_cast_fu_396_p1 = esl_zext<32,8>(Sbox_load_9_reg_588.read());
}

void ByteSub_ShiftRow::thread_Sbox_load_cast_fu_356_p1() {
    Sbox_load_cast_fu_356_p1 = esl_zext<32,8>(reg_342.read());
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void ByteSub_ShiftRow::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void ByteSub_ShiftRow::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void ByteSub_ShiftRow::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ByteSub_ShiftRow::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ByteSub_ShiftRow::thread_statemt_addr_10_reg_448() {
    statemt_addr_10_reg_448 =  (sc_lv<5>) (ap_const_lv32_9);
}

void ByteSub_ShiftRow::thread_statemt_addr_11_reg_453() {
    statemt_addr_11_reg_453 =  (sc_lv<5>) (ap_const_lv32_D);
}

void ByteSub_ShiftRow::thread_statemt_addr_12_reg_468() {
    statemt_addr_12_reg_468 =  (sc_lv<5>) (ap_const_lv32_2);
}

void ByteSub_ShiftRow::thread_statemt_addr_13_reg_473() {
    statemt_addr_13_reg_473 =  (sc_lv<5>) (ap_const_lv32_A);
}

void ByteSub_ShiftRow::thread_statemt_addr_14_reg_488() {
    statemt_addr_14_reg_488 =  (sc_lv<5>) (ap_const_lv32_6);
}

void ByteSub_ShiftRow::thread_statemt_addr_15_reg_493() {
    statemt_addr_15_reg_493 =  (sc_lv<5>) (ap_const_lv32_E);
}

void ByteSub_ShiftRow::thread_statemt_addr_16_reg_518() {
    statemt_addr_16_reg_518 =  (sc_lv<5>) (ap_const_lv32_3);
}

void ByteSub_ShiftRow::thread_statemt_addr_17_reg_523() {
    statemt_addr_17_reg_523 =  (sc_lv<5>) (ap_const_lv32_F);
}

void ByteSub_ShiftRow::thread_statemt_addr_18_reg_548() {
    statemt_addr_18_reg_548 =  (sc_lv<5>) (ap_const_lv32_B);
}

void ByteSub_ShiftRow::thread_statemt_addr_19_reg_553() {
    statemt_addr_19_reg_553 =  (sc_lv<5>) (ap_const_lv32_7);
}

void ByteSub_ShiftRow::thread_statemt_addr_20_reg_583() {
    statemt_addr_20_reg_583 =  (sc_lv<5>) (ap_const_lv32_4);
}

void ByteSub_ShiftRow::thread_statemt_addr_21_reg_608() {
    statemt_addr_21_reg_608 =  (sc_lv<5>) (ap_const_lv32_8);
}

void ByteSub_ShiftRow::thread_statemt_addr_22_reg_613() {
    statemt_addr_22_reg_613 =  (sc_lv<5>) (ap_const_lv32_C);
}

void ByteSub_ShiftRow::thread_statemt_addr_8_reg_428() {
    statemt_addr_8_reg_428 =  (sc_lv<5>) (ap_const_lv32_1);
}

void ByteSub_ShiftRow::thread_statemt_addr_9_reg_433() {
    statemt_addr_9_reg_433 =  (sc_lv<5>) (ap_const_lv32_5);
}

void ByteSub_ShiftRow::thread_statemt_addr_reg_558() {
    statemt_addr_reg_558 =  (sc_lv<5>) (ap_const_lv32_0);
}

void ByteSub_ShiftRow::thread_statemt_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        statemt_address0 = statemt_addr_21_reg_608.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        statemt_address0 = statemt_addr_reg_558.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        statemt_address0 = statemt_addr_18_reg_548.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        statemt_address0 = statemt_addr_16_reg_518.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        statemt_address0 = statemt_addr_14_reg_488.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        statemt_address0 = statemt_addr_12_reg_468.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        statemt_address0 = statemt_addr_10_reg_448.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        statemt_address0 = statemt_addr_8_reg_428.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        statemt_address0 =  (sc_lv<5>) (ap_const_lv32_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        statemt_address0 =  (sc_lv<5>) (ap_const_lv32_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        statemt_address0 =  (sc_lv<5>) (ap_const_lv32_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        statemt_address0 =  (sc_lv<5>) (ap_const_lv32_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        statemt_address0 =  (sc_lv<5>) (ap_const_lv32_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        statemt_address0 =  (sc_lv<5>) (ap_const_lv32_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        statemt_address0 =  (sc_lv<5>) (ap_const_lv32_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        statemt_address0 =  (sc_lv<5>) (ap_const_lv32_1);
    } else {
        statemt_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void ByteSub_ShiftRow::thread_statemt_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        statemt_address1 = statemt_addr_22_reg_613.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        statemt_address1 = statemt_addr_20_reg_583.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        statemt_address1 = statemt_addr_19_reg_553.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        statemt_address1 = statemt_addr_17_reg_523.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        statemt_address1 = statemt_addr_15_reg_493.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        statemt_address1 = statemt_addr_13_reg_473.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        statemt_address1 = statemt_addr_11_reg_453.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        statemt_address1 = statemt_addr_9_reg_433.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        statemt_address1 =  (sc_lv<5>) (ap_const_lv32_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        statemt_address1 =  (sc_lv<5>) (ap_const_lv32_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        statemt_address1 =  (sc_lv<5>) (ap_const_lv32_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        statemt_address1 =  (sc_lv<5>) (ap_const_lv32_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        statemt_address1 =  (sc_lv<5>) (ap_const_lv32_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        statemt_address1 =  (sc_lv<5>) (ap_const_lv32_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        statemt_address1 =  (sc_lv<5>) (ap_const_lv32_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        statemt_address1 =  (sc_lv<5>) (ap_const_lv32_5);
    } else {
        statemt_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void ByteSub_ShiftRow::thread_statemt_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        statemt_ce0 = ap_const_logic_1;
    } else {
        statemt_ce0 = ap_const_logic_0;
    }
}

void ByteSub_ShiftRow::thread_statemt_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        statemt_ce1 = ap_const_logic_1;
    } else {
        statemt_ce1 = ap_const_logic_0;
    }
}

void ByteSub_ShiftRow::thread_statemt_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        statemt_d0 = Sbox_load_13_cast_fu_418_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        statemt_d0 = Sbox_load_11_cast_fu_408_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        statemt_d0 = Sbox_load_10_cast_fu_404_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        statemt_d0 = Sbox_load_8_cast_fu_392_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        statemt_d0 = Sbox_load_6_cast_fu_388_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        statemt_d0 = Sbox_load_4_cast_fu_380_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        statemt_d0 = Sbox_load_2_cast_fu_371_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        statemt_d0 = Sbox_load_cast_fu_356_p1.read();
    } else {
        statemt_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void ByteSub_ShiftRow::thread_statemt_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        statemt_d1 = Sbox_load_14_cast_fu_423_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        statemt_d1 = Sbox_load_12_cast_fu_413_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        statemt_d1 = temp_3_cast_fu_400_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        statemt_d1 = Sbox_load_9_cast_fu_396_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        statemt_d1 = temp_2_cast_fu_384_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        statemt_d1 = temp_1_cast_fu_376_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        statemt_d1 = temp_cast_fu_366_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        statemt_d1 = Sbox_load_1_cast_fu_361_p1.read();
    } else {
        statemt_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void ByteSub_ShiftRow::thread_statemt_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        statemt_we0 = ap_const_logic_1;
    } else {
        statemt_we0 = ap_const_logic_0;
    }
}

void ByteSub_ShiftRow::thread_statemt_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        statemt_we1 = ap_const_logic_1;
    } else {
        statemt_we1 = ap_const_logic_0;
    }
}

void ByteSub_ShiftRow::thread_temp_1_cast_fu_376_p1() {
    temp_1_cast_fu_376_p1 = esl_zext<32,8>(temp_1_reg_498.read());
}

void ByteSub_ShiftRow::thread_temp_2_cast_fu_384_p1() {
    temp_2_cast_fu_384_p1 = esl_zext<32,8>(temp_2_reg_528.read());
}

void ByteSub_ShiftRow::thread_temp_3_cast_fu_400_p1() {
    temp_3_cast_fu_400_p1 = esl_zext<32,8>(temp_3_reg_563.read());
}

void ByteSub_ShiftRow::thread_temp_cast_fu_366_p1() {
    temp_cast_fu_366_p1 = esl_zext<32,8>(reg_338.read());
}

void ByteSub_ShiftRow::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
            break;
    }
}

}

