// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _KeyExpansion_HH_
#define _KeyExpansion_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeyExpansion_sbox.h"
#include "KeyExpansion_Rcon.h"

namespace ap_rtl {

struct KeyExpansion : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > RoundKey_address0;
    sc_out< sc_logic > RoundKey_ce0;
    sc_out< sc_logic > RoundKey_we0;
    sc_out< sc_lv<32> > RoundKey_d0;
    sc_in< sc_lv<32> > RoundKey_q0;
    sc_out< sc_lv<8> > RoundKey_address1;
    sc_out< sc_logic > RoundKey_ce1;
    sc_out< sc_logic > RoundKey_we1;
    sc_out< sc_lv<32> > RoundKey_d1;
    sc_in< sc_lv<32> > RoundKey_q1;
    sc_out< sc_lv<5> > Key_address0;
    sc_out< sc_logic > Key_ce0;
    sc_in< sc_lv<32> > Key_q0;
    sc_out< sc_lv<5> > Key_address1;
    sc_out< sc_logic > Key_ce1;
    sc_in< sc_lv<32> > Key_q1;


    // Module declarations
    KeyExpansion(sc_module_name name);
    SC_HAS_PROCESS(KeyExpansion);

    ~KeyExpansion();

    sc_trace_file* mVcdFile;

    KeyExpansion_sbox* sbox_U;
    KeyExpansion_Rcon* Rcon_U;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_address0;
    sc_signal< sc_logic > sbox_ce0;
    sc_signal< sc_lv<8> > sbox_q0;
    sc_signal< sc_lv<8> > sbox_address1;
    sc_signal< sc_logic > sbox_ce1;
    sc_signal< sc_lv<8> > sbox_q1;
    sc_signal< sc_lv<8> > sbox_address2;
    sc_signal< sc_logic > sbox_ce2;
    sc_signal< sc_lv<8> > sbox_q2;
    sc_signal< sc_lv<8> > sbox_address3;
    sc_signal< sc_logic > sbox_ce3;
    sc_signal< sc_lv<8> > sbox_q3;
    sc_signal< sc_lv<8> > Rcon_address0;
    sc_signal< sc_logic > Rcon_ce0;
    sc_signal< sc_lv<8> > Rcon_q0;
    sc_signal< sc_lv<3> > tmp_3_fu_411_p2;
    sc_signal< sc_lv<3> > tmp_3_reg_772;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > tmp_fu_421_p3;
    sc_signal< sc_lv<4> > tmp_reg_777;
    sc_signal< sc_lv<1> > exitcond2_fu_405_p2;
    sc_signal< sc_lv<32> > tmp_cast_fu_429_p1;
    sc_signal< sc_lv<32> > tmp_cast_reg_783;
    sc_signal< sc_lv<32> > tmp_cast_29_fu_440_p1;
    sc_signal< sc_lv<32> > tmp_cast_29_reg_793;
    sc_signal< sc_lv<32> > tmp_1_cast_fu_450_p1;
    sc_signal< sc_lv<32> > tmp_1_cast_reg_803;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > tmp_2_cast_fu_460_p1;
    sc_signal< sc_lv<32> > tmp_2_cast_reg_813;
    sc_signal< sc_lv<8> > tmp_4_fu_471_p3;
    sc_signal< sc_lv<8> > tmp_4_reg_826;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond1_fu_465_p2;
    sc_signal< sc_lv<32> > tmp_4_cast_fu_479_p1;
    sc_signal< sc_lv<32> > tmp_4_cast_reg_838;
    sc_signal< sc_lv<3> > j_2_fu_489_p2;
    sc_signal< sc_lv<3> > j_2_reg_846;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > exitcond_fu_483_p2;
    sc_signal< sc_lv<2> > tmp_16_fu_515_p1;
    sc_signal< sc_lv<2> > tmp_16_reg_856;
    sc_signal< sc_lv<1> > tmp_7_fu_523_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_863;
    sc_signal< sc_lv<6> > i_2_fu_564_p2;
    sc_signal< sc_lv<6> > i_2_reg_906;
    sc_signal< sc_lv<32> > temp_3_3_fu_599_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > temp_3_4_fu_615_p3;
    sc_signal< sc_lv<32> > temp_3_7_fu_631_p3;
    sc_signal< sc_lv<32> > temp_3_9_fu_639_p3;
    sc_signal< sc_lv<32> > temp_3_1_fu_669_p3;
    sc_signal< sc_lv<32> > temp_3_1_reg_931;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > temp_2_1_fu_676_p3;
    sc_signal< sc_lv<32> > temp_2_1_reg_937;
    sc_signal< sc_lv<32> > temp_1_1_fu_683_p3;
    sc_signal< sc_lv<32> > temp_1_1_reg_943;
    sc_signal< sc_lv<32> > temp_0_2_fu_690_p3;
    sc_signal< sc_lv<32> > temp_0_2_reg_948;
    sc_signal< sc_lv<32> > tmp_5_fu_697_p2;
    sc_signal< sc_lv<32> > tmp_5_reg_953;
    sc_signal< sc_lv<32> > tmp_6_fu_703_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_958;
    sc_signal< sc_lv<32> > tmp_10_fu_739_p2;
    sc_signal< sc_lv<32> > tmp_10_reg_973;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > tmp_12_fu_744_p2;
    sc_signal< sc_lv<32> > tmp_12_reg_978;
    sc_signal< sc_lv<3> > i_reg_275;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > temp_3_reg_286;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > temp_2_reg_298;
    sc_signal< sc_lv<32> > temp_1_reg_310;
    sc_signal< sc_lv<32> > temp_reg_322;
    sc_signal< sc_lv<6> > i_1_reg_334;
    sc_signal< sc_lv<32> > num_assign_2_reg_346;
    sc_signal< sc_lv<32> > num_assign_1_reg_358;
    sc_signal< sc_lv<32> > temp_3_5_reg_370;
    sc_signal< sc_lv<32> > temp_3_8_reg_382;
    sc_signal< sc_lv<3> > j_reg_394;
    sc_signal< sc_lv<32> > sum8_cast_fu_510_p1;
    sc_signal< sc_lv<32> > tmp_9_fu_539_p1;
    sc_signal< sc_lv<32> > sum_cast_fu_549_p1;
    sc_signal< sc_lv<32> > sum1_cast_fu_559_p1;
    sc_signal< sc_lv<32> > sum2_cast_fu_714_p1;
    sc_signal< sc_lv<32> > sum3_cast_fu_724_p1;
    sc_signal< sc_lv<32> > tmp_12_cast_fu_734_p1;
    sc_signal< sc_lv<32> > tmp_14_cast_fu_754_p1;
    sc_signal< sc_lv<32> > tmp_16_cast_fu_764_p1;
    sc_signal< sc_lv<2> > tmp_14_fu_417_p1;
    sc_signal< sc_lv<4> > tmp_s_fu_434_p2;
    sc_signal< sc_lv<4> > tmp_1_fu_445_p2;
    sc_signal< sc_lv<4> > tmp_2_fu_455_p2;
    sc_signal< sc_lv<3> > tmp1_fu_495_p2;
    sc_signal< sc_lv<8> > tmp29_cast_fu_501_p1;
    sc_signal< sc_lv<8> > sum8_fu_505_p2;
    sc_signal< sc_lv<2> > tmp_15_fu_519_p1;
    sc_signal< sc_lv<4> > p_lshr_f_cast_fu_529_p4;
    sc_signal< sc_lv<8> > sum_fu_544_p2;
    sc_signal< sc_lv<8> > sum1_fu_554_p2;
    sc_signal< sc_lv<1> > sel_tmp4_fu_580_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_575_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_570_p2;
    sc_signal< sc_lv<1> > or_cond_fu_585_p2;
    sc_signal< sc_lv<32> > newSel_fu_591_p3;
    sc_signal< sc_lv<32> > newSel2_fu_607_p3;
    sc_signal< sc_lv<32> > temp_3_6_fu_623_p3;
    sc_signal< sc_lv<8> > temp_0_1_fu_659_p2;
    sc_signal< sc_lv<32> > temp_3_cast_fu_655_p1;
    sc_signal< sc_lv<32> > temp_2_cast_fu_651_p1;
    sc_signal< sc_lv<32> > temp_1_cast_fu_647_p1;
    sc_signal< sc_lv<32> > temp_0_1_cast_fu_665_p1;
    sc_signal< sc_lv<8> > sum2_fu_709_p2;
    sc_signal< sc_lv<8> > sum3_fu_719_p2;
    sc_signal< sc_lv<8> > tmp_8_fu_729_p2;
    sc_signal< sc_lv<8> > tmp_11_fu_749_p2;
    sc_signal< sc_lv<8> > tmp_13_fu_759_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<6> ap_const_lv6_4;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<6> ap_const_lv6_2C;
    static const sc_lv<8> ap_const_lv8_F0;
    static const sc_lv<8> ap_const_lv8_F1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<8> ap_const_lv8_F2;
    static const sc_lv<8> ap_const_lv8_F3;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Key_address0();
    void thread_Key_address1();
    void thread_Key_ce0();
    void thread_Key_ce1();
    void thread_Rcon_address0();
    void thread_Rcon_ce0();
    void thread_RoundKey_address0();
    void thread_RoundKey_address1();
    void thread_RoundKey_ce0();
    void thread_RoundKey_ce1();
    void thread_RoundKey_d0();
    void thread_RoundKey_d1();
    void thread_RoundKey_we0();
    void thread_RoundKey_we1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_465_p2();
    void thread_exitcond2_fu_405_p2();
    void thread_exitcond_fu_483_p2();
    void thread_i_2_fu_564_p2();
    void thread_j_2_fu_489_p2();
    void thread_newSel2_fu_607_p3();
    void thread_newSel_fu_591_p3();
    void thread_or_cond_fu_585_p2();
    void thread_p_lshr_f_cast_fu_529_p4();
    void thread_sbox_address0();
    void thread_sbox_address1();
    void thread_sbox_address2();
    void thread_sbox_address3();
    void thread_sbox_ce0();
    void thread_sbox_ce1();
    void thread_sbox_ce2();
    void thread_sbox_ce3();
    void thread_sel_tmp2_fu_575_p2();
    void thread_sel_tmp4_fu_580_p2();
    void thread_sel_tmp_fu_570_p2();
    void thread_sum1_cast_fu_559_p1();
    void thread_sum1_fu_554_p2();
    void thread_sum2_cast_fu_714_p1();
    void thread_sum2_fu_709_p2();
    void thread_sum3_cast_fu_724_p1();
    void thread_sum3_fu_719_p2();
    void thread_sum8_cast_fu_510_p1();
    void thread_sum8_fu_505_p2();
    void thread_sum_cast_fu_549_p1();
    void thread_sum_fu_544_p2();
    void thread_temp_0_1_cast_fu_665_p1();
    void thread_temp_0_1_fu_659_p2();
    void thread_temp_0_2_fu_690_p3();
    void thread_temp_1_1_fu_683_p3();
    void thread_temp_1_cast_fu_647_p1();
    void thread_temp_2_1_fu_676_p3();
    void thread_temp_2_cast_fu_651_p1();
    void thread_temp_3_1_fu_669_p3();
    void thread_temp_3_3_fu_599_p3();
    void thread_temp_3_4_fu_615_p3();
    void thread_temp_3_6_fu_623_p3();
    void thread_temp_3_7_fu_631_p3();
    void thread_temp_3_9_fu_639_p3();
    void thread_temp_3_cast_fu_655_p1();
    void thread_tmp1_fu_495_p2();
    void thread_tmp29_cast_fu_501_p1();
    void thread_tmp_10_fu_739_p2();
    void thread_tmp_11_fu_749_p2();
    void thread_tmp_12_cast_fu_734_p1();
    void thread_tmp_12_fu_744_p2();
    void thread_tmp_13_fu_759_p2();
    void thread_tmp_14_cast_fu_754_p1();
    void thread_tmp_14_fu_417_p1();
    void thread_tmp_15_fu_519_p1();
    void thread_tmp_16_cast_fu_764_p1();
    void thread_tmp_16_fu_515_p1();
    void thread_tmp_1_cast_fu_450_p1();
    void thread_tmp_1_fu_445_p2();
    void thread_tmp_2_cast_fu_460_p1();
    void thread_tmp_2_fu_455_p2();
    void thread_tmp_3_fu_411_p2();
    void thread_tmp_4_cast_fu_479_p1();
    void thread_tmp_4_fu_471_p3();
    void thread_tmp_5_fu_697_p2();
    void thread_tmp_6_fu_703_p2();
    void thread_tmp_7_fu_523_p2();
    void thread_tmp_8_fu_729_p2();
    void thread_tmp_9_fu_539_p1();
    void thread_tmp_cast_29_fu_440_p1();
    void thread_tmp_cast_fu_429_p1();
    void thread_tmp_fu_421_p3();
    void thread_tmp_s_fu_434_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
