// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Cipher_HH_
#define _Cipher_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "SubBytes.h"
#include "KeyExpansion.h"
#include "Cipher_RoundKey.h"

namespace ap_rtl {

struct Cipher : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > state_address0;
    sc_out< sc_logic > state_ce0;
    sc_out< sc_logic > state_we0;
    sc_out< sc_lv<32> > state_d0;
    sc_in< sc_lv<32> > state_q0;
    sc_out< sc_lv<4> > state_address1;
    sc_out< sc_logic > state_ce1;
    sc_out< sc_logic > state_we1;
    sc_out< sc_lv<32> > state_d1;
    sc_in< sc_lv<32> > state_q1;
    sc_out< sc_lv<5> > Key_address0;
    sc_out< sc_logic > Key_ce0;
    sc_in< sc_lv<32> > Key_q0;
    sc_out< sc_lv<5> > Key_address1;
    sc_out< sc_logic > Key_ce1;
    sc_in< sc_lv<32> > Key_q1;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Cipher(sc_module_name name);
    SC_HAS_PROCESS(Cipher);

    ~Cipher();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Cipher_RoundKey* RoundKey_U;
    SubBytes* grp_SubBytes_fu_169;
    KeyExpansion* grp_KeyExpansion_fu_180;
    sc_signal< sc_lv<54> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > round_reg_157;
    sc_signal< sc_lv<32> > reg_192;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > reg_196;
    sc_signal< sc_lv<4> > state_addr_reg_334;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > state_addr_16_reg_339;
    sc_signal< sc_lv<4> > state_addr_17_reg_344;
    sc_signal< sc_lv<4> > state_addr_18_reg_349;
    sc_signal< sc_lv<1> > exitcond1_i_fu_258_p2;
    sc_signal< sc_lv<3> > i_fu_264_p2;
    sc_signal< sc_lv<3> > i_reg_358;
    sc_signal< sc_lv<2> > tmp_52_fu_270_p1;
    sc_signal< sc_lv<2> > tmp_52_reg_363;
    sc_signal< sc_lv<4> > tmp_i_fu_274_p3;
    sc_signal< sc_lv<4> > tmp_i_reg_368;
    sc_signal< sc_lv<1> > exitcond_fu_317_p2;
    sc_signal< sc_lv<1> > exitcond_reg_394;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state31_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_flag00011001;
    sc_signal< sc_lv<4> > tmp_fu_328_p2;
    sc_signal< sc_lv<4> > tmp_reg_398;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_flag00011001;
    sc_signal< bool > ap_block_pp0_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state30_pp0_stage23_iter0;
    sc_signal< bool > ap_block_pp0_stage23_flag00011011;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage23;
    sc_signal< sc_lv<8> > RoundKey_address0;
    sc_signal< sc_logic > RoundKey_ce0;
    sc_signal< sc_logic > RoundKey_we0;
    sc_signal< sc_lv<32> > RoundKey_q0;
    sc_signal< sc_lv<8> > RoundKey_address1;
    sc_signal< sc_logic > RoundKey_ce1;
    sc_signal< sc_logic > RoundKey_we1;
    sc_signal< sc_lv<32> > RoundKey_q1;
    sc_signal< sc_logic > grp_SubBytes_fu_169_ap_start;
    sc_signal< sc_logic > grp_SubBytes_fu_169_ap_done;
    sc_signal< sc_logic > grp_SubBytes_fu_169_ap_idle;
    sc_signal< sc_logic > grp_SubBytes_fu_169_ap_ready;
    sc_signal< sc_lv<4> > grp_SubBytes_fu_169_state_address0;
    sc_signal< sc_logic > grp_SubBytes_fu_169_state_ce0;
    sc_signal< sc_logic > grp_SubBytes_fu_169_state_we0;
    sc_signal< sc_lv<32> > grp_SubBytes_fu_169_state_d0;
    sc_signal< sc_lv<4> > grp_SubBytes_fu_169_state_address1;
    sc_signal< sc_logic > grp_SubBytes_fu_169_state_ce1;
    sc_signal< sc_logic > grp_SubBytes_fu_169_state_we1;
    sc_signal< sc_lv<32> > grp_SubBytes_fu_169_state_d1;
    sc_signal< sc_lv<6> > grp_SubBytes_fu_169_round;
    sc_signal< sc_lv<8> > grp_SubBytes_fu_169_RoundKey_address0;
    sc_signal< sc_logic > grp_SubBytes_fu_169_RoundKey_ce0;
    sc_signal< sc_lv<8> > grp_SubBytes_fu_169_RoundKey_address1;
    sc_signal< sc_logic > grp_SubBytes_fu_169_RoundKey_ce1;
    sc_signal< sc_logic > grp_KeyExpansion_fu_180_ap_start;
    sc_signal< sc_logic > grp_KeyExpansion_fu_180_ap_done;
    sc_signal< sc_logic > grp_KeyExpansion_fu_180_ap_idle;
    sc_signal< sc_logic > grp_KeyExpansion_fu_180_ap_ready;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_180_RoundKey_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_180_RoundKey_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_180_RoundKey_we0;
    sc_signal< sc_lv<32> > grp_KeyExpansion_fu_180_RoundKey_d0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_180_RoundKey_address1;
    sc_signal< sc_logic > grp_KeyExpansion_fu_180_RoundKey_ce1;
    sc_signal< sc_logic > grp_KeyExpansion_fu_180_RoundKey_we1;
    sc_signal< sc_lv<32> > grp_KeyExpansion_fu_180_RoundKey_d1;
    sc_signal< sc_lv<5> > grp_KeyExpansion_fu_180_Key_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_180_Key_ce0;
    sc_signal< sc_lv<5> > grp_KeyExpansion_fu_180_Key_address1;
    sc_signal< sc_logic > grp_KeyExpansion_fu_180_Key_ce1;
    sc_signal< sc_lv<3> > i_i_reg_146;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > round_phi_fu_161_p4;
    sc_signal< bool > ap_block_pp0_stage0_flag00000000;
    sc_signal< sc_logic > ap_reg_grp_SubBytes_fu_169_ap_start;
    sc_signal< sc_lv<54> > ap_NS_fsm;
    sc_signal< sc_logic > ap_NS_fsm_state32;
    sc_signal< bool > ap_block_pp0_stage1_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state9_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_flag00011001;
    sc_signal< bool > ap_block_pp0_stage2_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state10_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_flag00011001;
    sc_signal< bool > ap_block_pp0_stage3_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state11_pp0_stage4_iter0;
    sc_signal< bool > ap_block_pp0_stage4_flag00011001;
    sc_signal< bool > ap_block_pp0_stage4_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_state12_pp0_stage5_iter0;
    sc_signal< bool > ap_block_pp0_stage5_flag00011001;
    sc_signal< bool > ap_block_pp0_stage5_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_state13_pp0_stage6_iter0;
    sc_signal< bool > ap_block_pp0_stage6_flag00011001;
    sc_signal< bool > ap_block_pp0_stage6_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage7;
    sc_signal< bool > ap_block_state14_pp0_stage7_iter0;
    sc_signal< bool > ap_block_pp0_stage7_flag00011001;
    sc_signal< bool > ap_block_pp0_stage7_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage8;
    sc_signal< bool > ap_block_state15_pp0_stage8_iter0;
    sc_signal< bool > ap_block_pp0_stage8_flag00011001;
    sc_signal< bool > ap_block_pp0_stage8_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage9;
    sc_signal< bool > ap_block_state16_pp0_stage9_iter0;
    sc_signal< bool > ap_block_pp0_stage9_flag00011001;
    sc_signal< bool > ap_block_pp0_stage9_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage10;
    sc_signal< bool > ap_block_state17_pp0_stage10_iter0;
    sc_signal< bool > ap_block_pp0_stage10_flag00011001;
    sc_signal< bool > ap_block_pp0_stage10_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage11;
    sc_signal< bool > ap_block_state18_pp0_stage11_iter0;
    sc_signal< bool > ap_block_pp0_stage11_flag00011001;
    sc_signal< bool > ap_block_pp0_stage11_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage12;
    sc_signal< bool > ap_block_state19_pp0_stage12_iter0;
    sc_signal< bool > ap_block_pp0_stage12_flag00011001;
    sc_signal< bool > ap_block_pp0_stage12_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage13;
    sc_signal< bool > ap_block_state20_pp0_stage13_iter0;
    sc_signal< bool > ap_block_pp0_stage13_flag00011001;
    sc_signal< bool > ap_block_pp0_stage13_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage14;
    sc_signal< bool > ap_block_state21_pp0_stage14_iter0;
    sc_signal< bool > ap_block_pp0_stage14_flag00011001;
    sc_signal< bool > ap_block_pp0_stage14_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage15;
    sc_signal< bool > ap_block_state22_pp0_stage15_iter0;
    sc_signal< bool > ap_block_pp0_stage15_flag00011001;
    sc_signal< bool > ap_block_pp0_stage15_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage16;
    sc_signal< bool > ap_block_state23_pp0_stage16_iter0;
    sc_signal< bool > ap_block_pp0_stage16_flag00011001;
    sc_signal< bool > ap_block_pp0_stage16_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage17;
    sc_signal< bool > ap_block_state24_pp0_stage17_iter0;
    sc_signal< bool > ap_block_pp0_stage17_flag00011001;
    sc_signal< bool > ap_block_pp0_stage17_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage18;
    sc_signal< bool > ap_block_state25_pp0_stage18_iter0;
    sc_signal< bool > ap_block_pp0_stage18_flag00011001;
    sc_signal< bool > ap_block_pp0_stage18_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage19;
    sc_signal< bool > ap_block_state26_pp0_stage19_iter0;
    sc_signal< bool > ap_block_pp0_stage19_flag00011001;
    sc_signal< bool > ap_block_pp0_stage19_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage20;
    sc_signal< bool > ap_block_state27_pp0_stage20_iter0;
    sc_signal< bool > ap_block_pp0_stage20_flag00011001;
    sc_signal< bool > ap_block_pp0_stage20_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage21;
    sc_signal< bool > ap_block_state28_pp0_stage21_iter0;
    sc_signal< bool > ap_block_pp0_stage21_flag00011001;
    sc_signal< bool > ap_block_pp0_stage21_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage22;
    sc_signal< bool > ap_block_state29_pp0_stage22_iter0;
    sc_signal< bool > ap_block_pp0_stage22_flag00011001;
    sc_signal< bool > ap_block_pp0_stage22_flag00000000;
    sc_signal< bool > ap_block_pp0_stage23_flag00011001;
    sc_signal< bool > ap_block_pp0_stage23_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_logic > ap_CS_fsm_state37;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< sc_logic > ap_CS_fsm_state45;
    sc_signal< sc_logic > ap_CS_fsm_state46;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_logic > ap_CS_fsm_state48;
    sc_signal< sc_logic > ap_CS_fsm_state49;
    sc_signal< sc_logic > ap_CS_fsm_state50;
    sc_signal< sc_logic > ap_CS_fsm_state51;
    sc_signal< sc_logic > ap_CS_fsm_state52;
    sc_signal< sc_logic > ap_CS_fsm_state53;
    sc_signal< sc_logic > ap_CS_fsm_state54;
    sc_signal< sc_logic > ap_CS_fsm_state55;
    sc_signal< sc_lv<6> > round_cast1_cast_fu_323_p1;
    sc_signal< sc_logic > ap_reg_grp_KeyExpansion_fu_180_ap_start;
    sc_signal< sc_lv<32> > i_i_cast2_fu_214_p1;
    sc_signal< sc_lv<32> > tmp_52_cast_fu_233_p1;
    sc_signal< sc_lv<32> > tmp_50_fu_238_p3;
    sc_signal< sc_lv<32> > tmp_54_cast_fu_253_p1;
    sc_signal< sc_lv<32> > tmp_i_cast_fu_281_p1;
    sc_signal< sc_lv<32> > sum3_i_cast_fu_292_p1;
    sc_signal< sc_lv<32> > sum3_1_i_cast_fu_302_p1;
    sc_signal< sc_lv<32> > sum3_2_i_cast_fu_312_p1;
    sc_signal< sc_lv<32> > grp_fu_200_p2;
    sc_signal< sc_lv<32> > grp_fu_207_p2;
    sc_signal< sc_lv<4> > i_i_cast2_cast_fu_223_p1;
    sc_signal< sc_lv<4> > tmp_49_fu_227_p2;
    sc_signal< sc_lv<5> > i_i_cast2_cast1_fu_219_p1;
    sc_signal< sc_lv<5> > tmp_51_fu_247_p2;
    sc_signal< sc_lv<4> > sum3_i_fu_286_p2;
    sc_signal< sc_lv<4> > sum3_1_i_fu_297_p2;
    sc_signal< sc_lv<4> > sum3_2_i_fu_307_p2;
    sc_signal< bool > ap_block_pp0_stage1_flag00011011;
    sc_signal< bool > ap_block_pp0_stage2_flag00011011;
    sc_signal< bool > ap_block_pp0_stage3_flag00011011;
    sc_signal< bool > ap_block_pp0_stage4_flag00011011;
    sc_signal< bool > ap_block_pp0_stage5_flag00011011;
    sc_signal< bool > ap_block_pp0_stage6_flag00011011;
    sc_signal< bool > ap_block_pp0_stage7_flag00011011;
    sc_signal< bool > ap_block_pp0_stage8_flag00011011;
    sc_signal< bool > ap_block_pp0_stage9_flag00011011;
    sc_signal< bool > ap_block_pp0_stage10_flag00011011;
    sc_signal< bool > ap_block_pp0_stage11_flag00011011;
    sc_signal< bool > ap_block_pp0_stage12_flag00011011;
    sc_signal< bool > ap_block_pp0_stage13_flag00011011;
    sc_signal< bool > ap_block_pp0_stage14_flag00011011;
    sc_signal< bool > ap_block_pp0_stage15_flag00011011;
    sc_signal< bool > ap_block_pp0_stage16_flag00011011;
    sc_signal< bool > ap_block_pp0_stage17_flag00011011;
    sc_signal< bool > ap_block_pp0_stage18_flag00011011;
    sc_signal< bool > ap_block_pp0_stage19_flag00011011;
    sc_signal< bool > ap_block_pp0_stage20_flag00011011;
    sc_signal< bool > ap_block_pp0_stage21_flag00011011;
    sc_signal< bool > ap_block_pp0_stage22_flag00011011;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<54> ap_ST_fsm_state1;
    static const sc_lv<54> ap_ST_fsm_state2;
    static const sc_lv<54> ap_ST_fsm_state3;
    static const sc_lv<54> ap_ST_fsm_state4;
    static const sc_lv<54> ap_ST_fsm_state5;
    static const sc_lv<54> ap_ST_fsm_state6;
    static const sc_lv<54> ap_ST_fsm_pp0_stage0;
    static const sc_lv<54> ap_ST_fsm_pp0_stage1;
    static const sc_lv<54> ap_ST_fsm_pp0_stage2;
    static const sc_lv<54> ap_ST_fsm_pp0_stage3;
    static const sc_lv<54> ap_ST_fsm_pp0_stage4;
    static const sc_lv<54> ap_ST_fsm_pp0_stage5;
    static const sc_lv<54> ap_ST_fsm_pp0_stage6;
    static const sc_lv<54> ap_ST_fsm_pp0_stage7;
    static const sc_lv<54> ap_ST_fsm_pp0_stage8;
    static const sc_lv<54> ap_ST_fsm_pp0_stage9;
    static const sc_lv<54> ap_ST_fsm_pp0_stage10;
    static const sc_lv<54> ap_ST_fsm_pp0_stage11;
    static const sc_lv<54> ap_ST_fsm_pp0_stage12;
    static const sc_lv<54> ap_ST_fsm_pp0_stage13;
    static const sc_lv<54> ap_ST_fsm_pp0_stage14;
    static const sc_lv<54> ap_ST_fsm_pp0_stage15;
    static const sc_lv<54> ap_ST_fsm_pp0_stage16;
    static const sc_lv<54> ap_ST_fsm_pp0_stage17;
    static const sc_lv<54> ap_ST_fsm_pp0_stage18;
    static const sc_lv<54> ap_ST_fsm_pp0_stage19;
    static const sc_lv<54> ap_ST_fsm_pp0_stage20;
    static const sc_lv<54> ap_ST_fsm_pp0_stage21;
    static const sc_lv<54> ap_ST_fsm_pp0_stage22;
    static const sc_lv<54> ap_ST_fsm_pp0_stage23;
    static const sc_lv<54> ap_ST_fsm_state32;
    static const sc_lv<54> ap_ST_fsm_state33;
    static const sc_lv<54> ap_ST_fsm_state34;
    static const sc_lv<54> ap_ST_fsm_state35;
    static const sc_lv<54> ap_ST_fsm_state36;
    static const sc_lv<54> ap_ST_fsm_state37;
    static const sc_lv<54> ap_ST_fsm_state38;
    static const sc_lv<54> ap_ST_fsm_state39;
    static const sc_lv<54> ap_ST_fsm_state40;
    static const sc_lv<54> ap_ST_fsm_state41;
    static const sc_lv<54> ap_ST_fsm_state42;
    static const sc_lv<54> ap_ST_fsm_state43;
    static const sc_lv<54> ap_ST_fsm_state44;
    static const sc_lv<54> ap_ST_fsm_state45;
    static const sc_lv<54> ap_ST_fsm_state46;
    static const sc_lv<54> ap_ST_fsm_state47;
    static const sc_lv<54> ap_ST_fsm_state48;
    static const sc_lv<54> ap_ST_fsm_state49;
    static const sc_lv<54> ap_ST_fsm_state50;
    static const sc_lv<54> ap_ST_fsm_state51;
    static const sc_lv<54> ap_ST_fsm_state52;
    static const sc_lv<54> ap_ST_fsm_state53;
    static const sc_lv<54> ap_ST_fsm_state54;
    static const sc_lv<54> ap_ST_fsm_state55;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<6> ap_const_lv6_A;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<29> ap_const_lv29_1;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_A;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_Key_address0();
    void thread_Key_address1();
    void thread_Key_ce0();
    void thread_Key_ce1();
    void thread_RoundKey_address0();
    void thread_RoundKey_address1();
    void thread_RoundKey_ce0();
    void thread_RoundKey_ce1();
    void thread_RoundKey_we0();
    void thread_RoundKey_we1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage10();
    void thread_ap_CS_fsm_pp0_stage11();
    void thread_ap_CS_fsm_pp0_stage12();
    void thread_ap_CS_fsm_pp0_stage13();
    void thread_ap_CS_fsm_pp0_stage14();
    void thread_ap_CS_fsm_pp0_stage15();
    void thread_ap_CS_fsm_pp0_stage16();
    void thread_ap_CS_fsm_pp0_stage17();
    void thread_ap_CS_fsm_pp0_stage18();
    void thread_ap_CS_fsm_pp0_stage19();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage20();
    void thread_ap_CS_fsm_pp0_stage21();
    void thread_ap_CS_fsm_pp0_stage22();
    void thread_ap_CS_fsm_pp0_stage23();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_pp0_stage7();
    void thread_ap_CS_fsm_pp0_stage8();
    void thread_ap_CS_fsm_pp0_stage9();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state37();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state45();
    void thread_ap_CS_fsm_state46();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state49();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state50();
    void thread_ap_CS_fsm_state51();
    void thread_ap_CS_fsm_state52();
    void thread_ap_CS_fsm_state53();
    void thread_ap_CS_fsm_state54();
    void thread_ap_CS_fsm_state55();
    void thread_ap_CS_fsm_state6();
    void thread_ap_NS_fsm_state32();
    void thread_ap_block_pp0_stage0_flag00000000();
    void thread_ap_block_pp0_stage0_flag00011001();
    void thread_ap_block_pp0_stage0_flag00011011();
    void thread_ap_block_pp0_stage10_flag00000000();
    void thread_ap_block_pp0_stage10_flag00011001();
    void thread_ap_block_pp0_stage10_flag00011011();
    void thread_ap_block_pp0_stage11_flag00000000();
    void thread_ap_block_pp0_stage11_flag00011001();
    void thread_ap_block_pp0_stage11_flag00011011();
    void thread_ap_block_pp0_stage12_flag00000000();
    void thread_ap_block_pp0_stage12_flag00011001();
    void thread_ap_block_pp0_stage12_flag00011011();
    void thread_ap_block_pp0_stage13_flag00000000();
    void thread_ap_block_pp0_stage13_flag00011001();
    void thread_ap_block_pp0_stage13_flag00011011();
    void thread_ap_block_pp0_stage14_flag00000000();
    void thread_ap_block_pp0_stage14_flag00011001();
    void thread_ap_block_pp0_stage14_flag00011011();
    void thread_ap_block_pp0_stage15_flag00000000();
    void thread_ap_block_pp0_stage15_flag00011001();
    void thread_ap_block_pp0_stage15_flag00011011();
    void thread_ap_block_pp0_stage16_flag00000000();
    void thread_ap_block_pp0_stage16_flag00011001();
    void thread_ap_block_pp0_stage16_flag00011011();
    void thread_ap_block_pp0_stage17_flag00000000();
    void thread_ap_block_pp0_stage17_flag00011001();
    void thread_ap_block_pp0_stage17_flag00011011();
    void thread_ap_block_pp0_stage18_flag00000000();
    void thread_ap_block_pp0_stage18_flag00011001();
    void thread_ap_block_pp0_stage18_flag00011011();
    void thread_ap_block_pp0_stage19_flag00000000();
    void thread_ap_block_pp0_stage19_flag00011001();
    void thread_ap_block_pp0_stage19_flag00011011();
    void thread_ap_block_pp0_stage1_flag00000000();
    void thread_ap_block_pp0_stage1_flag00011001();
    void thread_ap_block_pp0_stage1_flag00011011();
    void thread_ap_block_pp0_stage20_flag00000000();
    void thread_ap_block_pp0_stage20_flag00011001();
    void thread_ap_block_pp0_stage20_flag00011011();
    void thread_ap_block_pp0_stage21_flag00000000();
    void thread_ap_block_pp0_stage21_flag00011001();
    void thread_ap_block_pp0_stage21_flag00011011();
    void thread_ap_block_pp0_stage22_flag00000000();
    void thread_ap_block_pp0_stage22_flag00011001();
    void thread_ap_block_pp0_stage22_flag00011011();
    void thread_ap_block_pp0_stage23_flag00000000();
    void thread_ap_block_pp0_stage23_flag00011001();
    void thread_ap_block_pp0_stage23_flag00011011();
    void thread_ap_block_pp0_stage2_flag00000000();
    void thread_ap_block_pp0_stage2_flag00011001();
    void thread_ap_block_pp0_stage2_flag00011011();
    void thread_ap_block_pp0_stage3_flag00000000();
    void thread_ap_block_pp0_stage3_flag00011001();
    void thread_ap_block_pp0_stage3_flag00011011();
    void thread_ap_block_pp0_stage4_flag00000000();
    void thread_ap_block_pp0_stage4_flag00011001();
    void thread_ap_block_pp0_stage4_flag00011011();
    void thread_ap_block_pp0_stage5_flag00000000();
    void thread_ap_block_pp0_stage5_flag00011001();
    void thread_ap_block_pp0_stage5_flag00011011();
    void thread_ap_block_pp0_stage6_flag00000000();
    void thread_ap_block_pp0_stage6_flag00011001();
    void thread_ap_block_pp0_stage6_flag00011011();
    void thread_ap_block_pp0_stage7_flag00000000();
    void thread_ap_block_pp0_stage7_flag00011001();
    void thread_ap_block_pp0_stage7_flag00011011();
    void thread_ap_block_pp0_stage8_flag00000000();
    void thread_ap_block_pp0_stage8_flag00011001();
    void thread_ap_block_pp0_stage8_flag00011011();
    void thread_ap_block_pp0_stage9_flag00000000();
    void thread_ap_block_pp0_stage9_flag00011001();
    void thread_ap_block_pp0_stage9_flag00011011();
    void thread_ap_block_state10_pp0_stage3_iter0();
    void thread_ap_block_state11_pp0_stage4_iter0();
    void thread_ap_block_state12_pp0_stage5_iter0();
    void thread_ap_block_state13_pp0_stage6_iter0();
    void thread_ap_block_state14_pp0_stage7_iter0();
    void thread_ap_block_state15_pp0_stage8_iter0();
    void thread_ap_block_state16_pp0_stage9_iter0();
    void thread_ap_block_state17_pp0_stage10_iter0();
    void thread_ap_block_state18_pp0_stage11_iter0();
    void thread_ap_block_state19_pp0_stage12_iter0();
    void thread_ap_block_state20_pp0_stage13_iter0();
    void thread_ap_block_state21_pp0_stage14_iter0();
    void thread_ap_block_state22_pp0_stage15_iter0();
    void thread_ap_block_state23_pp0_stage16_iter0();
    void thread_ap_block_state24_pp0_stage17_iter0();
    void thread_ap_block_state25_pp0_stage18_iter0();
    void thread_ap_block_state26_pp0_stage19_iter0();
    void thread_ap_block_state27_pp0_stage20_iter0();
    void thread_ap_block_state28_pp0_stage21_iter0();
    void thread_ap_block_state29_pp0_stage22_iter0();
    void thread_ap_block_state30_pp0_stage23_iter0();
    void thread_ap_block_state31_pp0_stage0_iter1();
    void thread_ap_block_state7_pp0_stage0_iter0();
    void thread_ap_block_state8_pp0_stage1_iter0();
    void thread_ap_block_state9_pp0_stage2_iter0();
    void thread_ap_condition_pp0_exit_iter0_state7();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond1_i_fu_258_p2();
    void thread_exitcond_fu_317_p2();
    void thread_grp_KeyExpansion_fu_180_ap_start();
    void thread_grp_SubBytes_fu_169_ap_start();
    void thread_grp_SubBytes_fu_169_round();
    void thread_grp_fu_200_p2();
    void thread_grp_fu_207_p2();
    void thread_i_fu_264_p2();
    void thread_i_i_cast2_cast1_fu_219_p1();
    void thread_i_i_cast2_cast_fu_223_p1();
    void thread_i_i_cast2_fu_214_p1();
    void thread_round_cast1_cast_fu_323_p1();
    void thread_round_phi_fu_161_p4();
    void thread_state_address0();
    void thread_state_address1();
    void thread_state_ce0();
    void thread_state_ce1();
    void thread_state_d0();
    void thread_state_d1();
    void thread_state_we0();
    void thread_state_we1();
    void thread_sum3_1_i_cast_fu_302_p1();
    void thread_sum3_1_i_fu_297_p2();
    void thread_sum3_2_i_cast_fu_312_p1();
    void thread_sum3_2_i_fu_307_p2();
    void thread_sum3_i_cast_fu_292_p1();
    void thread_sum3_i_fu_286_p2();
    void thread_tmp_49_fu_227_p2();
    void thread_tmp_50_fu_238_p3();
    void thread_tmp_51_fu_247_p2();
    void thread_tmp_52_cast_fu_233_p1();
    void thread_tmp_52_fu_270_p1();
    void thread_tmp_54_cast_fu_253_p1();
    void thread_tmp_fu_328_p2();
    void thread_tmp_i_cast_fu_281_p1();
    void thread_tmp_i_fu_274_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
