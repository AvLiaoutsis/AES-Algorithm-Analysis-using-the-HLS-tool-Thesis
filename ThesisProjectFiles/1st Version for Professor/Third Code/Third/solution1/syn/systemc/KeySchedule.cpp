// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "KeySchedule.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic KeySchedule::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic KeySchedule::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> KeySchedule::ap_ST_fsm_state1 = "1";
const sc_lv<12> KeySchedule::ap_ST_fsm_state2 = "10";
const sc_lv<12> KeySchedule::ap_ST_fsm_state3 = "100";
const sc_lv<12> KeySchedule::ap_ST_fsm_state4 = "1000";
const sc_lv<12> KeySchedule::ap_ST_fsm_state5 = "10000";
const sc_lv<12> KeySchedule::ap_ST_fsm_state6 = "100000";
const sc_lv<12> KeySchedule::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> KeySchedule::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> KeySchedule::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> KeySchedule::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> KeySchedule::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> KeySchedule::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> KeySchedule::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> KeySchedule::ap_const_lv32_1 = "1";
const sc_lv<1> KeySchedule::ap_const_lv1_0 = "0";
const sc_lv<32> KeySchedule::ap_const_lv32_2 = "10";
const sc_lv<32> KeySchedule::ap_const_lv32_4 = "100";
const sc_lv<32> KeySchedule::ap_const_lv32_5 = "101";
const sc_lv<32> KeySchedule::ap_const_lv32_6 = "110";
const sc_lv<32> KeySchedule::ap_const_lv32_7 = "111";
const sc_lv<32> KeySchedule::ap_const_lv32_8 = "1000";
const sc_lv<32> KeySchedule::ap_const_lv32_9 = "1001";
const sc_lv<32> KeySchedule::ap_const_lv32_A = "1010";
const sc_lv<1> KeySchedule::ap_const_lv1_1 = "1";
const sc_lv<3> KeySchedule::ap_const_lv3_0 = "000";
const sc_lv<32> KeySchedule::ap_const_lv32_3 = "11";
const sc_lv<6> KeySchedule::ap_const_lv6_4 = "100";
const sc_lv<32> KeySchedule::ap_const_lv32_B = "1011";
const sc_lv<32> KeySchedule::ap_const_lv32_1F = "11111";
const sc_lv<6> KeySchedule::ap_const_lv6_0 = "000000";
const sc_lv<3> KeySchedule::ap_const_lv3_4 = "100";
const sc_lv<3> KeySchedule::ap_const_lv3_1 = "1";
const sc_lv<2> KeySchedule::ap_const_lv2_0 = "00";
const sc_lv<7> KeySchedule::ap_const_lv7_0 = "0000000";
const sc_lv<6> KeySchedule::ap_const_lv6_2C = "101100";
const sc_lv<6> KeySchedule::ap_const_lv6_3F = "111111";
const sc_lv<8> KeySchedule::ap_const_lv8_78 = "1111000";
const sc_lv<9> KeySchedule::ap_const_lv9_F0 = "11110000";
const sc_lv<9> KeySchedule::ap_const_lv9_168 = "101101000";
const sc_lv<10> KeySchedule::ap_const_lv10_0 = "0000000000";
const sc_lv<4> KeySchedule::ap_const_lv4_0 = "0000";
const sc_lv<4> KeySchedule::ap_const_lv4_F = "1111";
const sc_lv<6> KeySchedule::ap_const_lv6_3C = "111100";
const sc_lv<6> KeySchedule::ap_const_lv6_1 = "1";
const bool KeySchedule::ap_const_boolean_1 = true;

KeySchedule::KeySchedule(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Sbox_U = new KeySchedule_Sbox("Sbox_U");
    Sbox_U->clk(ap_clk);
    Sbox_U->reset(ap_rst);
    Sbox_U->address0(Sbox_address0);
    Sbox_U->ce0(Sbox_ce0);
    Sbox_U->q0(Sbox_q0);
    Sbox_U->address1(Sbox_address1);
    Sbox_U->ce1(Sbox_ce1);
    Sbox_U->q1(Sbox_q1);
    Rcon0_U = new KeySchedule_Rcon0("Rcon0_U");
    Rcon0_U->clk(ap_clk);
    Rcon0_U->reset(ap_rst);
    Rcon0_U->address0(Rcon0_address0);
    Rcon0_U->ce0(Rcon0_ce0);
    Rcon0_U->q0(Rcon0_q0);
    aes_main_mux_42_3bkb_U0 = new aes_main_mux_42_3bkb<1,1,32,32,32,32,2,32>("aes_main_mux_42_3bkb_U0");
    aes_main_mux_42_3bkb_U0->din1(temp_02_reg_264);
    aes_main_mux_42_3bkb_U0->din2(temp_12_reg_254);
    aes_main_mux_42_3bkb_U0->din3(temp_22_reg_244);
    aes_main_mux_42_3bkb_U0->din4(temp_3_reg_274);
    aes_main_mux_42_3bkb_U0->din5(tmp_13_fu_957_p5);
    aes_main_mux_42_3bkb_U0->dout(tmp_13_fu_957_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Rcon0_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_34_fu_706_p1 );

    SC_METHOD(thread_Rcon0_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_Sbox_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_68_cast_fu_610_p1 );
    sensitive << ( tmp_84_cast_fu_781_p1 );

    SC_METHOD(thread_Sbox_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_76_cast_fu_685_p1 );
    sensitive << ( tmp_92_cast_fu_856_p1 );

    SC_METHOD(thread_Sbox_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_Sbox_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_Sbox_load_3_cast_fu_880_p1);
    sensitive << ( Sbox_q1 );

    SC_METHOD(thread_addconv_fu_700_p2);
    sensitive << ( p_lshr_f_cast_fu_690_p4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_472_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_472_p2 );

    SC_METHOD(thread_exitcond1_fu_472_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_1_reg_232 );

    SC_METHOD(thread_exitcond2_fu_446_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_221 );

    SC_METHOD(thread_exitcond3_fu_355_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_reg_209 );

    SC_METHOD(thread_exitcond_fu_941_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_2_reg_284 );

    SC_METHOD(thread_grp_fu_295_p3);
    sensitive << ( word_q0 );

    SC_METHOD(thread_grp_fu_303_p2);
    sensitive << ( word_q0 );

    SC_METHOD(thread_grp_fu_309_p4);
    sensitive << ( grp_fu_303_p2 );

    SC_METHOD(thread_grp_fu_319_p2);
    sensitive << ( grp_fu_309_p4 );

    SC_METHOD(thread_grp_fu_325_p3);
    sensitive << ( word_q1 );

    SC_METHOD(thread_grp_fu_333_p2);
    sensitive << ( word_q1 );

    SC_METHOD(thread_grp_fu_339_p4);
    sensitive << ( grp_fu_333_p2 );

    SC_METHOD(thread_grp_fu_349_p2);
    sensitive << ( grp_fu_339_p4 );

    SC_METHOD(thread_i_1_fu_452_p2);
    sensitive << ( i_reg_221 );

    SC_METHOD(thread_i_3_fu_947_p2);
    sensitive << ( i_2_reg_284 );

    SC_METHOD(thread_i_cast_fu_442_p1);
    sensitive << ( i_reg_221 );

    SC_METHOD(thread_j_1_cast2_cast_fu_468_p1);
    sensitive << ( j_1_reg_232 );

    SC_METHOD(thread_j_4_fu_361_p2);
    sensitive << ( j_reg_209 );

    SC_METHOD(thread_j_5_fu_971_p2);
    sensitive << ( j_1_reg_232 );

    SC_METHOD(thread_key_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sum_cast_fu_463_p1 );

    SC_METHOD(thread_key_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_p_lshr_f_cast_fu_690_p4);
    sensitive << ( j_1_reg_232 );

    SC_METHOD(thread_p_shl2_cast_fu_911_p1);
    sensitive << ( tmp_94_fu_903_p3 );

    SC_METHOD(thread_p_shl5_cast_fu_399_p1);
    sensitive << ( tmp_47_fu_391_p3 );

    SC_METHOD(thread_p_shl_cast_fu_387_p1);
    sensitive << ( tmp_45_fu_379_p3 );

    SC_METHOD(thread_sum_cast_fu_463_p1);
    sensitive << ( sum_fu_458_p2 );

    SC_METHOD(thread_sum_fu_458_p2);
    sensitive << ( tmp_reg_991 );
    sensitive << ( i_cast_fu_442_p1 );

    SC_METHOD(thread_temp_0_1_cast_fu_866_p1);
    sensitive << ( temp_0_fu_861_p2 );

    SC_METHOD(thread_temp_0_fu_861_p2);
    sensitive << ( Rcon0_q0 );
    sensitive << ( Sbox_load_reg_1078 );

    SC_METHOD(thread_temp_1_cast_fu_871_p1);
    sensitive << ( temp_1_reg_1088 );

    SC_METHOD(thread_temp_2_cast_fu_875_p1);
    sensitive << ( Sbox_q0 );

    SC_METHOD(thread_tmp_100_fu_816_p3);
    sensitive << ( grp_fu_295_p3 );
    sensitive << ( tmp_98_fu_802_p2 );
    sensitive << ( tmp_99_fu_808_p3 );

    SC_METHOD(thread_tmp_101_fu_824_p4);
    sensitive << ( word_q0 );

    SC_METHOD(thread_tmp_102_fu_834_p3);
    sensitive << ( grp_fu_295_p3 );
    sensitive << ( grp_fu_319_p2 );
    sensitive << ( tmp_101_fu_824_p4 );

    SC_METHOD(thread_tmp_13_fu_957_p5);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_2_reg_284 );

    SC_METHOD(thread_tmp_33_fu_488_p2);
    sensitive << ( j_1_reg_232 );

    SC_METHOD(thread_tmp_34_fu_706_p1);
    sensitive << ( addconv_fu_700_p2 );

    SC_METHOD(thread_tmp_35_fu_885_p2);
    sensitive << ( j_1_reg_232 );

    SC_METHOD(thread_tmp_36_fu_977_p2);
    sensitive << ( word_q1 );
    sensitive << ( tmp_13_reg_1126 );

    SC_METHOD(thread_tmp_45_fu_379_p3);
    sensitive << ( i_reg_221 );

    SC_METHOD(thread_tmp_46_fu_367_p1);
    sensitive << ( j_reg_209 );

    SC_METHOD(thread_tmp_47_fu_391_p3);
    sensitive << ( i_reg_221 );

    SC_METHOD(thread_tmp_48_fu_403_p2);
    sensitive << ( p_shl_cast_fu_387_p1 );
    sensitive << ( p_shl5_cast_fu_399_p1 );

    SC_METHOD(thread_tmp_49_fu_409_p1);
    sensitive << ( tmp_48_fu_403_p2 );

    SC_METHOD(thread_tmp_50_cast_cast1_fu_499_p1);
    sensitive << ( tmp_33_fu_488_p2 );

    SC_METHOD(thread_tmp_50_cast_cast_fu_503_p1);
    sensitive << ( tmp_33_fu_488_p2 );

    SC_METHOD(thread_tmp_50_cast_fu_494_p1);
    sensitive << ( tmp_33_fu_488_p2 );

    SC_METHOD(thread_tmp_50_fu_413_p2);
    sensitive << ( j_reg_209 );
    sensitive << ( tmp_49_fu_409_p1 );

    SC_METHOD(thread_tmp_51_fu_419_p4);
    sensitive << ( tmp_48_fu_403_p2 );

    SC_METHOD(thread_tmp_52_cast_cast_fu_891_p1);
    sensitive << ( tmp_35_fu_885_p2 );

    SC_METHOD(thread_tmp_52_fu_429_p3);
    sensitive << ( tmp_51_fu_419_p4 );
    sensitive << ( tmp_50_fu_413_p2 );

    SC_METHOD(thread_tmp_53_fu_437_p1);
    sensitive << ( tmp_52_fu_429_p3 );

    SC_METHOD(thread_tmp_54_fu_478_p1);
    sensitive << ( j_1_reg_232 );

    SC_METHOD(thread_tmp_55_fu_507_p2);
    sensitive << ( tmp_50_cast_cast_fu_503_p1 );

    SC_METHOD(thread_tmp_56_fu_518_p2);
    sensitive << ( tmp_50_cast_cast1_fu_499_p1 );

    SC_METHOD(thread_tmp_57_fu_529_p2);
    sensitive << ( tmp_50_cast_cast1_fu_499_p1 );

    SC_METHOD(thread_tmp_58_cast_fu_513_p1);
    sensitive << ( tmp_55_fu_507_p2 );

    SC_METHOD(thread_tmp_59_cast_fu_524_p1);
    sensitive << ( tmp_56_fu_518_p2 );

    SC_METHOD(thread_tmp_59_fu_540_p1);
    sensitive << ( word_q0 );

    SC_METHOD(thread_tmp_60_cast_fu_535_p1);
    sensitive << ( tmp_57_fu_529_p2 );

    SC_METHOD(thread_tmp_60_fu_544_p1);
    sensitive << ( grp_fu_303_p2 );

    SC_METHOD(thread_tmp_61_fu_548_p3);
    sensitive << ( tmp_60_fu_544_p1 );

    SC_METHOD(thread_tmp_62_fu_556_p2);
    sensitive << ( tmp_61_fu_548_p3 );

    SC_METHOD(thread_tmp_63_fu_562_p3);
    sensitive << ( tmp_59_fu_540_p1 );

    SC_METHOD(thread_tmp_64_fu_570_p3);
    sensitive << ( grp_fu_295_p3 );
    sensitive << ( tmp_62_fu_556_p2 );
    sensitive << ( tmp_63_fu_562_p3 );

    SC_METHOD(thread_tmp_65_fu_578_p4);
    sensitive << ( word_q0 );

    SC_METHOD(thread_tmp_66_fu_588_p3);
    sensitive << ( grp_fu_295_p3 );
    sensitive << ( grp_fu_319_p2 );
    sensitive << ( tmp_65_fu_578_p4 );

    SC_METHOD(thread_tmp_67_cast_fu_596_p3);
    sensitive << ( tmp_66_fu_588_p3 );

    SC_METHOD(thread_tmp_67_fu_604_p2);
    sensitive << ( tmp_67_cast_fu_596_p3 );
    sensitive << ( tmp_64_fu_570_p3 );

    SC_METHOD(thread_tmp_68_cast_fu_610_p1);
    sensitive << ( tmp_67_fu_604_p2 );

    SC_METHOD(thread_tmp_69_fu_615_p1);
    sensitive << ( word_q1 );

    SC_METHOD(thread_tmp_70_fu_619_p1);
    sensitive << ( grp_fu_333_p2 );

    SC_METHOD(thread_tmp_71_fu_623_p3);
    sensitive << ( tmp_70_fu_619_p1 );

    SC_METHOD(thread_tmp_72_fu_631_p2);
    sensitive << ( tmp_71_fu_623_p3 );

    SC_METHOD(thread_tmp_73_fu_637_p3);
    sensitive << ( tmp_69_fu_615_p1 );

    SC_METHOD(thread_tmp_74_fu_645_p3);
    sensitive << ( grp_fu_325_p3 );
    sensitive << ( tmp_72_fu_631_p2 );
    sensitive << ( tmp_73_fu_637_p3 );

    SC_METHOD(thread_tmp_75_cast_fu_671_p3);
    sensitive << ( tmp_77_fu_663_p3 );

    SC_METHOD(thread_tmp_75_fu_653_p4);
    sensitive << ( word_q1 );

    SC_METHOD(thread_tmp_76_cast_fu_685_p1);
    sensitive << ( tmp_76_fu_679_p2 );

    SC_METHOD(thread_tmp_76_fu_679_p2);
    sensitive << ( tmp_75_cast_fu_671_p3 );
    sensitive << ( tmp_74_fu_645_p3 );

    SC_METHOD(thread_tmp_77_fu_663_p3);
    sensitive << ( grp_fu_325_p3 );
    sensitive << ( grp_fu_349_p2 );
    sensitive << ( tmp_75_fu_653_p4 );

    SC_METHOD(thread_tmp_79_fu_711_p1);
    sensitive << ( word_q1 );

    SC_METHOD(thread_tmp_80_fu_715_p1);
    sensitive << ( grp_fu_333_p2 );

    SC_METHOD(thread_tmp_81_fu_719_p3);
    sensitive << ( tmp_80_fu_715_p1 );

    SC_METHOD(thread_tmp_82_fu_727_p2);
    sensitive << ( tmp_81_fu_719_p3 );

    SC_METHOD(thread_tmp_83_cast_fu_767_p3);
    sensitive << ( tmp_87_fu_759_p3 );

    SC_METHOD(thread_tmp_83_fu_733_p3);
    sensitive << ( tmp_79_fu_711_p1 );

    SC_METHOD(thread_tmp_84_cast_fu_781_p1);
    sensitive << ( tmp_84_fu_775_p2 );

    SC_METHOD(thread_tmp_84_fu_775_p2);
    sensitive << ( tmp_83_cast_fu_767_p3 );
    sensitive << ( tmp_85_fu_741_p3 );

    SC_METHOD(thread_tmp_85_fu_741_p3);
    sensitive << ( grp_fu_325_p3 );
    sensitive << ( tmp_82_fu_727_p2 );
    sensitive << ( tmp_83_fu_733_p3 );

    SC_METHOD(thread_tmp_86_fu_749_p4);
    sensitive << ( word_q1 );

    SC_METHOD(thread_tmp_87_fu_759_p3);
    sensitive << ( grp_fu_325_p3 );
    sensitive << ( grp_fu_349_p2 );
    sensitive << ( tmp_86_fu_749_p4 );

    SC_METHOD(thread_tmp_89_fu_786_p1);
    sensitive << ( word_q0 );

    SC_METHOD(thread_tmp_90_fu_790_p1);
    sensitive << ( grp_fu_303_p2 );

    SC_METHOD(thread_tmp_91_cast_fu_842_p3);
    sensitive << ( tmp_102_fu_834_p3 );

    SC_METHOD(thread_tmp_91_fu_794_p3);
    sensitive << ( tmp_90_fu_790_p1 );

    SC_METHOD(thread_tmp_92_cast_fu_856_p1);
    sensitive << ( tmp_92_fu_850_p2 );

    SC_METHOD(thread_tmp_92_fu_850_p2);
    sensitive << ( tmp_91_cast_fu_842_p3 );
    sensitive << ( tmp_100_fu_816_p3 );

    SC_METHOD(thread_tmp_93_fu_895_p3);
    sensitive << ( i_2_reg_284 );

    SC_METHOD(thread_tmp_94_fu_903_p3);
    sensitive << ( i_2_reg_284 );

    SC_METHOD(thread_tmp_95_fu_915_p2);
    sensitive << ( tmp_93_fu_895_p3 );
    sensitive << ( p_shl2_cast_fu_911_p1 );

    SC_METHOD(thread_tmp_96_cast_fu_926_p1);
    sensitive << ( tmp_96_fu_921_p2 );

    SC_METHOD(thread_tmp_96_fu_921_p2);
    sensitive << ( tmp_52_cast_cast_reg_1103 );
    sensitive << ( tmp_95_fu_915_p2 );

    SC_METHOD(thread_tmp_97_cast_fu_936_p1);
    sensitive << ( tmp_97_fu_931_p2 );

    SC_METHOD(thread_tmp_97_fu_931_p2);
    sensitive << ( j_1_cast2_cast_reg_1014 );
    sensitive << ( tmp_95_fu_915_p2 );

    SC_METHOD(thread_tmp_98_fu_802_p2);
    sensitive << ( tmp_91_fu_794_p3 );

    SC_METHOD(thread_tmp_99_fu_808_p3);
    sensitive << ( tmp_89_fu_786_p1 );

    SC_METHOD(thread_tmp_fu_371_p3);
    sensitive << ( tmp_46_fu_367_p1 );

    SC_METHOD(thread_tmp_s_fu_482_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_472_p2 );
    sensitive << ( tmp_54_fu_478_p1 );

    SC_METHOD(thread_word_address0);
    sensitive << ( word_addr_reg_996 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_s_fu_482_p2 );
    sensitive << ( exitcond1_fu_472_p2 );
    sensitive << ( word_addr_6_reg_1037 );
    sensitive << ( word_addr_7_reg_1043 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( word_addr_9_reg_1113 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_58_cast_fu_513_p1 );
    sensitive << ( tmp_50_cast_fu_494_p1 );

    SC_METHOD(thread_word_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_s_fu_482_p2 );
    sensitive << ( exitcond1_fu_472_p2 );
    sensitive << ( word_addr_5_reg_1032 );
    sensitive << ( word_addr_6_reg_1037 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_58_cast_fu_513_p1 );
    sensitive << ( tmp_59_cast_fu_524_p1 );
    sensitive << ( tmp_96_cast_fu_926_p1 );

    SC_METHOD(thread_word_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_s_fu_482_p2 );
    sensitive << ( exitcond1_fu_472_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_word_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_s_fu_482_p2 );
    sensitive << ( exitcond1_fu_472_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_word_d0);
    sensitive << ( key_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_36_fu_977_p2 );

    SC_METHOD(thread_word_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_355_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_446_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_s_fu_482_p2 );
    sensitive << ( exitcond1_fu_472_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_941_p2 );

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "KeySchedule_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, key_address0, "(port)key_address0");
    sc_trace(mVcdFile, key_ce0, "(port)key_ce0");
    sc_trace(mVcdFile, key_q0, "(port)key_q0");
    sc_trace(mVcdFile, word_address0, "(port)word_address0");
    sc_trace(mVcdFile, word_ce0, "(port)word_ce0");
    sc_trace(mVcdFile, word_we0, "(port)word_we0");
    sc_trace(mVcdFile, word_d0, "(port)word_d0");
    sc_trace(mVcdFile, word_q0, "(port)word_q0");
    sc_trace(mVcdFile, word_address1, "(port)word_address1");
    sc_trace(mVcdFile, word_ce1, "(port)word_ce1");
    sc_trace(mVcdFile, word_q1, "(port)word_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, Sbox_address0, "Sbox_address0");
    sc_trace(mVcdFile, Sbox_ce0, "Sbox_ce0");
    sc_trace(mVcdFile, Sbox_q0, "Sbox_q0");
    sc_trace(mVcdFile, Sbox_address1, "Sbox_address1");
    sc_trace(mVcdFile, Sbox_ce1, "Sbox_ce1");
    sc_trace(mVcdFile, Sbox_q1, "Sbox_q1");
    sc_trace(mVcdFile, Rcon0_address0, "Rcon0_address0");
    sc_trace(mVcdFile, Rcon0_ce0, "Rcon0_ce0");
    sc_trace(mVcdFile, Rcon0_q0, "Rcon0_q0");
    sc_trace(mVcdFile, j_4_fu_361_p2, "j_4_fu_361_p2");
    sc_trace(mVcdFile, j_4_reg_986, "j_4_reg_986");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_371_p3, "tmp_fu_371_p3");
    sc_trace(mVcdFile, tmp_reg_991, "tmp_reg_991");
    sc_trace(mVcdFile, exitcond3_fu_355_p2, "exitcond3_fu_355_p2");
    sc_trace(mVcdFile, word_addr_reg_996, "word_addr_reg_996");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_1_fu_452_p2, "i_1_fu_452_p2");
    sc_trace(mVcdFile, i_1_reg_1004, "i_1_reg_1004");
    sc_trace(mVcdFile, exitcond2_fu_446_p2, "exitcond2_fu_446_p2");
    sc_trace(mVcdFile, j_1_cast2_cast_fu_468_p1, "j_1_cast2_cast_fu_468_p1");
    sc_trace(mVcdFile, j_1_cast2_cast_reg_1014, "j_1_cast2_cast_reg_1014");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_s_fu_482_p2, "tmp_s_fu_482_p2");
    sc_trace(mVcdFile, tmp_s_reg_1022, "tmp_s_reg_1022");
    sc_trace(mVcdFile, exitcond1_fu_472_p2, "exitcond1_fu_472_p2");
    sc_trace(mVcdFile, word_addr_5_reg_1032, "word_addr_5_reg_1032");
    sc_trace(mVcdFile, word_addr_6_reg_1037, "word_addr_6_reg_1037");
    sc_trace(mVcdFile, word_addr_7_reg_1043, "word_addr_7_reg_1043");
    sc_trace(mVcdFile, temp_0_1_reg_1048, "temp_0_1_reg_1048");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, temp_1_1_reg_1053, "temp_1_1_reg_1053");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, Sbox_load_reg_1078, "Sbox_load_reg_1078");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, temp_1_reg_1088, "temp_1_reg_1088");
    sc_trace(mVcdFile, tmp_52_cast_cast_fu_891_p1, "tmp_52_cast_cast_fu_891_p1");
    sc_trace(mVcdFile, tmp_52_cast_cast_reg_1103, "tmp_52_cast_cast_reg_1103");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, word_addr_9_reg_1113, "word_addr_9_reg_1113");
    sc_trace(mVcdFile, i_3_fu_947_p2, "i_3_fu_947_p2");
    sc_trace(mVcdFile, i_3_reg_1121, "i_3_reg_1121");
    sc_trace(mVcdFile, tmp_13_fu_957_p6, "tmp_13_fu_957_p6");
    sc_trace(mVcdFile, tmp_13_reg_1126, "tmp_13_reg_1126");
    sc_trace(mVcdFile, exitcond_fu_941_p2, "exitcond_fu_941_p2");
    sc_trace(mVcdFile, j_5_fu_971_p2, "j_5_fu_971_p2");
    sc_trace(mVcdFile, j_reg_209, "j_reg_209");
    sc_trace(mVcdFile, i_reg_221, "i_reg_221");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_1_reg_232, "j_1_reg_232");
    sc_trace(mVcdFile, temp_2_cast_fu_875_p1, "temp_2_cast_fu_875_p1");
    sc_trace(mVcdFile, temp_22_reg_244, "temp_22_reg_244");
    sc_trace(mVcdFile, temp_1_cast_fu_871_p1, "temp_1_cast_fu_871_p1");
    sc_trace(mVcdFile, temp_12_reg_254, "temp_12_reg_254");
    sc_trace(mVcdFile, temp_0_1_cast_fu_866_p1, "temp_0_1_cast_fu_866_p1");
    sc_trace(mVcdFile, temp_02_reg_264, "temp_02_reg_264");
    sc_trace(mVcdFile, Sbox_load_3_cast_fu_880_p1, "Sbox_load_3_cast_fu_880_p1");
    sc_trace(mVcdFile, temp_3_reg_274, "temp_3_reg_274");
    sc_trace(mVcdFile, i_2_reg_284, "i_2_reg_284");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_53_fu_437_p1, "tmp_53_fu_437_p1");
    sc_trace(mVcdFile, sum_cast_fu_463_p1, "sum_cast_fu_463_p1");
    sc_trace(mVcdFile, tmp_58_cast_fu_513_p1, "tmp_58_cast_fu_513_p1");
    sc_trace(mVcdFile, tmp_59_cast_fu_524_p1, "tmp_59_cast_fu_524_p1");
    sc_trace(mVcdFile, tmp_60_cast_fu_535_p1, "tmp_60_cast_fu_535_p1");
    sc_trace(mVcdFile, tmp_50_cast_fu_494_p1, "tmp_50_cast_fu_494_p1");
    sc_trace(mVcdFile, tmp_68_cast_fu_610_p1, "tmp_68_cast_fu_610_p1");
    sc_trace(mVcdFile, tmp_76_cast_fu_685_p1, "tmp_76_cast_fu_685_p1");
    sc_trace(mVcdFile, tmp_34_fu_706_p1, "tmp_34_fu_706_p1");
    sc_trace(mVcdFile, tmp_84_cast_fu_781_p1, "tmp_84_cast_fu_781_p1");
    sc_trace(mVcdFile, tmp_92_cast_fu_856_p1, "tmp_92_cast_fu_856_p1");
    sc_trace(mVcdFile, tmp_96_cast_fu_926_p1, "tmp_96_cast_fu_926_p1");
    sc_trace(mVcdFile, tmp_97_cast_fu_936_p1, "tmp_97_cast_fu_936_p1");
    sc_trace(mVcdFile, tmp_36_fu_977_p2, "tmp_36_fu_977_p2");
    sc_trace(mVcdFile, grp_fu_303_p2, "grp_fu_303_p2");
    sc_trace(mVcdFile, grp_fu_309_p4, "grp_fu_309_p4");
    sc_trace(mVcdFile, grp_fu_333_p2, "grp_fu_333_p2");
    sc_trace(mVcdFile, grp_fu_339_p4, "grp_fu_339_p4");
    sc_trace(mVcdFile, tmp_46_fu_367_p1, "tmp_46_fu_367_p1");
    sc_trace(mVcdFile, tmp_45_fu_379_p3, "tmp_45_fu_379_p3");
    sc_trace(mVcdFile, tmp_47_fu_391_p3, "tmp_47_fu_391_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_387_p1, "p_shl_cast_fu_387_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_399_p1, "p_shl5_cast_fu_399_p1");
    sc_trace(mVcdFile, tmp_48_fu_403_p2, "tmp_48_fu_403_p2");
    sc_trace(mVcdFile, tmp_49_fu_409_p1, "tmp_49_fu_409_p1");
    sc_trace(mVcdFile, tmp_51_fu_419_p4, "tmp_51_fu_419_p4");
    sc_trace(mVcdFile, tmp_50_fu_413_p2, "tmp_50_fu_413_p2");
    sc_trace(mVcdFile, tmp_52_fu_429_p3, "tmp_52_fu_429_p3");
    sc_trace(mVcdFile, i_cast_fu_442_p1, "i_cast_fu_442_p1");
    sc_trace(mVcdFile, sum_fu_458_p2, "sum_fu_458_p2");
    sc_trace(mVcdFile, tmp_54_fu_478_p1, "tmp_54_fu_478_p1");
    sc_trace(mVcdFile, tmp_33_fu_488_p2, "tmp_33_fu_488_p2");
    sc_trace(mVcdFile, tmp_50_cast_cast_fu_503_p1, "tmp_50_cast_cast_fu_503_p1");
    sc_trace(mVcdFile, tmp_55_fu_507_p2, "tmp_55_fu_507_p2");
    sc_trace(mVcdFile, tmp_50_cast_cast1_fu_499_p1, "tmp_50_cast_cast1_fu_499_p1");
    sc_trace(mVcdFile, tmp_56_fu_518_p2, "tmp_56_fu_518_p2");
    sc_trace(mVcdFile, tmp_57_fu_529_p2, "tmp_57_fu_529_p2");
    sc_trace(mVcdFile, tmp_60_fu_544_p1, "tmp_60_fu_544_p1");
    sc_trace(mVcdFile, tmp_61_fu_548_p3, "tmp_61_fu_548_p3");
    sc_trace(mVcdFile, tmp_59_fu_540_p1, "tmp_59_fu_540_p1");
    sc_trace(mVcdFile, grp_fu_295_p3, "grp_fu_295_p3");
    sc_trace(mVcdFile, tmp_62_fu_556_p2, "tmp_62_fu_556_p2");
    sc_trace(mVcdFile, tmp_63_fu_562_p3, "tmp_63_fu_562_p3");
    sc_trace(mVcdFile, grp_fu_319_p2, "grp_fu_319_p2");
    sc_trace(mVcdFile, tmp_65_fu_578_p4, "tmp_65_fu_578_p4");
    sc_trace(mVcdFile, tmp_66_fu_588_p3, "tmp_66_fu_588_p3");
    sc_trace(mVcdFile, tmp_67_cast_fu_596_p3, "tmp_67_cast_fu_596_p3");
    sc_trace(mVcdFile, tmp_64_fu_570_p3, "tmp_64_fu_570_p3");
    sc_trace(mVcdFile, tmp_67_fu_604_p2, "tmp_67_fu_604_p2");
    sc_trace(mVcdFile, tmp_70_fu_619_p1, "tmp_70_fu_619_p1");
    sc_trace(mVcdFile, tmp_71_fu_623_p3, "tmp_71_fu_623_p3");
    sc_trace(mVcdFile, tmp_69_fu_615_p1, "tmp_69_fu_615_p1");
    sc_trace(mVcdFile, grp_fu_325_p3, "grp_fu_325_p3");
    sc_trace(mVcdFile, tmp_72_fu_631_p2, "tmp_72_fu_631_p2");
    sc_trace(mVcdFile, tmp_73_fu_637_p3, "tmp_73_fu_637_p3");
    sc_trace(mVcdFile, grp_fu_349_p2, "grp_fu_349_p2");
    sc_trace(mVcdFile, tmp_75_fu_653_p4, "tmp_75_fu_653_p4");
    sc_trace(mVcdFile, tmp_77_fu_663_p3, "tmp_77_fu_663_p3");
    sc_trace(mVcdFile, tmp_75_cast_fu_671_p3, "tmp_75_cast_fu_671_p3");
    sc_trace(mVcdFile, tmp_74_fu_645_p3, "tmp_74_fu_645_p3");
    sc_trace(mVcdFile, tmp_76_fu_679_p2, "tmp_76_fu_679_p2");
    sc_trace(mVcdFile, p_lshr_f_cast_fu_690_p4, "p_lshr_f_cast_fu_690_p4");
    sc_trace(mVcdFile, addconv_fu_700_p2, "addconv_fu_700_p2");
    sc_trace(mVcdFile, tmp_80_fu_715_p1, "tmp_80_fu_715_p1");
    sc_trace(mVcdFile, tmp_81_fu_719_p3, "tmp_81_fu_719_p3");
    sc_trace(mVcdFile, tmp_79_fu_711_p1, "tmp_79_fu_711_p1");
    sc_trace(mVcdFile, tmp_82_fu_727_p2, "tmp_82_fu_727_p2");
    sc_trace(mVcdFile, tmp_83_fu_733_p3, "tmp_83_fu_733_p3");
    sc_trace(mVcdFile, tmp_86_fu_749_p4, "tmp_86_fu_749_p4");
    sc_trace(mVcdFile, tmp_87_fu_759_p3, "tmp_87_fu_759_p3");
    sc_trace(mVcdFile, tmp_83_cast_fu_767_p3, "tmp_83_cast_fu_767_p3");
    sc_trace(mVcdFile, tmp_85_fu_741_p3, "tmp_85_fu_741_p3");
    sc_trace(mVcdFile, tmp_84_fu_775_p2, "tmp_84_fu_775_p2");
    sc_trace(mVcdFile, tmp_90_fu_790_p1, "tmp_90_fu_790_p1");
    sc_trace(mVcdFile, tmp_91_fu_794_p3, "tmp_91_fu_794_p3");
    sc_trace(mVcdFile, tmp_89_fu_786_p1, "tmp_89_fu_786_p1");
    sc_trace(mVcdFile, tmp_98_fu_802_p2, "tmp_98_fu_802_p2");
    sc_trace(mVcdFile, tmp_99_fu_808_p3, "tmp_99_fu_808_p3");
    sc_trace(mVcdFile, tmp_101_fu_824_p4, "tmp_101_fu_824_p4");
    sc_trace(mVcdFile, tmp_102_fu_834_p3, "tmp_102_fu_834_p3");
    sc_trace(mVcdFile, tmp_91_cast_fu_842_p3, "tmp_91_cast_fu_842_p3");
    sc_trace(mVcdFile, tmp_100_fu_816_p3, "tmp_100_fu_816_p3");
    sc_trace(mVcdFile, tmp_92_fu_850_p2, "tmp_92_fu_850_p2");
    sc_trace(mVcdFile, temp_0_fu_861_p2, "temp_0_fu_861_p2");
    sc_trace(mVcdFile, tmp_35_fu_885_p2, "tmp_35_fu_885_p2");
    sc_trace(mVcdFile, tmp_94_fu_903_p3, "tmp_94_fu_903_p3");
    sc_trace(mVcdFile, tmp_93_fu_895_p3, "tmp_93_fu_895_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_911_p1, "p_shl2_cast_fu_911_p1");
    sc_trace(mVcdFile, tmp_95_fu_915_p2, "tmp_95_fu_915_p2");
    sc_trace(mVcdFile, tmp_96_fu_921_p2, "tmp_96_fu_921_p2");
    sc_trace(mVcdFile, tmp_97_fu_931_p2, "tmp_97_fu_931_p2");
    sc_trace(mVcdFile, tmp_13_fu_957_p5, "tmp_13_fu_957_p5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

KeySchedule::~KeySchedule() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete Sbox_U;
    delete Rcon0_U;
    delete aes_main_mux_42_3bkb_U0;
}

void KeySchedule::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_2_reg_284 = i_3_reg_1121.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_2_reg_284 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_355_p2.read(), ap_const_lv1_0))) {
        i_reg_221 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_221 = i_1_reg_1004.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_355_p2.read(), ap_const_lv1_1))) {
        j_1_reg_232 = ap_const_lv6_4;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_941_p2.read(), ap_const_lv1_1))) {
        j_1_reg_232 = j_5_fu_971_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_446_p2.read(), ap_const_lv1_1))) {
        j_reg_209 = j_4_reg_986.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_209 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp_02_reg_264 = temp_0_1_reg_1048.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(tmp_s_reg_1022.read(), ap_const_lv1_1))) {
        temp_02_reg_264 = temp_0_1_cast_fu_866_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp_12_reg_254 = temp_1_1_reg_1053.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(tmp_s_reg_1022.read(), ap_const_lv1_1))) {
        temp_12_reg_254 = temp_1_cast_fu_871_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp_22_reg_244 = word_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(tmp_s_reg_1022.read(), ap_const_lv1_1))) {
        temp_22_reg_244 = temp_2_cast_fu_875_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp_3_reg_274 = word_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(tmp_s_reg_1022.read(), ap_const_lv1_1))) {
        temp_3_reg_274 = Sbox_load_3_cast_fu_880_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        Sbox_load_reg_1078 = Sbox_q0.read();
        temp_1_reg_1088 = Sbox_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_1_reg_1004 = i_1_fu_452_p2.read();
        word_addr_reg_996 =  (sc_lv<9>) (tmp_53_fu_437_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_3_reg_1121 = i_3_fu_947_p2.read();
        word_addr_9_reg_1113 =  (sc_lv<9>) (tmp_97_cast_fu_936_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_1_cast2_cast_reg_1014 = j_1_cast2_cast_fu_468_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        j_4_reg_986 = j_4_fu_361_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        temp_0_1_reg_1048 = word_q0.read();
        temp_1_1_reg_1053 = word_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_941_p2.read()))) {
        tmp_13_reg_1126 = tmp_13_fu_957_p6.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_52_cast_cast_reg_1103 = tmp_52_cast_cast_fu_891_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_355_p2.read(), ap_const_lv1_0))) {
        tmp_reg_991 = tmp_fu_371_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_472_p2.read()))) {
        tmp_s_reg_1022 = tmp_s_fu_482_p2.read();
        word_addr_5_reg_1032 =  (sc_lv<9>) (tmp_59_cast_fu_524_p1.read());
        word_addr_6_reg_1037 =  (sc_lv<9>) (tmp_60_cast_fu_535_p1.read());
        word_addr_7_reg_1043 =  (sc_lv<9>) (tmp_50_cast_fu_494_p1.read());
    }
}

void KeySchedule::thread_Rcon0_address0() {
    Rcon0_address0 =  (sc_lv<5>) (tmp_34_fu_706_p1.read());
}

void KeySchedule::thread_Rcon0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        Rcon0_ce0 = ap_const_logic_1;
    } else {
        Rcon0_ce0 = ap_const_logic_0;
    }
}

void KeySchedule::thread_Sbox_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        Sbox_address0 =  (sc_lv<8>) (tmp_84_cast_fu_781_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        Sbox_address0 =  (sc_lv<8>) (tmp_68_cast_fu_610_p1.read());
    } else {
        Sbox_address0 = "XXXXXXXX";
    }
}

void KeySchedule::thread_Sbox_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        Sbox_address1 =  (sc_lv<8>) (tmp_92_cast_fu_856_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        Sbox_address1 =  (sc_lv<8>) (tmp_76_cast_fu_685_p1.read());
    } else {
        Sbox_address1 = "XXXXXXXX";
    }
}

void KeySchedule::thread_Sbox_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        Sbox_ce0 = ap_const_logic_1;
    } else {
        Sbox_ce0 = ap_const_logic_0;
    }
}

void KeySchedule::thread_Sbox_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        Sbox_ce1 = ap_const_logic_1;
    } else {
        Sbox_ce1 = ap_const_logic_0;
    }
}

void KeySchedule::thread_Sbox_load_3_cast_fu_880_p1() {
    Sbox_load_3_cast_fu_880_p1 = esl_zext<32,8>(Sbox_q1.read());
}

void KeySchedule::thread_addconv_fu_700_p2() {
    addconv_fu_700_p2 = (!ap_const_lv4_F.is_01() || !p_lshr_f_cast_fu_690_p4.read().is_01())? sc_lv<4>(): (sc_bigint<4>(ap_const_lv4_F) + sc_biguint<4>(p_lshr_f_cast_fu_690_p4.read()));
}

void KeySchedule::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void KeySchedule::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void KeySchedule::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void KeySchedule::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void KeySchedule::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void KeySchedule::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void KeySchedule::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void KeySchedule::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void KeySchedule::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void KeySchedule::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void KeySchedule::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void KeySchedule::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void KeySchedule::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_472_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void KeySchedule::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void KeySchedule::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_472_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void KeySchedule::thread_exitcond1_fu_472_p2() {
    exitcond1_fu_472_p2 = (!j_1_reg_232.read().is_01() || !ap_const_lv6_2C.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_232.read() == ap_const_lv6_2C);
}

void KeySchedule::thread_exitcond2_fu_446_p2() {
    exitcond2_fu_446_p2 = (!i_reg_221.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_221.read() == ap_const_lv3_4);
}

void KeySchedule::thread_exitcond3_fu_355_p2() {
    exitcond3_fu_355_p2 = (!j_reg_209.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_209.read() == ap_const_lv3_4);
}

void KeySchedule::thread_exitcond_fu_941_p2() {
    exitcond_fu_941_p2 = (!i_2_reg_284.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_284.read() == ap_const_lv3_4);
}

void KeySchedule::thread_grp_fu_295_p3() {
    grp_fu_295_p3 = word_q0.read().range(31, 31);
}

void KeySchedule::thread_grp_fu_303_p2() {
    grp_fu_303_p2 = (!ap_const_lv32_0.is_01() || !word_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(word_q0.read()));
}

void KeySchedule::thread_grp_fu_309_p4() {
    grp_fu_309_p4 = grp_fu_303_p2.read().range(9, 4);
}

void KeySchedule::thread_grp_fu_319_p2() {
    grp_fu_319_p2 = (!ap_const_lv6_0.is_01() || !grp_fu_309_p4.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_0) - sc_biguint<6>(grp_fu_309_p4.read()));
}

void KeySchedule::thread_grp_fu_325_p3() {
    grp_fu_325_p3 = word_q1.read().range(31, 31);
}

void KeySchedule::thread_grp_fu_333_p2() {
    grp_fu_333_p2 = (!ap_const_lv32_0.is_01() || !word_q1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(word_q1.read()));
}

void KeySchedule::thread_grp_fu_339_p4() {
    grp_fu_339_p4 = grp_fu_333_p2.read().range(9, 4);
}

void KeySchedule::thread_grp_fu_349_p2() {
    grp_fu_349_p2 = (!ap_const_lv6_0.is_01() || !grp_fu_339_p4.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_0) - sc_biguint<6>(grp_fu_339_p4.read()));
}

void KeySchedule::thread_i_1_fu_452_p2() {
    i_1_fu_452_p2 = (!ap_const_lv3_1.is_01() || !i_reg_221.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(i_reg_221.read()));
}

void KeySchedule::thread_i_3_fu_947_p2() {
    i_3_fu_947_p2 = (!i_2_reg_284.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_2_reg_284.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void KeySchedule::thread_i_cast_fu_442_p1() {
    i_cast_fu_442_p1 = esl_zext<4,3>(i_reg_221.read());
}

void KeySchedule::thread_j_1_cast2_cast_fu_468_p1() {
    j_1_cast2_cast_fu_468_p1 = esl_zext<10,6>(j_1_reg_232.read());
}

void KeySchedule::thread_j_4_fu_361_p2() {
    j_4_fu_361_p2 = (!j_reg_209.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_reg_209.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void KeySchedule::thread_j_5_fu_971_p2() {
    j_5_fu_971_p2 = (!j_1_reg_232.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_1_reg_232.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void KeySchedule::thread_key_address0() {
    key_address0 =  (sc_lv<5>) (sum_cast_fu_463_p1.read());
}

void KeySchedule::thread_key_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        key_ce0 = ap_const_logic_1;
    } else {
        key_ce0 = ap_const_logic_0;
    }
}

void KeySchedule::thread_p_lshr_f_cast_fu_690_p4() {
    p_lshr_f_cast_fu_690_p4 = j_1_reg_232.read().range(5, 2);
}

void KeySchedule::thread_p_shl2_cast_fu_911_p1() {
    p_shl2_cast_fu_911_p1 = esl_zext<10,6>(tmp_94_fu_903_p3.read());
}

void KeySchedule::thread_p_shl5_cast_fu_399_p1() {
    p_shl5_cast_fu_399_p1 = esl_zext<11,6>(tmp_47_fu_391_p3.read());
}

void KeySchedule::thread_p_shl_cast_fu_387_p1() {
    p_shl_cast_fu_387_p1 = esl_zext<11,10>(tmp_45_fu_379_p3.read());
}

void KeySchedule::thread_sum_cast_fu_463_p1() {
    sum_cast_fu_463_p1 = esl_zext<32,4>(sum_fu_458_p2.read());
}

void KeySchedule::thread_sum_fu_458_p2() {
    sum_fu_458_p2 = (!i_cast_fu_442_p1.read().is_01() || !tmp_reg_991.read().is_01())? sc_lv<4>(): (sc_biguint<4>(i_cast_fu_442_p1.read()) + sc_biguint<4>(tmp_reg_991.read()));
}

void KeySchedule::thread_temp_0_1_cast_fu_866_p1() {
    temp_0_1_cast_fu_866_p1 = esl_zext<32,8>(temp_0_fu_861_p2.read());
}

void KeySchedule::thread_temp_0_fu_861_p2() {
    temp_0_fu_861_p2 = (Rcon0_q0.read() ^ Sbox_load_reg_1078.read());
}

void KeySchedule::thread_temp_1_cast_fu_871_p1() {
    temp_1_cast_fu_871_p1 = esl_zext<32,8>(temp_1_reg_1088.read());
}

void KeySchedule::thread_temp_2_cast_fu_875_p1() {
    temp_2_cast_fu_875_p1 = esl_zext<32,8>(Sbox_q0.read());
}

void KeySchedule::thread_tmp_100_fu_816_p3() {
    tmp_100_fu_816_p3 = (!grp_fu_295_p3.read()[0].is_01())? sc_lv<10>(): ((grp_fu_295_p3.read()[0].to_bool())? tmp_98_fu_802_p2.read(): tmp_99_fu_808_p3.read());
}

void KeySchedule::thread_tmp_101_fu_824_p4() {
    tmp_101_fu_824_p4 = word_q0.read().range(9, 4);
}

void KeySchedule::thread_tmp_102_fu_834_p3() {
    tmp_102_fu_834_p3 = (!grp_fu_295_p3.read()[0].is_01())? sc_lv<6>(): ((grp_fu_295_p3.read()[0].to_bool())? grp_fu_319_p2.read(): tmp_101_fu_824_p4.read());
}

void KeySchedule::thread_tmp_13_fu_957_p5() {
    tmp_13_fu_957_p5 = i_2_reg_284.read().range(2-1, 0);
}

void KeySchedule::thread_tmp_33_fu_488_p2() {
    tmp_33_fu_488_p2 = (!ap_const_lv6_3F.is_01() || !j_1_reg_232.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_3F) + sc_biguint<6>(j_1_reg_232.read()));
}

void KeySchedule::thread_tmp_34_fu_706_p1() {
    tmp_34_fu_706_p1 = esl_zext<32,4>(addconv_fu_700_p2.read());
}

void KeySchedule::thread_tmp_35_fu_885_p2() {
    tmp_35_fu_885_p2 = (!j_1_reg_232.read().is_01() || !ap_const_lv6_3C.is_01())? sc_lv<6>(): (sc_biguint<6>(j_1_reg_232.read()) + sc_bigint<6>(ap_const_lv6_3C));
}

void KeySchedule::thread_tmp_36_fu_977_p2() {
    tmp_36_fu_977_p2 = (word_q1.read() ^ tmp_13_reg_1126.read());
}

void KeySchedule::thread_tmp_45_fu_379_p3() {
    tmp_45_fu_379_p3 = esl_concat<3,7>(i_reg_221.read(), ap_const_lv7_0);
}

void KeySchedule::thread_tmp_46_fu_367_p1() {
    tmp_46_fu_367_p1 = j_reg_209.read().range(2-1, 0);
}

void KeySchedule::thread_tmp_47_fu_391_p3() {
    tmp_47_fu_391_p3 = esl_concat<3,3>(i_reg_221.read(), ap_const_lv3_0);
}

void KeySchedule::thread_tmp_48_fu_403_p2() {
    tmp_48_fu_403_p2 = (!p_shl_cast_fu_387_p1.read().is_01() || !p_shl5_cast_fu_399_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl_cast_fu_387_p1.read()) - sc_biguint<11>(p_shl5_cast_fu_399_p1.read()));
}

void KeySchedule::thread_tmp_49_fu_409_p1() {
    tmp_49_fu_409_p1 = tmp_48_fu_403_p2.read().range(3-1, 0);
}

void KeySchedule::thread_tmp_50_cast_cast1_fu_499_p1() {
    tmp_50_cast_cast1_fu_499_p1 = esl_zext<9,6>(tmp_33_fu_488_p2.read());
}

void KeySchedule::thread_tmp_50_cast_cast_fu_503_p1() {
    tmp_50_cast_cast_fu_503_p1 = esl_zext<8,6>(tmp_33_fu_488_p2.read());
}

void KeySchedule::thread_tmp_50_cast_fu_494_p1() {
    tmp_50_cast_fu_494_p1 = esl_zext<32,6>(tmp_33_fu_488_p2.read());
}

void KeySchedule::thread_tmp_50_fu_413_p2() {
    tmp_50_fu_413_p2 = (tmp_49_fu_409_p1.read() | j_reg_209.read());
}

void KeySchedule::thread_tmp_51_fu_419_p4() {
    tmp_51_fu_419_p4 = tmp_48_fu_403_p2.read().range(10, 3);
}

void KeySchedule::thread_tmp_52_cast_cast_fu_891_p1() {
    tmp_52_cast_cast_fu_891_p1 = esl_zext<10,6>(tmp_35_fu_885_p2.read());
}

void KeySchedule::thread_tmp_52_fu_429_p3() {
    tmp_52_fu_429_p3 = esl_concat<8,3>(tmp_51_fu_419_p4.read(), tmp_50_fu_413_p2.read());
}

void KeySchedule::thread_tmp_53_fu_437_p1() {
    tmp_53_fu_437_p1 = esl_sext<32,11>(tmp_52_fu_429_p3.read());
}

void KeySchedule::thread_tmp_54_fu_478_p1() {
    tmp_54_fu_478_p1 = j_1_reg_232.read().range(2-1, 0);
}

void KeySchedule::thread_tmp_55_fu_507_p2() {
    tmp_55_fu_507_p2 = (!ap_const_lv8_78.is_01() || !tmp_50_cast_cast_fu_503_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_78) + sc_biguint<8>(tmp_50_cast_cast_fu_503_p1.read()));
}

void KeySchedule::thread_tmp_56_fu_518_p2() {
    tmp_56_fu_518_p2 = (!ap_const_lv9_F0.is_01() || !tmp_50_cast_cast1_fu_499_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_F0) + sc_biguint<9>(tmp_50_cast_cast1_fu_499_p1.read()));
}

void KeySchedule::thread_tmp_57_fu_529_p2() {
    tmp_57_fu_529_p2 = (!ap_const_lv9_168.is_01() || !tmp_50_cast_cast1_fu_499_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_168) + sc_biguint<9>(tmp_50_cast_cast1_fu_499_p1.read()));
}

void KeySchedule::thread_tmp_58_cast_fu_513_p1() {
    tmp_58_cast_fu_513_p1 = esl_zext<32,8>(tmp_55_fu_507_p2.read());
}

void KeySchedule::thread_tmp_59_cast_fu_524_p1() {
    tmp_59_cast_fu_524_p1 = esl_zext<32,9>(tmp_56_fu_518_p2.read());
}

void KeySchedule::thread_tmp_59_fu_540_p1() {
    tmp_59_fu_540_p1 = word_q0.read().range(4-1, 0);
}

void KeySchedule::thread_tmp_60_cast_fu_535_p1() {
    tmp_60_cast_fu_535_p1 = esl_zext<32,9>(tmp_57_fu_529_p2.read());
}

void KeySchedule::thread_tmp_60_fu_544_p1() {
    tmp_60_fu_544_p1 = grp_fu_303_p2.read().range(4-1, 0);
}

void KeySchedule::thread_tmp_61_fu_548_p3() {
    tmp_61_fu_548_p3 = esl_concat<6,4>(ap_const_lv6_0, tmp_60_fu_544_p1.read());
}

void KeySchedule::thread_tmp_62_fu_556_p2() {
    tmp_62_fu_556_p2 = (!ap_const_lv10_0.is_01() || !tmp_61_fu_548_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_0) - sc_biguint<10>(tmp_61_fu_548_p3.read()));
}

void KeySchedule::thread_tmp_63_fu_562_p3() {
    tmp_63_fu_562_p3 = esl_concat<6,4>(ap_const_lv6_0, tmp_59_fu_540_p1.read());
}

void KeySchedule::thread_tmp_64_fu_570_p3() {
    tmp_64_fu_570_p3 = (!grp_fu_295_p3.read()[0].is_01())? sc_lv<10>(): ((grp_fu_295_p3.read()[0].to_bool())? tmp_62_fu_556_p2.read(): tmp_63_fu_562_p3.read());
}

void KeySchedule::thread_tmp_65_fu_578_p4() {
    tmp_65_fu_578_p4 = word_q0.read().range(9, 4);
}

void KeySchedule::thread_tmp_66_fu_588_p3() {
    tmp_66_fu_588_p3 = (!grp_fu_295_p3.read()[0].is_01())? sc_lv<6>(): ((grp_fu_295_p3.read()[0].to_bool())? grp_fu_319_p2.read(): tmp_65_fu_578_p4.read());
}

void KeySchedule::thread_tmp_67_cast_fu_596_p3() {
    tmp_67_cast_fu_596_p3 = esl_concat<6,4>(tmp_66_fu_588_p3.read(), ap_const_lv4_0);
}

void KeySchedule::thread_tmp_67_fu_604_p2() {
    tmp_67_fu_604_p2 = (!tmp_67_cast_fu_596_p3.read().is_01() || !tmp_64_fu_570_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_67_cast_fu_596_p3.read()) + sc_biguint<10>(tmp_64_fu_570_p3.read()));
}

void KeySchedule::thread_tmp_68_cast_fu_610_p1() {
    tmp_68_cast_fu_610_p1 = esl_zext<32,10>(tmp_67_fu_604_p2.read());
}

void KeySchedule::thread_tmp_69_fu_615_p1() {
    tmp_69_fu_615_p1 = word_q1.read().range(4-1, 0);
}

void KeySchedule::thread_tmp_70_fu_619_p1() {
    tmp_70_fu_619_p1 = grp_fu_333_p2.read().range(4-1, 0);
}

void KeySchedule::thread_tmp_71_fu_623_p3() {
    tmp_71_fu_623_p3 = esl_concat<6,4>(ap_const_lv6_0, tmp_70_fu_619_p1.read());
}

void KeySchedule::thread_tmp_72_fu_631_p2() {
    tmp_72_fu_631_p2 = (!ap_const_lv10_0.is_01() || !tmp_71_fu_623_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_0) - sc_biguint<10>(tmp_71_fu_623_p3.read()));
}

void KeySchedule::thread_tmp_73_fu_637_p3() {
    tmp_73_fu_637_p3 = esl_concat<6,4>(ap_const_lv6_0, tmp_69_fu_615_p1.read());
}

void KeySchedule::thread_tmp_74_fu_645_p3() {
    tmp_74_fu_645_p3 = (!grp_fu_325_p3.read()[0].is_01())? sc_lv<10>(): ((grp_fu_325_p3.read()[0].to_bool())? tmp_72_fu_631_p2.read(): tmp_73_fu_637_p3.read());
}

void KeySchedule::thread_tmp_75_cast_fu_671_p3() {
    tmp_75_cast_fu_671_p3 = esl_concat<6,4>(tmp_77_fu_663_p3.read(), ap_const_lv4_0);
}

void KeySchedule::thread_tmp_75_fu_653_p4() {
    tmp_75_fu_653_p4 = word_q1.read().range(9, 4);
}

void KeySchedule::thread_tmp_76_cast_fu_685_p1() {
    tmp_76_cast_fu_685_p1 = esl_zext<32,10>(tmp_76_fu_679_p2.read());
}

void KeySchedule::thread_tmp_76_fu_679_p2() {
    tmp_76_fu_679_p2 = (!tmp_75_cast_fu_671_p3.read().is_01() || !tmp_74_fu_645_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_75_cast_fu_671_p3.read()) + sc_biguint<10>(tmp_74_fu_645_p3.read()));
}

void KeySchedule::thread_tmp_77_fu_663_p3() {
    tmp_77_fu_663_p3 = (!grp_fu_325_p3.read()[0].is_01())? sc_lv<6>(): ((grp_fu_325_p3.read()[0].to_bool())? grp_fu_349_p2.read(): tmp_75_fu_653_p4.read());
}

void KeySchedule::thread_tmp_79_fu_711_p1() {
    tmp_79_fu_711_p1 = word_q1.read().range(4-1, 0);
}

void KeySchedule::thread_tmp_80_fu_715_p1() {
    tmp_80_fu_715_p1 = grp_fu_333_p2.read().range(4-1, 0);
}

void KeySchedule::thread_tmp_81_fu_719_p3() {
    tmp_81_fu_719_p3 = esl_concat<6,4>(ap_const_lv6_0, tmp_80_fu_715_p1.read());
}

void KeySchedule::thread_tmp_82_fu_727_p2() {
    tmp_82_fu_727_p2 = (!ap_const_lv10_0.is_01() || !tmp_81_fu_719_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_0) - sc_biguint<10>(tmp_81_fu_719_p3.read()));
}

void KeySchedule::thread_tmp_83_cast_fu_767_p3() {
    tmp_83_cast_fu_767_p3 = esl_concat<6,4>(tmp_87_fu_759_p3.read(), ap_const_lv4_0);
}

void KeySchedule::thread_tmp_83_fu_733_p3() {
    tmp_83_fu_733_p3 = esl_concat<6,4>(ap_const_lv6_0, tmp_79_fu_711_p1.read());
}

void KeySchedule::thread_tmp_84_cast_fu_781_p1() {
    tmp_84_cast_fu_781_p1 = esl_zext<32,10>(tmp_84_fu_775_p2.read());
}

void KeySchedule::thread_tmp_84_fu_775_p2() {
    tmp_84_fu_775_p2 = (!tmp_83_cast_fu_767_p3.read().is_01() || !tmp_85_fu_741_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_83_cast_fu_767_p3.read()) + sc_biguint<10>(tmp_85_fu_741_p3.read()));
}

void KeySchedule::thread_tmp_85_fu_741_p3() {
    tmp_85_fu_741_p3 = (!grp_fu_325_p3.read()[0].is_01())? sc_lv<10>(): ((grp_fu_325_p3.read()[0].to_bool())? tmp_82_fu_727_p2.read(): tmp_83_fu_733_p3.read());
}

void KeySchedule::thread_tmp_86_fu_749_p4() {
    tmp_86_fu_749_p4 = word_q1.read().range(9, 4);
}

void KeySchedule::thread_tmp_87_fu_759_p3() {
    tmp_87_fu_759_p3 = (!grp_fu_325_p3.read()[0].is_01())? sc_lv<6>(): ((grp_fu_325_p3.read()[0].to_bool())? grp_fu_349_p2.read(): tmp_86_fu_749_p4.read());
}

void KeySchedule::thread_tmp_89_fu_786_p1() {
    tmp_89_fu_786_p1 = word_q0.read().range(4-1, 0);
}

void KeySchedule::thread_tmp_90_fu_790_p1() {
    tmp_90_fu_790_p1 = grp_fu_303_p2.read().range(4-1, 0);
}

void KeySchedule::thread_tmp_91_cast_fu_842_p3() {
    tmp_91_cast_fu_842_p3 = esl_concat<6,4>(tmp_102_fu_834_p3.read(), ap_const_lv4_0);
}

void KeySchedule::thread_tmp_91_fu_794_p3() {
    tmp_91_fu_794_p3 = esl_concat<6,4>(ap_const_lv6_0, tmp_90_fu_790_p1.read());
}

void KeySchedule::thread_tmp_92_cast_fu_856_p1() {
    tmp_92_cast_fu_856_p1 = esl_zext<32,10>(tmp_92_fu_850_p2.read());
}

void KeySchedule::thread_tmp_92_fu_850_p2() {
    tmp_92_fu_850_p2 = (!tmp_91_cast_fu_842_p3.read().is_01() || !tmp_100_fu_816_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_91_cast_fu_842_p3.read()) + sc_biguint<10>(tmp_100_fu_816_p3.read()));
}

void KeySchedule::thread_tmp_93_fu_895_p3() {
    tmp_93_fu_895_p3 = esl_concat<3,7>(i_2_reg_284.read(), ap_const_lv7_0);
}

void KeySchedule::thread_tmp_94_fu_903_p3() {
    tmp_94_fu_903_p3 = esl_concat<3,3>(i_2_reg_284.read(), ap_const_lv3_0);
}

void KeySchedule::thread_tmp_95_fu_915_p2() {
    tmp_95_fu_915_p2 = (!tmp_93_fu_895_p3.read().is_01() || !p_shl2_cast_fu_911_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_93_fu_895_p3.read()) - sc_biguint<10>(p_shl2_cast_fu_911_p1.read()));
}

void KeySchedule::thread_tmp_96_cast_fu_926_p1() {
    tmp_96_cast_fu_926_p1 = esl_sext<32,10>(tmp_96_fu_921_p2.read());
}

void KeySchedule::thread_tmp_96_fu_921_p2() {
    tmp_96_fu_921_p2 = (!tmp_95_fu_915_p2.read().is_01() || !tmp_52_cast_cast_reg_1103.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_95_fu_915_p2.read()) + sc_biguint<10>(tmp_52_cast_cast_reg_1103.read()));
}

void KeySchedule::thread_tmp_97_cast_fu_936_p1() {
    tmp_97_cast_fu_936_p1 = esl_sext<32,10>(tmp_97_fu_931_p2.read());
}

void KeySchedule::thread_tmp_97_fu_931_p2() {
    tmp_97_fu_931_p2 = (!tmp_95_fu_915_p2.read().is_01() || !j_1_cast2_cast_reg_1014.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_95_fu_915_p2.read()) + sc_biguint<10>(j_1_cast2_cast_reg_1014.read()));
}

void KeySchedule::thread_tmp_98_fu_802_p2() {
    tmp_98_fu_802_p2 = (!ap_const_lv10_0.is_01() || !tmp_91_fu_794_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_0) - sc_biguint<10>(tmp_91_fu_794_p3.read()));
}

void KeySchedule::thread_tmp_99_fu_808_p3() {
    tmp_99_fu_808_p3 = esl_concat<6,4>(ap_const_lv6_0, tmp_89_fu_786_p1.read());
}

void KeySchedule::thread_tmp_fu_371_p3() {
    tmp_fu_371_p3 = esl_concat<2,2>(tmp_46_fu_367_p1.read(), ap_const_lv2_0);
}

void KeySchedule::thread_tmp_s_fu_482_p2() {
    tmp_s_fu_482_p2 = (!tmp_54_fu_478_p1.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_54_fu_478_p1.read() == ap_const_lv2_0);
}

void KeySchedule::thread_word_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        word_address0 = word_addr_9_reg_1113.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        word_address0 = word_addr_7_reg_1043.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        word_address0 = word_addr_6_reg_1037.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_472_p2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_482_p2.read(), ap_const_lv1_1))) {
        word_address0 =  (sc_lv<9>) (tmp_58_cast_fu_513_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_472_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_482_p2.read()))) {
        word_address0 =  (sc_lv<9>) (tmp_50_cast_fu_494_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        word_address0 = word_addr_reg_996.read();
    } else {
        word_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void KeySchedule::thread_word_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        word_address1 =  (sc_lv<9>) (tmp_96_cast_fu_926_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        word_address1 = word_addr_6_reg_1037.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        word_address1 = word_addr_5_reg_1032.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_472_p2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_482_p2.read(), ap_const_lv1_1))) {
        word_address1 =  (sc_lv<9>) (tmp_59_cast_fu_524_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_472_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_482_p2.read()))) {
        word_address1 =  (sc_lv<9>) (tmp_58_cast_fu_513_p1.read());
    } else {
        word_address1 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void KeySchedule::thread_word_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_472_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_482_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_472_p2.read()) && 
          esl_seteq<1,1,1>(tmp_s_fu_482_p2.read(), ap_const_lv1_1)))) {
        word_ce0 = ap_const_logic_1;
    } else {
        word_ce0 = ap_const_logic_0;
    }
}

void KeySchedule::thread_word_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_472_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_482_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_472_p2.read()) && 
          esl_seteq<1,1,1>(tmp_s_fu_482_p2.read(), ap_const_lv1_1)))) {
        word_ce1 = ap_const_logic_1;
    } else {
        word_ce1 = ap_const_logic_0;
    }
}

void KeySchedule::thread_word_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        word_d0 = tmp_36_fu_977_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        word_d0 = key_q0.read();
    } else {
        word_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void KeySchedule::thread_word_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        word_we0 = ap_const_logic_1;
    } else {
        word_we0 = ap_const_logic_0;
    }
}

void KeySchedule::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_355_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_446_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond1_fu_472_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_472_p2.read()) && esl_seteq<1,1,1>(tmp_s_fu_482_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond_fu_941_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

}

