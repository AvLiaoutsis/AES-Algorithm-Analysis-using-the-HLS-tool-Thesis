// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _MixColumn_AddRoundKe_HH_
#define _MixColumn_AddRoundKe_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "MixColumn_AddRoundEe.h"

namespace ap_rtl {

struct MixColumn_AddRoundKe : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > statemt_address0;
    sc_out< sc_logic > statemt_ce0;
    sc_out< sc_logic > statemt_we0;
    sc_out< sc_lv<32> > statemt_d0;
    sc_in< sc_lv<32> > statemt_q0;
    sc_out< sc_lv<5> > statemt_address1;
    sc_out< sc_logic > statemt_ce1;
    sc_out< sc_logic > statemt_we1;
    sc_out< sc_lv<32> > statemt_d1;
    sc_in< sc_lv<32> > statemt_q1;
    sc_in< sc_lv<4> > n;
    sc_out< sc_lv<9> > word_address0;
    sc_out< sc_logic > word_ce0;
    sc_in< sc_lv<32> > word_q0;
    sc_out< sc_lv<9> > word_address1;
    sc_out< sc_logic > word_ce1;
    sc_in< sc_lv<32> > word_q1;


    // Module declarations
    MixColumn_AddRoundKe(sc_module_name name);
    SC_HAS_PROCESS(MixColumn_AddRoundKe);

    ~MixColumn_AddRoundKe();

    sc_trace_file* mVcdFile;

    MixColumn_AddRoundEe* ret_U;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > tmp_fu_285_p3;
    sc_signal< sc_lv<6> > tmp_reg_865;
    sc_signal< sc_lv<3> > j_3_fu_303_p2;
    sc_signal< sc_lv<3> > j_3_reg_873;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > tmp_5_fu_313_p3;
    sc_signal< sc_lv<4> > tmp_5_reg_878;
    sc_signal< sc_lv<1> > exitcond1_fu_297_p2;
    sc_signal< sc_lv<32> > tmp_5_cast_fu_321_p1;
    sc_signal< sc_lv<32> > tmp_5_cast_reg_884;
    sc_signal< sc_lv<32> > tmp_9_cast_fu_332_p1;
    sc_signal< sc_lv<32> > tmp_9_cast_reg_894;
    sc_signal< sc_lv<6> > tmp_14_fu_337_p2;
    sc_signal< sc_lv<6> > tmp_14_reg_904;
    sc_signal< sc_lv<32> > x_6_reg_919;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_7_fu_370_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_927;
    sc_signal< sc_lv<32> > x_reg_932;
    sc_signal< sc_lv<32> > tmp_14_cast_fu_381_p1;
    sc_signal< sc_lv<32> > tmp_14_cast_reg_940;
    sc_signal< sc_lv<32> > tmp_15_cast_fu_391_p1;
    sc_signal< sc_lv<32> > tmp_15_cast_reg_950;
    sc_signal< sc_lv<32> > word_load_reg_970;
    sc_signal< sc_lv<1> > tmp_16_fu_429_p2;
    sc_signal< sc_lv<1> > tmp_16_reg_975;
    sc_signal< sc_lv<32> > word_load_1_reg_980;
    sc_signal< sc_lv<32> > tmp_27_fu_705_p2;
    sc_signal< sc_lv<32> > tmp_27_reg_985;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > tmp_32_fu_799_p2;
    sc_signal< sc_lv<32> > tmp_32_reg_990;
    sc_signal< sc_lv<3> > j_2_fu_811_p2;
    sc_signal< sc_lv<3> > j_2_reg_998;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > tmp_2_fu_821_p3;
    sc_signal< sc_lv<4> > tmp_2_reg_1003;
    sc_signal< sc_lv<1> > exitcond_fu_805_p2;
    sc_signal< sc_lv<32> > tmp_2_cast_fu_829_p1;
    sc_signal< sc_lv<32> > tmp_2_cast_reg_1009;
    sc_signal< sc_lv<32> > tmp_4_cast_fu_840_p1;
    sc_signal< sc_lv<32> > tmp_4_cast_reg_1019;
    sc_signal< sc_lv<32> > tmp_12_cast_fu_850_p1;
    sc_signal< sc_lv<32> > tmp_12_cast_reg_1029;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > tmp_13_cast_fu_860_p1;
    sc_signal< sc_lv<32> > tmp_13_cast_reg_1039;
    sc_signal< sc_lv<5> > ret_address0;
    sc_signal< sc_logic > ret_ce0;
    sc_signal< sc_logic > ret_we0;
    sc_signal< sc_lv<32> > ret_d0;
    sc_signal< sc_lv<32> > ret_q0;
    sc_signal< sc_lv<5> > ret_address1;
    sc_signal< sc_logic > ret_ce1;
    sc_signal< sc_logic > ret_we1;
    sc_signal< sc_lv<32> > ret_d1;
    sc_signal< sc_lv<32> > ret_q1;
    sc_signal< sc_lv<3> > j_reg_243;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > j_1_reg_254;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > tmp_16_cast_fu_342_p1;
    sc_signal< sc_lv<32> > tmp_38_cast_fu_357_p1;
    sc_signal< sc_lv<32> > tmp_39_cast_fu_405_p1;
    sc_signal< sc_lv<32> > tmp_40_cast_fu_416_p1;
    sc_signal< sc_lv<32> > tmp_15_fu_518_p2;
    sc_signal< sc_lv<32> > tmp_21_fu_604_p2;
    sc_signal< sc_lv<2> > tmp_6_fu_309_p1;
    sc_signal< sc_lv<4> > tmp_9_fu_326_p2;
    sc_signal< sc_lv<6> > j_cast1_fu_293_p1;
    sc_signal< sc_lv<8> > tmp_16_cast_cast_fu_347_p1;
    sc_signal< sc_lv<8> > tmp_34_fu_351_p2;
    sc_signal< sc_lv<24> > grp_fu_265_p4;
    sc_signal< sc_lv<32> > p_mask_fu_362_p3;
    sc_signal< sc_lv<4> > tmp_10_fu_376_p2;
    sc_signal< sc_lv<4> > tmp_11_fu_386_p2;
    sc_signal< sc_lv<9> > tmp_16_cast_cast1_fu_396_p1;
    sc_signal< sc_lv<9> > tmp_35_fu_399_p2;
    sc_signal< sc_lv<9> > tmp_36_fu_410_p2;
    sc_signal< sc_lv<24> > grp_fu_275_p4;
    sc_signal< sc_lv<32> > p_mask2_fu_421_p3;
    sc_signal< sc_lv<32> > tmp_18_fu_435_p2;
    sc_signal< sc_lv<32> > tmp_8_fu_440_p2;
    sc_signal< sc_lv<32> > tmp_24_fu_453_p2;
    sc_signal< sc_lv<32> > x_1_fu_458_p2;
    sc_signal< sc_lv<24> > tmp_33_fu_463_p4;
    sc_signal< sc_lv<32> > p_mask1_fu_473_p3;
    sc_signal< sc_lv<1> > tmp_1_fu_481_p2;
    sc_signal< sc_lv<32> > tmp_3_fu_487_p2;
    sc_signal< sc_lv<32> > ret_load_1_fu_446_p3;
    sc_signal< sc_lv<32> > storemerge_v_fu_493_p3;
    sc_signal< sc_lv<32> > tmp3_fu_507_p2;
    sc_signal< sc_lv<32> > tmp2_fu_513_p2;
    sc_signal< sc_lv<32> > tmp1_fu_501_p2;
    sc_signal< sc_lv<32> > tmp_17_fu_525_p2;
    sc_signal< sc_lv<32> > tmp_38_fu_538_p2;
    sc_signal< sc_lv<32> > x_3_fu_544_p2;
    sc_signal< sc_lv<24> > tmp_39_fu_550_p4;
    sc_signal< sc_lv<32> > p_mask3_fu_560_p3;
    sc_signal< sc_lv<1> > tmp_19_fu_568_p2;
    sc_signal< sc_lv<32> > tmp_20_fu_574_p2;
    sc_signal< sc_lv<32> > storemerge8_v_fu_580_p3;
    sc_signal< sc_lv<32> > tmp_23_tmp_s_fu_531_p3;
    sc_signal< sc_lv<32> > tmp6_fu_593_p2;
    sc_signal< sc_lv<32> > tmp5_fu_599_p2;
    sc_signal< sc_lv<32> > tmp4_fu_588_p2;
    sc_signal< sc_lv<32> > p_mask4_fu_611_p3;
    sc_signal< sc_lv<1> > tmp_22_fu_619_p2;
    sc_signal< sc_lv<32> > tmp_23_fu_625_p2;
    sc_signal< sc_lv<32> > tmp_41_fu_639_p2;
    sc_signal< sc_lv<32> > x_5_fu_645_p2;
    sc_signal< sc_lv<24> > tmp_42_fu_651_p4;
    sc_signal< sc_lv<32> > p_mask5_fu_661_p3;
    sc_signal< sc_lv<1> > tmp_25_fu_669_p2;
    sc_signal< sc_lv<32> > tmp_26_fu_675_p2;
    sc_signal< sc_lv<32> > storemerge9_v_fu_681_p3;
    sc_signal< sc_lv<32> > tmp_33_tmp_s_fu_631_p3;
    sc_signal< sc_lv<32> > tmp9_fu_693_p2;
    sc_signal< sc_lv<32> > tmp8_fu_699_p2;
    sc_signal< sc_lv<32> > tmp7_fu_689_p2;
    sc_signal< sc_lv<32> > p_mask6_fu_711_p3;
    sc_signal< sc_lv<1> > tmp_28_fu_719_p2;
    sc_signal< sc_lv<32> > tmp_29_fu_725_p2;
    sc_signal< sc_lv<32> > x_7_fu_739_p2;
    sc_signal< sc_lv<24> > tmp_44_fu_744_p4;
    sc_signal< sc_lv<32> > p_mask7_fu_754_p3;
    sc_signal< sc_lv<1> > tmp_30_fu_762_p2;
    sc_signal< sc_lv<32> > tmp_31_fu_768_p2;
    sc_signal< sc_lv<32> > storemerge1_v_fu_774_p3;
    sc_signal< sc_lv<32> > tmp_43_tmp_s_fu_731_p3;
    sc_signal< sc_lv<32> > tmp12_fu_787_p2;
    sc_signal< sc_lv<32> > tmp11_fu_793_p2;
    sc_signal< sc_lv<32> > tmp10_fu_782_p2;
    sc_signal< sc_lv<2> > tmp_45_fu_817_p1;
    sc_signal< sc_lv<4> > tmp_4_fu_834_p2;
    sc_signal< sc_lv<4> > tmp_12_fu_845_p2;
    sc_signal< sc_lv<4> > tmp_13_fu_855_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<8> ap_const_lv8_78;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_100;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<9> ap_const_lv9_F0;
    static const sc_lv<9> ap_const_lv9_168;
    static const sc_lv<32> ap_const_lv32_11B;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_297_p2();
    void thread_exitcond_fu_805_p2();
    void thread_grp_fu_265_p4();
    void thread_grp_fu_275_p4();
    void thread_j_2_fu_811_p2();
    void thread_j_3_fu_303_p2();
    void thread_j_cast1_fu_293_p1();
    void thread_p_mask1_fu_473_p3();
    void thread_p_mask2_fu_421_p3();
    void thread_p_mask3_fu_560_p3();
    void thread_p_mask4_fu_611_p3();
    void thread_p_mask5_fu_661_p3();
    void thread_p_mask6_fu_711_p3();
    void thread_p_mask7_fu_754_p3();
    void thread_p_mask_fu_362_p3();
    void thread_ret_address0();
    void thread_ret_address1();
    void thread_ret_ce0();
    void thread_ret_ce1();
    void thread_ret_d0();
    void thread_ret_d1();
    void thread_ret_load_1_fu_446_p3();
    void thread_ret_we0();
    void thread_ret_we1();
    void thread_statemt_address0();
    void thread_statemt_address1();
    void thread_statemt_ce0();
    void thread_statemt_ce1();
    void thread_statemt_d0();
    void thread_statemt_d1();
    void thread_statemt_we0();
    void thread_statemt_we1();
    void thread_storemerge1_v_fu_774_p3();
    void thread_storemerge8_v_fu_580_p3();
    void thread_storemerge9_v_fu_681_p3();
    void thread_storemerge_v_fu_493_p3();
    void thread_tmp10_fu_782_p2();
    void thread_tmp11_fu_793_p2();
    void thread_tmp12_fu_787_p2();
    void thread_tmp1_fu_501_p2();
    void thread_tmp2_fu_513_p2();
    void thread_tmp3_fu_507_p2();
    void thread_tmp4_fu_588_p2();
    void thread_tmp5_fu_599_p2();
    void thread_tmp6_fu_593_p2();
    void thread_tmp7_fu_689_p2();
    void thread_tmp8_fu_699_p2();
    void thread_tmp9_fu_693_p2();
    void thread_tmp_10_fu_376_p2();
    void thread_tmp_11_fu_386_p2();
    void thread_tmp_12_cast_fu_850_p1();
    void thread_tmp_12_fu_845_p2();
    void thread_tmp_13_cast_fu_860_p1();
    void thread_tmp_13_fu_855_p2();
    void thread_tmp_14_cast_fu_381_p1();
    void thread_tmp_14_fu_337_p2();
    void thread_tmp_15_cast_fu_391_p1();
    void thread_tmp_15_fu_518_p2();
    void thread_tmp_16_cast_cast1_fu_396_p1();
    void thread_tmp_16_cast_cast_fu_347_p1();
    void thread_tmp_16_cast_fu_342_p1();
    void thread_tmp_16_fu_429_p2();
    void thread_tmp_17_fu_525_p2();
    void thread_tmp_18_fu_435_p2();
    void thread_tmp_19_fu_568_p2();
    void thread_tmp_1_fu_481_p2();
    void thread_tmp_20_fu_574_p2();
    void thread_tmp_21_fu_604_p2();
    void thread_tmp_22_fu_619_p2();
    void thread_tmp_23_fu_625_p2();
    void thread_tmp_23_tmp_s_fu_531_p3();
    void thread_tmp_24_fu_453_p2();
    void thread_tmp_25_fu_669_p2();
    void thread_tmp_26_fu_675_p2();
    void thread_tmp_27_fu_705_p2();
    void thread_tmp_28_fu_719_p2();
    void thread_tmp_29_fu_725_p2();
    void thread_tmp_2_cast_fu_829_p1();
    void thread_tmp_2_fu_821_p3();
    void thread_tmp_30_fu_762_p2();
    void thread_tmp_31_fu_768_p2();
    void thread_tmp_32_fu_799_p2();
    void thread_tmp_33_fu_463_p4();
    void thread_tmp_33_tmp_s_fu_631_p3();
    void thread_tmp_34_fu_351_p2();
    void thread_tmp_35_fu_399_p2();
    void thread_tmp_36_fu_410_p2();
    void thread_tmp_38_cast_fu_357_p1();
    void thread_tmp_38_fu_538_p2();
    void thread_tmp_39_cast_fu_405_p1();
    void thread_tmp_39_fu_550_p4();
    void thread_tmp_3_fu_487_p2();
    void thread_tmp_40_cast_fu_416_p1();
    void thread_tmp_41_fu_639_p2();
    void thread_tmp_42_fu_651_p4();
    void thread_tmp_43_tmp_s_fu_731_p3();
    void thread_tmp_44_fu_744_p4();
    void thread_tmp_45_fu_817_p1();
    void thread_tmp_4_cast_fu_840_p1();
    void thread_tmp_4_fu_834_p2();
    void thread_tmp_5_cast_fu_321_p1();
    void thread_tmp_5_fu_313_p3();
    void thread_tmp_6_fu_309_p1();
    void thread_tmp_7_fu_370_p2();
    void thread_tmp_8_fu_440_p2();
    void thread_tmp_9_cast_fu_332_p1();
    void thread_tmp_9_fu_326_p2();
    void thread_tmp_fu_285_p3();
    void thread_word_address0();
    void thread_word_address1();
    void thread_word_ce0();
    void thread_word_ce1();
    void thread_x_1_fu_458_p2();
    void thread_x_3_fu_544_p2();
    void thread_x_5_fu_645_p2();
    void thread_x_7_fu_739_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
