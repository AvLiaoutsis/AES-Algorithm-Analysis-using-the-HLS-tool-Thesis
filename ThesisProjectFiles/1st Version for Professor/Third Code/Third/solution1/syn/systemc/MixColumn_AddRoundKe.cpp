// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "MixColumn_AddRoundKe.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic MixColumn_AddRoundKe::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic MixColumn_AddRoundKe::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> MixColumn_AddRoundKe::ap_ST_fsm_state1 = "1";
const sc_lv<8> MixColumn_AddRoundKe::ap_ST_fsm_state2 = "10";
const sc_lv<8> MixColumn_AddRoundKe::ap_ST_fsm_state3 = "100";
const sc_lv<8> MixColumn_AddRoundKe::ap_ST_fsm_state4 = "1000";
const sc_lv<8> MixColumn_AddRoundKe::ap_ST_fsm_state5 = "10000";
const sc_lv<8> MixColumn_AddRoundKe::ap_ST_fsm_state6 = "100000";
const sc_lv<8> MixColumn_AddRoundKe::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> MixColumn_AddRoundKe::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> MixColumn_AddRoundKe::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> MixColumn_AddRoundKe::ap_const_lv32_1 = "1";
const sc_lv<1> MixColumn_AddRoundKe::ap_const_lv1_0 = "0";
const sc_lv<32> MixColumn_AddRoundKe::ap_const_lv32_2 = "10";
const sc_lv<32> MixColumn_AddRoundKe::ap_const_lv32_3 = "11";
const sc_lv<32> MixColumn_AddRoundKe::ap_const_lv32_5 = "101";
const sc_lv<32> MixColumn_AddRoundKe::ap_const_lv32_6 = "110";
const sc_lv<3> MixColumn_AddRoundKe::ap_const_lv3_0 = "000";
const sc_lv<32> MixColumn_AddRoundKe::ap_const_lv32_4 = "100";
const sc_lv<32> MixColumn_AddRoundKe::ap_const_lv32_7 = "111";
const sc_lv<1> MixColumn_AddRoundKe::ap_const_lv1_1 = "1";
const sc_lv<32> MixColumn_AddRoundKe::ap_const_lv32_1E = "11110";
const sc_lv<2> MixColumn_AddRoundKe::ap_const_lv2_0 = "00";
const sc_lv<3> MixColumn_AddRoundKe::ap_const_lv3_4 = "100";
const sc_lv<3> MixColumn_AddRoundKe::ap_const_lv3_1 = "1";
const sc_lv<4> MixColumn_AddRoundKe::ap_const_lv4_1 = "1";
const sc_lv<8> MixColumn_AddRoundKe::ap_const_lv8_78 = "1111000";
const sc_lv<8> MixColumn_AddRoundKe::ap_const_lv8_0 = "00000000";
const sc_lv<32> MixColumn_AddRoundKe::ap_const_lv32_100 = "100000000";
const sc_lv<4> MixColumn_AddRoundKe::ap_const_lv4_2 = "10";
const sc_lv<4> MixColumn_AddRoundKe::ap_const_lv4_3 = "11";
const sc_lv<9> MixColumn_AddRoundKe::ap_const_lv9_F0 = "11110000";
const sc_lv<9> MixColumn_AddRoundKe::ap_const_lv9_168 = "101101000";
const sc_lv<32> MixColumn_AddRoundKe::ap_const_lv32_11B = "100011011";
const sc_lv<32> MixColumn_AddRoundKe::ap_const_lv32_8 = "1000";
const sc_lv<32> MixColumn_AddRoundKe::ap_const_lv32_1F = "11111";
const bool MixColumn_AddRoundKe::ap_const_boolean_1 = true;

MixColumn_AddRoundKe::MixColumn_AddRoundKe(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ret_U = new MixColumn_AddRoundEe("ret_U");
    ret_U->clk(ap_clk);
    ret_U->reset(ap_rst);
    ret_U->address0(ret_address0);
    ret_U->ce0(ret_ce0);
    ret_U->we0(ret_we0);
    ret_U->d0(ret_d0);
    ret_U->q0(ret_q0);
    ret_U->address1(ret_address1);
    ret_U->ce1(ret_ce1);
    ret_U->we1(ret_we1);
    ret_U->d1(ret_d1);
    ret_U->q1(ret_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_805_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_805_p2 );

    SC_METHOD(thread_exitcond1_fu_297_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_reg_243 );

    SC_METHOD(thread_exitcond_fu_805_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j_1_reg_254 );

    SC_METHOD(thread_grp_fu_265_p4);
    sensitive << ( statemt_q0 );

    SC_METHOD(thread_grp_fu_275_p4);
    sensitive << ( statemt_q1 );

    SC_METHOD(thread_j_2_fu_811_p2);
    sensitive << ( j_1_reg_254 );

    SC_METHOD(thread_j_3_fu_303_p2);
    sensitive << ( j_reg_243 );

    SC_METHOD(thread_j_cast1_fu_293_p1);
    sensitive << ( j_reg_243 );

    SC_METHOD(thread_p_mask1_fu_473_p3);
    sensitive << ( tmp_33_fu_463_p4 );

    SC_METHOD(thread_p_mask2_fu_421_p3);
    sensitive << ( grp_fu_275_p4 );

    SC_METHOD(thread_p_mask3_fu_560_p3);
    sensitive << ( tmp_39_fu_550_p4 );

    SC_METHOD(thread_p_mask4_fu_611_p3);
    sensitive << ( grp_fu_265_p4 );

    SC_METHOD(thread_p_mask5_fu_661_p3);
    sensitive << ( tmp_42_fu_651_p4 );

    SC_METHOD(thread_p_mask6_fu_711_p3);
    sensitive << ( grp_fu_275_p4 );

    SC_METHOD(thread_p_mask7_fu_754_p3);
    sensitive << ( tmp_44_fu_744_p4 );

    SC_METHOD(thread_p_mask_fu_362_p3);
    sensitive << ( grp_fu_265_p4 );

    SC_METHOD(thread_ret_address0);
    sensitive << ( tmp_5_cast_reg_884 );
    sensitive << ( tmp_14_cast_reg_940 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_cast_fu_829_p1 );
    sensitive << ( tmp_12_cast_fu_850_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ret_address1);
    sensitive << ( tmp_9_cast_reg_894 );
    sensitive << ( tmp_15_cast_reg_950 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_cast_fu_840_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_13_cast_fu_860_p1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ret_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ret_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ret_d0);
    sensitive << ( tmp_27_reg_985 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_15_fu_518_p2 );

    SC_METHOD(thread_ret_d1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_32_reg_990 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_21_fu_604_p2 );

    SC_METHOD(thread_ret_load_1_fu_446_p3);
    sensitive << ( tmp_7_reg_927 );
    sensitive << ( tmp_18_fu_435_p2 );
    sensitive << ( tmp_8_fu_440_p2 );

    SC_METHOD(thread_ret_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ret_we1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_statemt_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_5_cast_fu_321_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_14_cast_fu_381_p1 );
    sensitive << ( tmp_2_cast_reg_1009 );
    sensitive << ( tmp_12_cast_reg_1029 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_statemt_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_9_cast_fu_332_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_15_cast_fu_391_p1 );
    sensitive << ( tmp_4_cast_reg_1019 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_13_cast_reg_1039 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_statemt_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_statemt_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_statemt_d0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ret_q0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_statemt_d1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ret_q1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_statemt_we0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_statemt_we1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_storemerge1_v_fu_774_p3);
    sensitive << ( x_7_fu_739_p2 );
    sensitive << ( tmp_30_fu_762_p2 );
    sensitive << ( tmp_31_fu_768_p2 );

    SC_METHOD(thread_storemerge8_v_fu_580_p3);
    sensitive << ( x_3_fu_544_p2 );
    sensitive << ( tmp_19_fu_568_p2 );
    sensitive << ( tmp_20_fu_574_p2 );

    SC_METHOD(thread_storemerge9_v_fu_681_p3);
    sensitive << ( x_5_fu_645_p2 );
    sensitive << ( tmp_25_fu_669_p2 );
    sensitive << ( tmp_26_fu_675_p2 );

    SC_METHOD(thread_storemerge_v_fu_493_p3);
    sensitive << ( x_1_fu_458_p2 );
    sensitive << ( tmp_1_fu_481_p2 );
    sensitive << ( tmp_3_fu_487_p2 );

    SC_METHOD(thread_tmp10_fu_782_p2);
    sensitive << ( statemt_q0 );
    sensitive << ( x_reg_932 );

    SC_METHOD(thread_tmp11_fu_793_p2);
    sensitive << ( word_q1 );
    sensitive << ( tmp12_fu_787_p2 );

    SC_METHOD(thread_tmp12_fu_787_p2);
    sensitive << ( storemerge1_v_fu_774_p3 );
    sensitive << ( tmp_43_tmp_s_fu_731_p3 );

    SC_METHOD(thread_tmp1_fu_501_p2);
    sensitive << ( statemt_q0 );
    sensitive << ( statemt_q1 );

    SC_METHOD(thread_tmp2_fu_513_p2);
    sensitive << ( word_load_reg_970 );
    sensitive << ( tmp3_fu_507_p2 );

    SC_METHOD(thread_tmp3_fu_507_p2);
    sensitive << ( ret_load_1_fu_446_p3 );
    sensitive << ( storemerge_v_fu_493_p3 );

    SC_METHOD(thread_tmp4_fu_588_p2);
    sensitive << ( statemt_q1 );
    sensitive << ( x_6_reg_919 );

    SC_METHOD(thread_tmp5_fu_599_p2);
    sensitive << ( word_load_1_reg_980 );
    sensitive << ( tmp6_fu_593_p2 );

    SC_METHOD(thread_tmp6_fu_593_p2);
    sensitive << ( storemerge8_v_fu_580_p3 );
    sensitive << ( tmp_23_tmp_s_fu_531_p3 );

    SC_METHOD(thread_tmp7_fu_689_p2);
    sensitive << ( x_6_reg_919 );
    sensitive << ( x_reg_932 );

    SC_METHOD(thread_tmp8_fu_699_p2);
    sensitive << ( word_q0 );
    sensitive << ( tmp9_fu_693_p2 );

    SC_METHOD(thread_tmp9_fu_693_p2);
    sensitive << ( storemerge9_v_fu_681_p3 );
    sensitive << ( tmp_33_tmp_s_fu_631_p3 );

    SC_METHOD(thread_tmp_10_fu_376_p2);
    sensitive << ( tmp_5_reg_878 );

    SC_METHOD(thread_tmp_11_fu_386_p2);
    sensitive << ( tmp_5_reg_878 );

    SC_METHOD(thread_tmp_12_cast_fu_850_p1);
    sensitive << ( tmp_12_fu_845_p2 );

    SC_METHOD(thread_tmp_12_fu_845_p2);
    sensitive << ( tmp_2_reg_1003 );

    SC_METHOD(thread_tmp_13_cast_fu_860_p1);
    sensitive << ( tmp_13_fu_855_p2 );

    SC_METHOD(thread_tmp_13_fu_855_p2);
    sensitive << ( tmp_2_reg_1003 );

    SC_METHOD(thread_tmp_14_cast_fu_381_p1);
    sensitive << ( tmp_10_fu_376_p2 );

    SC_METHOD(thread_tmp_14_fu_337_p2);
    sensitive << ( tmp_reg_865 );
    sensitive << ( j_cast1_fu_293_p1 );

    SC_METHOD(thread_tmp_15_cast_fu_391_p1);
    sensitive << ( tmp_11_fu_386_p2 );

    SC_METHOD(thread_tmp_15_fu_518_p2);
    sensitive << ( tmp2_fu_513_p2 );
    sensitive << ( tmp1_fu_501_p2 );

    SC_METHOD(thread_tmp_16_cast_cast1_fu_396_p1);
    sensitive << ( tmp_14_reg_904 );

    SC_METHOD(thread_tmp_16_cast_cast_fu_347_p1);
    sensitive << ( tmp_14_fu_337_p2 );

    SC_METHOD(thread_tmp_16_cast_fu_342_p1);
    sensitive << ( tmp_14_fu_337_p2 );

    SC_METHOD(thread_tmp_16_fu_429_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_mask2_fu_421_p3 );

    SC_METHOD(thread_tmp_17_fu_525_p2);
    sensitive << ( tmp_24_fu_453_p2 );

    SC_METHOD(thread_tmp_18_fu_435_p2);
    sensitive << ( x_6_reg_919 );

    SC_METHOD(thread_tmp_19_fu_568_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_mask3_fu_560_p3 );

    SC_METHOD(thread_tmp_1_fu_481_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_mask1_fu_473_p3 );

    SC_METHOD(thread_tmp_20_fu_574_p2);
    sensitive << ( x_3_fu_544_p2 );

    SC_METHOD(thread_tmp_21_fu_604_p2);
    sensitive << ( tmp5_fu_599_p2 );
    sensitive << ( tmp4_fu_588_p2 );

    SC_METHOD(thread_tmp_22_fu_619_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_mask4_fu_611_p3 );

    SC_METHOD(thread_tmp_23_fu_625_p2);
    sensitive << ( tmp_38_fu_538_p2 );

    SC_METHOD(thread_tmp_23_tmp_s_fu_531_p3);
    sensitive << ( tmp_16_reg_975 );
    sensitive << ( tmp_24_fu_453_p2 );
    sensitive << ( tmp_17_fu_525_p2 );

    SC_METHOD(thread_tmp_24_fu_453_p2);
    sensitive << ( x_reg_932 );

    SC_METHOD(thread_tmp_25_fu_669_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_mask5_fu_661_p3 );

    SC_METHOD(thread_tmp_26_fu_675_p2);
    sensitive << ( x_5_fu_645_p2 );

    SC_METHOD(thread_tmp_27_fu_705_p2);
    sensitive << ( tmp8_fu_699_p2 );
    sensitive << ( tmp7_fu_689_p2 );

    SC_METHOD(thread_tmp_28_fu_719_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_mask6_fu_711_p3 );

    SC_METHOD(thread_tmp_29_fu_725_p2);
    sensitive << ( tmp_41_fu_639_p2 );

    SC_METHOD(thread_tmp_2_cast_fu_829_p1);
    sensitive << ( tmp_2_fu_821_p3 );

    SC_METHOD(thread_tmp_2_fu_821_p3);
    sensitive << ( tmp_45_fu_817_p1 );

    SC_METHOD(thread_tmp_30_fu_762_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_mask7_fu_754_p3 );

    SC_METHOD(thread_tmp_31_fu_768_p2);
    sensitive << ( x_7_fu_739_p2 );

    SC_METHOD(thread_tmp_32_fu_799_p2);
    sensitive << ( tmp11_fu_793_p2 );
    sensitive << ( tmp10_fu_782_p2 );

    SC_METHOD(thread_tmp_33_fu_463_p4);
    sensitive << ( x_1_fu_458_p2 );

    SC_METHOD(thread_tmp_33_tmp_s_fu_631_p3);
    sensitive << ( tmp_38_fu_538_p2 );
    sensitive << ( tmp_22_fu_619_p2 );
    sensitive << ( tmp_23_fu_625_p2 );

    SC_METHOD(thread_tmp_34_fu_351_p2);
    sensitive << ( tmp_16_cast_cast_fu_347_p1 );

    SC_METHOD(thread_tmp_35_fu_399_p2);
    sensitive << ( tmp_16_cast_cast1_fu_396_p1 );

    SC_METHOD(thread_tmp_36_fu_410_p2);
    sensitive << ( tmp_16_cast_cast1_fu_396_p1 );

    SC_METHOD(thread_tmp_38_cast_fu_357_p1);
    sensitive << ( tmp_34_fu_351_p2 );

    SC_METHOD(thread_tmp_38_fu_538_p2);
    sensitive << ( statemt_q0 );

    SC_METHOD(thread_tmp_39_cast_fu_405_p1);
    sensitive << ( tmp_35_fu_399_p2 );

    SC_METHOD(thread_tmp_39_fu_550_p4);
    sensitive << ( x_3_fu_544_p2 );

    SC_METHOD(thread_tmp_3_fu_487_p2);
    sensitive << ( x_1_fu_458_p2 );

    SC_METHOD(thread_tmp_40_cast_fu_416_p1);
    sensitive << ( tmp_36_fu_410_p2 );

    SC_METHOD(thread_tmp_41_fu_639_p2);
    sensitive << ( statemt_q1 );

    SC_METHOD(thread_tmp_42_fu_651_p4);
    sensitive << ( x_5_fu_645_p2 );

    SC_METHOD(thread_tmp_43_tmp_s_fu_731_p3);
    sensitive << ( tmp_41_fu_639_p2 );
    sensitive << ( tmp_28_fu_719_p2 );
    sensitive << ( tmp_29_fu_725_p2 );

    SC_METHOD(thread_tmp_44_fu_744_p4);
    sensitive << ( x_7_fu_739_p2 );

    SC_METHOD(thread_tmp_45_fu_817_p1);
    sensitive << ( j_1_reg_254 );

    SC_METHOD(thread_tmp_4_cast_fu_840_p1);
    sensitive << ( tmp_4_fu_834_p2 );

    SC_METHOD(thread_tmp_4_fu_834_p2);
    sensitive << ( tmp_2_fu_821_p3 );

    SC_METHOD(thread_tmp_5_cast_fu_321_p1);
    sensitive << ( tmp_5_fu_313_p3 );

    SC_METHOD(thread_tmp_5_fu_313_p3);
    sensitive << ( tmp_6_fu_309_p1 );

    SC_METHOD(thread_tmp_6_fu_309_p1);
    sensitive << ( j_reg_243 );

    SC_METHOD(thread_tmp_7_fu_370_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_mask_fu_362_p3 );

    SC_METHOD(thread_tmp_8_fu_440_p2);
    sensitive << ( tmp_18_fu_435_p2 );

    SC_METHOD(thread_tmp_9_cast_fu_332_p1);
    sensitive << ( tmp_9_fu_326_p2 );

    SC_METHOD(thread_tmp_9_fu_326_p2);
    sensitive << ( tmp_5_fu_313_p3 );

    SC_METHOD(thread_tmp_fu_285_p3);
    sensitive << ( n );

    SC_METHOD(thread_word_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_16_cast_fu_342_p1 );
    sensitive << ( tmp_39_cast_fu_405_p1 );

    SC_METHOD(thread_word_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_38_cast_fu_357_p1 );
    sensitive << ( tmp_40_cast_fu_416_p1 );

    SC_METHOD(thread_word_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_word_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_x_1_fu_458_p2);
    sensitive << ( x_reg_932 );
    sensitive << ( tmp_24_fu_453_p2 );

    SC_METHOD(thread_x_3_fu_544_p2);
    sensitive << ( statemt_q0 );
    sensitive << ( tmp_38_fu_538_p2 );

    SC_METHOD(thread_x_5_fu_645_p2);
    sensitive << ( statemt_q1 );
    sensitive << ( tmp_41_fu_639_p2 );

    SC_METHOD(thread_x_7_fu_739_p2);
    sensitive << ( x_6_reg_919 );
    sensitive << ( tmp_18_fu_435_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_297_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_805_p2 );

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "MixColumn_AddRoundKe_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, statemt_address0, "(port)statemt_address0");
    sc_trace(mVcdFile, statemt_ce0, "(port)statemt_ce0");
    sc_trace(mVcdFile, statemt_we0, "(port)statemt_we0");
    sc_trace(mVcdFile, statemt_d0, "(port)statemt_d0");
    sc_trace(mVcdFile, statemt_q0, "(port)statemt_q0");
    sc_trace(mVcdFile, statemt_address1, "(port)statemt_address1");
    sc_trace(mVcdFile, statemt_ce1, "(port)statemt_ce1");
    sc_trace(mVcdFile, statemt_we1, "(port)statemt_we1");
    sc_trace(mVcdFile, statemt_d1, "(port)statemt_d1");
    sc_trace(mVcdFile, statemt_q1, "(port)statemt_q1");
    sc_trace(mVcdFile, n, "(port)n");
    sc_trace(mVcdFile, word_address0, "(port)word_address0");
    sc_trace(mVcdFile, word_ce0, "(port)word_ce0");
    sc_trace(mVcdFile, word_q0, "(port)word_q0");
    sc_trace(mVcdFile, word_address1, "(port)word_address1");
    sc_trace(mVcdFile, word_ce1, "(port)word_ce1");
    sc_trace(mVcdFile, word_q1, "(port)word_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_fu_285_p3, "tmp_fu_285_p3");
    sc_trace(mVcdFile, tmp_reg_865, "tmp_reg_865");
    sc_trace(mVcdFile, j_3_fu_303_p2, "j_3_fu_303_p2");
    sc_trace(mVcdFile, j_3_reg_873, "j_3_reg_873");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_5_fu_313_p3, "tmp_5_fu_313_p3");
    sc_trace(mVcdFile, tmp_5_reg_878, "tmp_5_reg_878");
    sc_trace(mVcdFile, exitcond1_fu_297_p2, "exitcond1_fu_297_p2");
    sc_trace(mVcdFile, tmp_5_cast_fu_321_p1, "tmp_5_cast_fu_321_p1");
    sc_trace(mVcdFile, tmp_5_cast_reg_884, "tmp_5_cast_reg_884");
    sc_trace(mVcdFile, tmp_9_cast_fu_332_p1, "tmp_9_cast_fu_332_p1");
    sc_trace(mVcdFile, tmp_9_cast_reg_894, "tmp_9_cast_reg_894");
    sc_trace(mVcdFile, tmp_14_fu_337_p2, "tmp_14_fu_337_p2");
    sc_trace(mVcdFile, tmp_14_reg_904, "tmp_14_reg_904");
    sc_trace(mVcdFile, x_6_reg_919, "x_6_reg_919");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_7_fu_370_p2, "tmp_7_fu_370_p2");
    sc_trace(mVcdFile, tmp_7_reg_927, "tmp_7_reg_927");
    sc_trace(mVcdFile, x_reg_932, "x_reg_932");
    sc_trace(mVcdFile, tmp_14_cast_fu_381_p1, "tmp_14_cast_fu_381_p1");
    sc_trace(mVcdFile, tmp_14_cast_reg_940, "tmp_14_cast_reg_940");
    sc_trace(mVcdFile, tmp_15_cast_fu_391_p1, "tmp_15_cast_fu_391_p1");
    sc_trace(mVcdFile, tmp_15_cast_reg_950, "tmp_15_cast_reg_950");
    sc_trace(mVcdFile, word_load_reg_970, "word_load_reg_970");
    sc_trace(mVcdFile, tmp_16_fu_429_p2, "tmp_16_fu_429_p2");
    sc_trace(mVcdFile, tmp_16_reg_975, "tmp_16_reg_975");
    sc_trace(mVcdFile, word_load_1_reg_980, "word_load_1_reg_980");
    sc_trace(mVcdFile, tmp_27_fu_705_p2, "tmp_27_fu_705_p2");
    sc_trace(mVcdFile, tmp_27_reg_985, "tmp_27_reg_985");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_32_fu_799_p2, "tmp_32_fu_799_p2");
    sc_trace(mVcdFile, tmp_32_reg_990, "tmp_32_reg_990");
    sc_trace(mVcdFile, j_2_fu_811_p2, "j_2_fu_811_p2");
    sc_trace(mVcdFile, j_2_reg_998, "j_2_reg_998");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_2_fu_821_p3, "tmp_2_fu_821_p3");
    sc_trace(mVcdFile, tmp_2_reg_1003, "tmp_2_reg_1003");
    sc_trace(mVcdFile, exitcond_fu_805_p2, "exitcond_fu_805_p2");
    sc_trace(mVcdFile, tmp_2_cast_fu_829_p1, "tmp_2_cast_fu_829_p1");
    sc_trace(mVcdFile, tmp_2_cast_reg_1009, "tmp_2_cast_reg_1009");
    sc_trace(mVcdFile, tmp_4_cast_fu_840_p1, "tmp_4_cast_fu_840_p1");
    sc_trace(mVcdFile, tmp_4_cast_reg_1019, "tmp_4_cast_reg_1019");
    sc_trace(mVcdFile, tmp_12_cast_fu_850_p1, "tmp_12_cast_fu_850_p1");
    sc_trace(mVcdFile, tmp_12_cast_reg_1029, "tmp_12_cast_reg_1029");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_13_cast_fu_860_p1, "tmp_13_cast_fu_860_p1");
    sc_trace(mVcdFile, tmp_13_cast_reg_1039, "tmp_13_cast_reg_1039");
    sc_trace(mVcdFile, ret_address0, "ret_address0");
    sc_trace(mVcdFile, ret_ce0, "ret_ce0");
    sc_trace(mVcdFile, ret_we0, "ret_we0");
    sc_trace(mVcdFile, ret_d0, "ret_d0");
    sc_trace(mVcdFile, ret_q0, "ret_q0");
    sc_trace(mVcdFile, ret_address1, "ret_address1");
    sc_trace(mVcdFile, ret_ce1, "ret_ce1");
    sc_trace(mVcdFile, ret_we1, "ret_we1");
    sc_trace(mVcdFile, ret_d1, "ret_d1");
    sc_trace(mVcdFile, ret_q1, "ret_q1");
    sc_trace(mVcdFile, j_reg_243, "j_reg_243");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, j_1_reg_254, "j_1_reg_254");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_16_cast_fu_342_p1, "tmp_16_cast_fu_342_p1");
    sc_trace(mVcdFile, tmp_38_cast_fu_357_p1, "tmp_38_cast_fu_357_p1");
    sc_trace(mVcdFile, tmp_39_cast_fu_405_p1, "tmp_39_cast_fu_405_p1");
    sc_trace(mVcdFile, tmp_40_cast_fu_416_p1, "tmp_40_cast_fu_416_p1");
    sc_trace(mVcdFile, tmp_15_fu_518_p2, "tmp_15_fu_518_p2");
    sc_trace(mVcdFile, tmp_21_fu_604_p2, "tmp_21_fu_604_p2");
    sc_trace(mVcdFile, tmp_6_fu_309_p1, "tmp_6_fu_309_p1");
    sc_trace(mVcdFile, tmp_9_fu_326_p2, "tmp_9_fu_326_p2");
    sc_trace(mVcdFile, j_cast1_fu_293_p1, "j_cast1_fu_293_p1");
    sc_trace(mVcdFile, tmp_16_cast_cast_fu_347_p1, "tmp_16_cast_cast_fu_347_p1");
    sc_trace(mVcdFile, tmp_34_fu_351_p2, "tmp_34_fu_351_p2");
    sc_trace(mVcdFile, grp_fu_265_p4, "grp_fu_265_p4");
    sc_trace(mVcdFile, p_mask_fu_362_p3, "p_mask_fu_362_p3");
    sc_trace(mVcdFile, tmp_10_fu_376_p2, "tmp_10_fu_376_p2");
    sc_trace(mVcdFile, tmp_11_fu_386_p2, "tmp_11_fu_386_p2");
    sc_trace(mVcdFile, tmp_16_cast_cast1_fu_396_p1, "tmp_16_cast_cast1_fu_396_p1");
    sc_trace(mVcdFile, tmp_35_fu_399_p2, "tmp_35_fu_399_p2");
    sc_trace(mVcdFile, tmp_36_fu_410_p2, "tmp_36_fu_410_p2");
    sc_trace(mVcdFile, grp_fu_275_p4, "grp_fu_275_p4");
    sc_trace(mVcdFile, p_mask2_fu_421_p3, "p_mask2_fu_421_p3");
    sc_trace(mVcdFile, tmp_18_fu_435_p2, "tmp_18_fu_435_p2");
    sc_trace(mVcdFile, tmp_8_fu_440_p2, "tmp_8_fu_440_p2");
    sc_trace(mVcdFile, tmp_24_fu_453_p2, "tmp_24_fu_453_p2");
    sc_trace(mVcdFile, x_1_fu_458_p2, "x_1_fu_458_p2");
    sc_trace(mVcdFile, tmp_33_fu_463_p4, "tmp_33_fu_463_p4");
    sc_trace(mVcdFile, p_mask1_fu_473_p3, "p_mask1_fu_473_p3");
    sc_trace(mVcdFile, tmp_1_fu_481_p2, "tmp_1_fu_481_p2");
    sc_trace(mVcdFile, tmp_3_fu_487_p2, "tmp_3_fu_487_p2");
    sc_trace(mVcdFile, ret_load_1_fu_446_p3, "ret_load_1_fu_446_p3");
    sc_trace(mVcdFile, storemerge_v_fu_493_p3, "storemerge_v_fu_493_p3");
    sc_trace(mVcdFile, tmp3_fu_507_p2, "tmp3_fu_507_p2");
    sc_trace(mVcdFile, tmp2_fu_513_p2, "tmp2_fu_513_p2");
    sc_trace(mVcdFile, tmp1_fu_501_p2, "tmp1_fu_501_p2");
    sc_trace(mVcdFile, tmp_17_fu_525_p2, "tmp_17_fu_525_p2");
    sc_trace(mVcdFile, tmp_38_fu_538_p2, "tmp_38_fu_538_p2");
    sc_trace(mVcdFile, x_3_fu_544_p2, "x_3_fu_544_p2");
    sc_trace(mVcdFile, tmp_39_fu_550_p4, "tmp_39_fu_550_p4");
    sc_trace(mVcdFile, p_mask3_fu_560_p3, "p_mask3_fu_560_p3");
    sc_trace(mVcdFile, tmp_19_fu_568_p2, "tmp_19_fu_568_p2");
    sc_trace(mVcdFile, tmp_20_fu_574_p2, "tmp_20_fu_574_p2");
    sc_trace(mVcdFile, storemerge8_v_fu_580_p3, "storemerge8_v_fu_580_p3");
    sc_trace(mVcdFile, tmp_23_tmp_s_fu_531_p3, "tmp_23_tmp_s_fu_531_p3");
    sc_trace(mVcdFile, tmp6_fu_593_p2, "tmp6_fu_593_p2");
    sc_trace(mVcdFile, tmp5_fu_599_p2, "tmp5_fu_599_p2");
    sc_trace(mVcdFile, tmp4_fu_588_p2, "tmp4_fu_588_p2");
    sc_trace(mVcdFile, p_mask4_fu_611_p3, "p_mask4_fu_611_p3");
    sc_trace(mVcdFile, tmp_22_fu_619_p2, "tmp_22_fu_619_p2");
    sc_trace(mVcdFile, tmp_23_fu_625_p2, "tmp_23_fu_625_p2");
    sc_trace(mVcdFile, tmp_41_fu_639_p2, "tmp_41_fu_639_p2");
    sc_trace(mVcdFile, x_5_fu_645_p2, "x_5_fu_645_p2");
    sc_trace(mVcdFile, tmp_42_fu_651_p4, "tmp_42_fu_651_p4");
    sc_trace(mVcdFile, p_mask5_fu_661_p3, "p_mask5_fu_661_p3");
    sc_trace(mVcdFile, tmp_25_fu_669_p2, "tmp_25_fu_669_p2");
    sc_trace(mVcdFile, tmp_26_fu_675_p2, "tmp_26_fu_675_p2");
    sc_trace(mVcdFile, storemerge9_v_fu_681_p3, "storemerge9_v_fu_681_p3");
    sc_trace(mVcdFile, tmp_33_tmp_s_fu_631_p3, "tmp_33_tmp_s_fu_631_p3");
    sc_trace(mVcdFile, tmp9_fu_693_p2, "tmp9_fu_693_p2");
    sc_trace(mVcdFile, tmp8_fu_699_p2, "tmp8_fu_699_p2");
    sc_trace(mVcdFile, tmp7_fu_689_p2, "tmp7_fu_689_p2");
    sc_trace(mVcdFile, p_mask6_fu_711_p3, "p_mask6_fu_711_p3");
    sc_trace(mVcdFile, tmp_28_fu_719_p2, "tmp_28_fu_719_p2");
    sc_trace(mVcdFile, tmp_29_fu_725_p2, "tmp_29_fu_725_p2");
    sc_trace(mVcdFile, x_7_fu_739_p2, "x_7_fu_739_p2");
    sc_trace(mVcdFile, tmp_44_fu_744_p4, "tmp_44_fu_744_p4");
    sc_trace(mVcdFile, p_mask7_fu_754_p3, "p_mask7_fu_754_p3");
    sc_trace(mVcdFile, tmp_30_fu_762_p2, "tmp_30_fu_762_p2");
    sc_trace(mVcdFile, tmp_31_fu_768_p2, "tmp_31_fu_768_p2");
    sc_trace(mVcdFile, storemerge1_v_fu_774_p3, "storemerge1_v_fu_774_p3");
    sc_trace(mVcdFile, tmp_43_tmp_s_fu_731_p3, "tmp_43_tmp_s_fu_731_p3");
    sc_trace(mVcdFile, tmp12_fu_787_p2, "tmp12_fu_787_p2");
    sc_trace(mVcdFile, tmp11_fu_793_p2, "tmp11_fu_793_p2");
    sc_trace(mVcdFile, tmp10_fu_782_p2, "tmp10_fu_782_p2");
    sc_trace(mVcdFile, tmp_45_fu_817_p1, "tmp_45_fu_817_p1");
    sc_trace(mVcdFile, tmp_4_fu_834_p2, "tmp_4_fu_834_p2");
    sc_trace(mVcdFile, tmp_12_fu_845_p2, "tmp_12_fu_845_p2");
    sc_trace(mVcdFile, tmp_13_fu_855_p2, "tmp_13_fu_855_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

MixColumn_AddRoundKe::~MixColumn_AddRoundKe() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ret_U;
}

void MixColumn_AddRoundKe::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_297_p2.read(), ap_const_lv1_1))) {
        j_1_reg_254 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j_1_reg_254 = j_2_reg_998.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_reg_243 = j_3_reg_873.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_243 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_2_reg_998 = j_2_fu_811_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        j_3_reg_873 = j_3_fu_303_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_12_cast_reg_1029 = tmp_12_cast_fu_850_p1.read();
        tmp_13_cast_reg_1039 = tmp_13_cast_fu_860_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_14_cast_reg_940 = tmp_14_cast_fu_381_p1.read();
        tmp_15_cast_reg_950 = tmp_15_cast_fu_391_p1.read();
        tmp_16_reg_975 = tmp_16_fu_429_p2.read();
        tmp_7_reg_927 = tmp_7_fu_370_p2.read();
        word_load_1_reg_980 = word_q1.read();
        word_load_reg_970 = word_q0.read();
        x_6_reg_919 = statemt_q0.read();
        x_reg_932 = statemt_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_297_p2.read(), ap_const_lv1_0))) {
        tmp_14_reg_904 = tmp_14_fu_337_p2.read();
        tmp_5_cast_reg_884 = tmp_5_cast_fu_321_p1.read();
        tmp_5_reg_878 = tmp_5_fu_313_p3.read();
        tmp_9_cast_reg_894 = tmp_9_cast_fu_332_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_27_reg_985 = tmp_27_fu_705_p2.read();
        tmp_32_reg_990 = tmp_32_fu_799_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_805_p2.read()))) {
        tmp_2_cast_reg_1009 = tmp_2_cast_fu_829_p1.read();
        tmp_2_reg_1003 = tmp_2_fu_821_p3.read();
        tmp_4_cast_reg_1019 = tmp_4_cast_fu_840_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_reg_865 = tmp_fu_285_p3.read();
    }
}

void MixColumn_AddRoundKe::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void MixColumn_AddRoundKe::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void MixColumn_AddRoundKe::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void MixColumn_AddRoundKe::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void MixColumn_AddRoundKe::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void MixColumn_AddRoundKe::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void MixColumn_AddRoundKe::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void MixColumn_AddRoundKe::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void MixColumn_AddRoundKe::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_805_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void MixColumn_AddRoundKe::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void MixColumn_AddRoundKe::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_805_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void MixColumn_AddRoundKe::thread_exitcond1_fu_297_p2() {
    exitcond1_fu_297_p2 = (!j_reg_243.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_243.read() == ap_const_lv3_4);
}

void MixColumn_AddRoundKe::thread_exitcond_fu_805_p2() {
    exitcond_fu_805_p2 = (!j_1_reg_254.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_254.read() == ap_const_lv3_4);
}

void MixColumn_AddRoundKe::thread_grp_fu_265_p4() {
    grp_fu_265_p4 = statemt_q0.read().range(30, 7);
}

void MixColumn_AddRoundKe::thread_grp_fu_275_p4() {
    grp_fu_275_p4 = statemt_q1.read().range(30, 7);
}

void MixColumn_AddRoundKe::thread_j_2_fu_811_p2() {
    j_2_fu_811_p2 = (!j_1_reg_254.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_1_reg_254.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void MixColumn_AddRoundKe::thread_j_3_fu_303_p2() {
    j_3_fu_303_p2 = (!j_reg_243.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_reg_243.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void MixColumn_AddRoundKe::thread_j_cast1_fu_293_p1() {
    j_cast1_fu_293_p1 = esl_zext<6,3>(j_reg_243.read());
}

void MixColumn_AddRoundKe::thread_p_mask1_fu_473_p3() {
    p_mask1_fu_473_p3 = esl_concat<24,8>(tmp_33_fu_463_p4.read(), ap_const_lv8_0);
}

void MixColumn_AddRoundKe::thread_p_mask2_fu_421_p3() {
    p_mask2_fu_421_p3 = esl_concat<24,8>(grp_fu_275_p4.read(), ap_const_lv8_0);
}

void MixColumn_AddRoundKe::thread_p_mask3_fu_560_p3() {
    p_mask3_fu_560_p3 = esl_concat<24,8>(tmp_39_fu_550_p4.read(), ap_const_lv8_0);
}

void MixColumn_AddRoundKe::thread_p_mask4_fu_611_p3() {
    p_mask4_fu_611_p3 = esl_concat<24,8>(grp_fu_265_p4.read(), ap_const_lv8_0);
}

void MixColumn_AddRoundKe::thread_p_mask5_fu_661_p3() {
    p_mask5_fu_661_p3 = esl_concat<24,8>(tmp_42_fu_651_p4.read(), ap_const_lv8_0);
}

void MixColumn_AddRoundKe::thread_p_mask6_fu_711_p3() {
    p_mask6_fu_711_p3 = esl_concat<24,8>(grp_fu_275_p4.read(), ap_const_lv8_0);
}

void MixColumn_AddRoundKe::thread_p_mask7_fu_754_p3() {
    p_mask7_fu_754_p3 = esl_concat<24,8>(tmp_44_fu_744_p4.read(), ap_const_lv8_0);
}

void MixColumn_AddRoundKe::thread_p_mask_fu_362_p3() {
    p_mask_fu_362_p3 = esl_concat<24,8>(grp_fu_265_p4.read(), ap_const_lv8_0);
}

void MixColumn_AddRoundKe::thread_ret_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ret_address0 =  (sc_lv<5>) (tmp_12_cast_fu_850_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ret_address0 =  (sc_lv<5>) (tmp_2_cast_fu_829_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ret_address0 =  (sc_lv<5>) (tmp_14_cast_reg_940.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ret_address0 =  (sc_lv<5>) (tmp_5_cast_reg_884.read());
    } else {
        ret_address0 = "XXXXX";
    }
}

void MixColumn_AddRoundKe::thread_ret_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ret_address1 =  (sc_lv<5>) (tmp_13_cast_fu_860_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ret_address1 =  (sc_lv<5>) (tmp_4_cast_fu_840_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ret_address1 =  (sc_lv<5>) (tmp_15_cast_reg_950.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ret_address1 =  (sc_lv<5>) (tmp_9_cast_reg_894.read());
    } else {
        ret_address1 = "XXXXX";
    }
}

void MixColumn_AddRoundKe::thread_ret_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ret_ce0 = ap_const_logic_1;
    } else {
        ret_ce0 = ap_const_logic_0;
    }
}

void MixColumn_AddRoundKe::thread_ret_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ret_ce1 = ap_const_logic_1;
    } else {
        ret_ce1 = ap_const_logic_0;
    }
}

void MixColumn_AddRoundKe::thread_ret_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ret_d0 = tmp_27_reg_985.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ret_d0 = tmp_15_fu_518_p2.read();
    } else {
        ret_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void MixColumn_AddRoundKe::thread_ret_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ret_d1 = tmp_32_reg_990.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ret_d1 = tmp_21_fu_604_p2.read();
    } else {
        ret_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void MixColumn_AddRoundKe::thread_ret_load_1_fu_446_p3() {
    ret_load_1_fu_446_p3 = (!tmp_7_reg_927.read()[0].is_01())? sc_lv<32>(): ((tmp_7_reg_927.read()[0].to_bool())? tmp_8_fu_440_p2.read(): tmp_18_fu_435_p2.read());
}

void MixColumn_AddRoundKe::thread_ret_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ret_we0 = ap_const_logic_1;
    } else {
        ret_we0 = ap_const_logic_0;
    }
}

void MixColumn_AddRoundKe::thread_ret_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ret_we1 = ap_const_logic_1;
    } else {
        ret_we1 = ap_const_logic_0;
    }
}

void MixColumn_AddRoundKe::thread_statemt_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        statemt_address0 =  (sc_lv<5>) (tmp_12_cast_reg_1029.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        statemt_address0 =  (sc_lv<5>) (tmp_2_cast_reg_1009.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        statemt_address0 =  (sc_lv<5>) (tmp_14_cast_fu_381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        statemt_address0 =  (sc_lv<5>) (tmp_5_cast_fu_321_p1.read());
    } else {
        statemt_address0 = "XXXXX";
    }
}

void MixColumn_AddRoundKe::thread_statemt_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        statemt_address1 =  (sc_lv<5>) (tmp_13_cast_reg_1039.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        statemt_address1 =  (sc_lv<5>) (tmp_4_cast_reg_1019.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        statemt_address1 =  (sc_lv<5>) (tmp_15_cast_fu_391_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        statemt_address1 =  (sc_lv<5>) (tmp_9_cast_fu_332_p1.read());
    } else {
        statemt_address1 = "XXXXX";
    }
}

void MixColumn_AddRoundKe::thread_statemt_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        statemt_ce0 = ap_const_logic_1;
    } else {
        statemt_ce0 = ap_const_logic_0;
    }
}

void MixColumn_AddRoundKe::thread_statemt_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        statemt_ce1 = ap_const_logic_1;
    } else {
        statemt_ce1 = ap_const_logic_0;
    }
}

void MixColumn_AddRoundKe::thread_statemt_d0() {
    statemt_d0 = ret_q0.read();
}

void MixColumn_AddRoundKe::thread_statemt_d1() {
    statemt_d1 = ret_q1.read();
}

void MixColumn_AddRoundKe::thread_statemt_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        statemt_we0 = ap_const_logic_1;
    } else {
        statemt_we0 = ap_const_logic_0;
    }
}

void MixColumn_AddRoundKe::thread_statemt_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        statemt_we1 = ap_const_logic_1;
    } else {
        statemt_we1 = ap_const_logic_0;
    }
}

void MixColumn_AddRoundKe::thread_storemerge1_v_fu_774_p3() {
    storemerge1_v_fu_774_p3 = (!tmp_30_fu_762_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_30_fu_762_p2.read()[0].to_bool())? tmp_31_fu_768_p2.read(): x_7_fu_739_p2.read());
}

void MixColumn_AddRoundKe::thread_storemerge8_v_fu_580_p3() {
    storemerge8_v_fu_580_p3 = (!tmp_19_fu_568_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_19_fu_568_p2.read()[0].to_bool())? tmp_20_fu_574_p2.read(): x_3_fu_544_p2.read());
}

void MixColumn_AddRoundKe::thread_storemerge9_v_fu_681_p3() {
    storemerge9_v_fu_681_p3 = (!tmp_25_fu_669_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_fu_669_p2.read()[0].to_bool())? tmp_26_fu_675_p2.read(): x_5_fu_645_p2.read());
}

void MixColumn_AddRoundKe::thread_storemerge_v_fu_493_p3() {
    storemerge_v_fu_493_p3 = (!tmp_1_fu_481_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_1_fu_481_p2.read()[0].to_bool())? tmp_3_fu_487_p2.read(): x_1_fu_458_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp10_fu_782_p2() {
    tmp10_fu_782_p2 = (statemt_q0.read() ^ x_reg_932.read());
}

void MixColumn_AddRoundKe::thread_tmp11_fu_793_p2() {
    tmp11_fu_793_p2 = (tmp12_fu_787_p2.read() ^ word_q1.read());
}

void MixColumn_AddRoundKe::thread_tmp12_fu_787_p2() {
    tmp12_fu_787_p2 = (storemerge1_v_fu_774_p3.read() ^ tmp_43_tmp_s_fu_731_p3.read());
}

void MixColumn_AddRoundKe::thread_tmp1_fu_501_p2() {
    tmp1_fu_501_p2 = (statemt_q0.read() ^ statemt_q1.read());
}

void MixColumn_AddRoundKe::thread_tmp2_fu_513_p2() {
    tmp2_fu_513_p2 = (tmp3_fu_507_p2.read() ^ word_load_reg_970.read());
}

void MixColumn_AddRoundKe::thread_tmp3_fu_507_p2() {
    tmp3_fu_507_p2 = (ret_load_1_fu_446_p3.read() ^ storemerge_v_fu_493_p3.read());
}

void MixColumn_AddRoundKe::thread_tmp4_fu_588_p2() {
    tmp4_fu_588_p2 = (statemt_q1.read() ^ x_6_reg_919.read());
}

void MixColumn_AddRoundKe::thread_tmp5_fu_599_p2() {
    tmp5_fu_599_p2 = (tmp6_fu_593_p2.read() ^ word_load_1_reg_980.read());
}

void MixColumn_AddRoundKe::thread_tmp6_fu_593_p2() {
    tmp6_fu_593_p2 = (storemerge8_v_fu_580_p3.read() ^ tmp_23_tmp_s_fu_531_p3.read());
}

void MixColumn_AddRoundKe::thread_tmp7_fu_689_p2() {
    tmp7_fu_689_p2 = (x_reg_932.read() ^ x_6_reg_919.read());
}

void MixColumn_AddRoundKe::thread_tmp8_fu_699_p2() {
    tmp8_fu_699_p2 = (tmp9_fu_693_p2.read() ^ word_q0.read());
}

void MixColumn_AddRoundKe::thread_tmp9_fu_693_p2() {
    tmp9_fu_693_p2 = (storemerge9_v_fu_681_p3.read() ^ tmp_33_tmp_s_fu_631_p3.read());
}

void MixColumn_AddRoundKe::thread_tmp_10_fu_376_p2() {
    tmp_10_fu_376_p2 = (tmp_5_reg_878.read() | ap_const_lv4_2);
}

void MixColumn_AddRoundKe::thread_tmp_11_fu_386_p2() {
    tmp_11_fu_386_p2 = (tmp_5_reg_878.read() | ap_const_lv4_3);
}

void MixColumn_AddRoundKe::thread_tmp_12_cast_fu_850_p1() {
    tmp_12_cast_fu_850_p1 = esl_zext<32,4>(tmp_12_fu_845_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_12_fu_845_p2() {
    tmp_12_fu_845_p2 = (tmp_2_reg_1003.read() | ap_const_lv4_2);
}

void MixColumn_AddRoundKe::thread_tmp_13_cast_fu_860_p1() {
    tmp_13_cast_fu_860_p1 = esl_zext<32,4>(tmp_13_fu_855_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_13_fu_855_p2() {
    tmp_13_fu_855_p2 = (tmp_2_reg_1003.read() | ap_const_lv4_3);
}

void MixColumn_AddRoundKe::thread_tmp_14_cast_fu_381_p1() {
    tmp_14_cast_fu_381_p1 = esl_zext<32,4>(tmp_10_fu_376_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_14_fu_337_p2() {
    tmp_14_fu_337_p2 = (!tmp_reg_865.read().is_01() || !j_cast1_fu_293_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_reg_865.read()) + sc_biguint<6>(j_cast1_fu_293_p1.read()));
}

void MixColumn_AddRoundKe::thread_tmp_15_cast_fu_391_p1() {
    tmp_15_cast_fu_391_p1 = esl_zext<32,4>(tmp_11_fu_386_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_15_fu_518_p2() {
    tmp_15_fu_518_p2 = (tmp2_fu_513_p2.read() ^ tmp1_fu_501_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_16_cast_cast1_fu_396_p1() {
    tmp_16_cast_cast1_fu_396_p1 = esl_zext<9,6>(tmp_14_reg_904.read());
}

void MixColumn_AddRoundKe::thread_tmp_16_cast_cast_fu_347_p1() {
    tmp_16_cast_cast_fu_347_p1 = esl_zext<8,6>(tmp_14_fu_337_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_16_cast_fu_342_p1() {
    tmp_16_cast_fu_342_p1 = esl_zext<32,6>(tmp_14_fu_337_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_16_fu_429_p2() {
    tmp_16_fu_429_p2 = (!p_mask2_fu_421_p3.read().is_01() || !ap_const_lv32_100.is_01())? sc_lv<1>(): sc_lv<1>(p_mask2_fu_421_p3.read() == ap_const_lv32_100);
}

void MixColumn_AddRoundKe::thread_tmp_17_fu_525_p2() {
    tmp_17_fu_525_p2 = (tmp_24_fu_453_p2.read() ^ ap_const_lv32_11B);
}

void MixColumn_AddRoundKe::thread_tmp_18_fu_435_p2() {
    tmp_18_fu_435_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): x_6_reg_919.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void MixColumn_AddRoundKe::thread_tmp_19_fu_568_p2() {
    tmp_19_fu_568_p2 = (!p_mask3_fu_560_p3.read().is_01() || !ap_const_lv32_100.is_01())? sc_lv<1>(): sc_lv<1>(p_mask3_fu_560_p3.read() == ap_const_lv32_100);
}

void MixColumn_AddRoundKe::thread_tmp_1_fu_481_p2() {
    tmp_1_fu_481_p2 = (!p_mask1_fu_473_p3.read().is_01() || !ap_const_lv32_100.is_01())? sc_lv<1>(): sc_lv<1>(p_mask1_fu_473_p3.read() == ap_const_lv32_100);
}

void MixColumn_AddRoundKe::thread_tmp_20_fu_574_p2() {
    tmp_20_fu_574_p2 = (x_3_fu_544_p2.read() ^ ap_const_lv32_11B);
}

void MixColumn_AddRoundKe::thread_tmp_21_fu_604_p2() {
    tmp_21_fu_604_p2 = (tmp5_fu_599_p2.read() ^ tmp4_fu_588_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_22_fu_619_p2() {
    tmp_22_fu_619_p2 = (!p_mask4_fu_611_p3.read().is_01() || !ap_const_lv32_100.is_01())? sc_lv<1>(): sc_lv<1>(p_mask4_fu_611_p3.read() == ap_const_lv32_100);
}

void MixColumn_AddRoundKe::thread_tmp_23_fu_625_p2() {
    tmp_23_fu_625_p2 = (tmp_38_fu_538_p2.read() ^ ap_const_lv32_11B);
}

void MixColumn_AddRoundKe::thread_tmp_23_tmp_s_fu_531_p3() {
    tmp_23_tmp_s_fu_531_p3 = (!tmp_16_reg_975.read()[0].is_01())? sc_lv<32>(): ((tmp_16_reg_975.read()[0].to_bool())? tmp_17_fu_525_p2.read(): tmp_24_fu_453_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_24_fu_453_p2() {
    tmp_24_fu_453_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): x_reg_932.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void MixColumn_AddRoundKe::thread_tmp_25_fu_669_p2() {
    tmp_25_fu_669_p2 = (!p_mask5_fu_661_p3.read().is_01() || !ap_const_lv32_100.is_01())? sc_lv<1>(): sc_lv<1>(p_mask5_fu_661_p3.read() == ap_const_lv32_100);
}

void MixColumn_AddRoundKe::thread_tmp_26_fu_675_p2() {
    tmp_26_fu_675_p2 = (x_5_fu_645_p2.read() ^ ap_const_lv32_11B);
}

void MixColumn_AddRoundKe::thread_tmp_27_fu_705_p2() {
    tmp_27_fu_705_p2 = (tmp8_fu_699_p2.read() ^ tmp7_fu_689_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_28_fu_719_p2() {
    tmp_28_fu_719_p2 = (!p_mask6_fu_711_p3.read().is_01() || !ap_const_lv32_100.is_01())? sc_lv<1>(): sc_lv<1>(p_mask6_fu_711_p3.read() == ap_const_lv32_100);
}

void MixColumn_AddRoundKe::thread_tmp_29_fu_725_p2() {
    tmp_29_fu_725_p2 = (tmp_41_fu_639_p2.read() ^ ap_const_lv32_11B);
}

void MixColumn_AddRoundKe::thread_tmp_2_cast_fu_829_p1() {
    tmp_2_cast_fu_829_p1 = esl_zext<32,4>(tmp_2_fu_821_p3.read());
}

void MixColumn_AddRoundKe::thread_tmp_2_fu_821_p3() {
    tmp_2_fu_821_p3 = esl_concat<2,2>(tmp_45_fu_817_p1.read(), ap_const_lv2_0);
}

void MixColumn_AddRoundKe::thread_tmp_30_fu_762_p2() {
    tmp_30_fu_762_p2 = (!p_mask7_fu_754_p3.read().is_01() || !ap_const_lv32_100.is_01())? sc_lv<1>(): sc_lv<1>(p_mask7_fu_754_p3.read() == ap_const_lv32_100);
}

void MixColumn_AddRoundKe::thread_tmp_31_fu_768_p2() {
    tmp_31_fu_768_p2 = (x_7_fu_739_p2.read() ^ ap_const_lv32_11B);
}

void MixColumn_AddRoundKe::thread_tmp_32_fu_799_p2() {
    tmp_32_fu_799_p2 = (tmp11_fu_793_p2.read() ^ tmp10_fu_782_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_33_fu_463_p4() {
    tmp_33_fu_463_p4 = x_1_fu_458_p2.read().range(31, 8);
}

void MixColumn_AddRoundKe::thread_tmp_33_tmp_s_fu_631_p3() {
    tmp_33_tmp_s_fu_631_p3 = (!tmp_22_fu_619_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_22_fu_619_p2.read()[0].to_bool())? tmp_23_fu_625_p2.read(): tmp_38_fu_538_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_34_fu_351_p2() {
    tmp_34_fu_351_p2 = (!ap_const_lv8_78.is_01() || !tmp_16_cast_cast_fu_347_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_78) + sc_biguint<8>(tmp_16_cast_cast_fu_347_p1.read()));
}

void MixColumn_AddRoundKe::thread_tmp_35_fu_399_p2() {
    tmp_35_fu_399_p2 = (!ap_const_lv9_F0.is_01() || !tmp_16_cast_cast1_fu_396_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_F0) + sc_biguint<9>(tmp_16_cast_cast1_fu_396_p1.read()));
}

void MixColumn_AddRoundKe::thread_tmp_36_fu_410_p2() {
    tmp_36_fu_410_p2 = (!ap_const_lv9_168.is_01() || !tmp_16_cast_cast1_fu_396_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_168) + sc_biguint<9>(tmp_16_cast_cast1_fu_396_p1.read()));
}

void MixColumn_AddRoundKe::thread_tmp_38_cast_fu_357_p1() {
    tmp_38_cast_fu_357_p1 = esl_zext<32,8>(tmp_34_fu_351_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_38_fu_538_p2() {
    tmp_38_fu_538_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): statemt_q0.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void MixColumn_AddRoundKe::thread_tmp_39_cast_fu_405_p1() {
    tmp_39_cast_fu_405_p1 = esl_zext<32,9>(tmp_35_fu_399_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_39_fu_550_p4() {
    tmp_39_fu_550_p4 = x_3_fu_544_p2.read().range(31, 8);
}

void MixColumn_AddRoundKe::thread_tmp_3_fu_487_p2() {
    tmp_3_fu_487_p2 = (x_1_fu_458_p2.read() ^ ap_const_lv32_11B);
}

void MixColumn_AddRoundKe::thread_tmp_40_cast_fu_416_p1() {
    tmp_40_cast_fu_416_p1 = esl_zext<32,9>(tmp_36_fu_410_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_41_fu_639_p2() {
    tmp_41_fu_639_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): statemt_q1.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void MixColumn_AddRoundKe::thread_tmp_42_fu_651_p4() {
    tmp_42_fu_651_p4 = x_5_fu_645_p2.read().range(31, 8);
}

void MixColumn_AddRoundKe::thread_tmp_43_tmp_s_fu_731_p3() {
    tmp_43_tmp_s_fu_731_p3 = (!tmp_28_fu_719_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_28_fu_719_p2.read()[0].to_bool())? tmp_29_fu_725_p2.read(): tmp_41_fu_639_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_44_fu_744_p4() {
    tmp_44_fu_744_p4 = x_7_fu_739_p2.read().range(31, 8);
}

void MixColumn_AddRoundKe::thread_tmp_45_fu_817_p1() {
    tmp_45_fu_817_p1 = j_1_reg_254.read().range(2-1, 0);
}

void MixColumn_AddRoundKe::thread_tmp_4_cast_fu_840_p1() {
    tmp_4_cast_fu_840_p1 = esl_zext<32,4>(tmp_4_fu_834_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_4_fu_834_p2() {
    tmp_4_fu_834_p2 = (tmp_2_fu_821_p3.read() | ap_const_lv4_1);
}

void MixColumn_AddRoundKe::thread_tmp_5_cast_fu_321_p1() {
    tmp_5_cast_fu_321_p1 = esl_zext<32,4>(tmp_5_fu_313_p3.read());
}

void MixColumn_AddRoundKe::thread_tmp_5_fu_313_p3() {
    tmp_5_fu_313_p3 = esl_concat<2,2>(tmp_6_fu_309_p1.read(), ap_const_lv2_0);
}

void MixColumn_AddRoundKe::thread_tmp_6_fu_309_p1() {
    tmp_6_fu_309_p1 = j_reg_243.read().range(2-1, 0);
}

void MixColumn_AddRoundKe::thread_tmp_7_fu_370_p2() {
    tmp_7_fu_370_p2 = (!p_mask_fu_362_p3.read().is_01() || !ap_const_lv32_100.is_01())? sc_lv<1>(): sc_lv<1>(p_mask_fu_362_p3.read() == ap_const_lv32_100);
}

void MixColumn_AddRoundKe::thread_tmp_8_fu_440_p2() {
    tmp_8_fu_440_p2 = (tmp_18_fu_435_p2.read() ^ ap_const_lv32_11B);
}

void MixColumn_AddRoundKe::thread_tmp_9_cast_fu_332_p1() {
    tmp_9_cast_fu_332_p1 = esl_zext<32,4>(tmp_9_fu_326_p2.read());
}

void MixColumn_AddRoundKe::thread_tmp_9_fu_326_p2() {
    tmp_9_fu_326_p2 = (tmp_5_fu_313_p3.read() | ap_const_lv4_1);
}

void MixColumn_AddRoundKe::thread_tmp_fu_285_p3() {
    tmp_fu_285_p3 = esl_concat<4,2>(n.read(), ap_const_lv2_0);
}

void MixColumn_AddRoundKe::thread_word_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        word_address0 =  (sc_lv<9>) (tmp_39_cast_fu_405_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        word_address0 =  (sc_lv<9>) (tmp_16_cast_fu_342_p1.read());
    } else {
        word_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void MixColumn_AddRoundKe::thread_word_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        word_address1 =  (sc_lv<9>) (tmp_40_cast_fu_416_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        word_address1 =  (sc_lv<9>) (tmp_38_cast_fu_357_p1.read());
    } else {
        word_address1 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void MixColumn_AddRoundKe::thread_word_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        word_ce0 = ap_const_logic_1;
    } else {
        word_ce0 = ap_const_logic_0;
    }
}

void MixColumn_AddRoundKe::thread_word_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        word_ce1 = ap_const_logic_1;
    } else {
        word_ce1 = ap_const_logic_0;
    }
}

void MixColumn_AddRoundKe::thread_x_1_fu_458_p2() {
    x_1_fu_458_p2 = (x_reg_932.read() ^ tmp_24_fu_453_p2.read());
}

void MixColumn_AddRoundKe::thread_x_3_fu_544_p2() {
    x_3_fu_544_p2 = (statemt_q0.read() ^ tmp_38_fu_538_p2.read());
}

void MixColumn_AddRoundKe::thread_x_5_fu_645_p2() {
    x_5_fu_645_p2 = (statemt_q1.read() ^ tmp_41_fu_639_p2.read());
}

void MixColumn_AddRoundKe::thread_x_7_fu_739_p2() {
    x_7_fu_739_p2 = (x_6_reg_919.read() ^ tmp_18_fu_435_p2.read());
}

void MixColumn_AddRoundKe::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_297_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond_fu_805_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

